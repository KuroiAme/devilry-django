-- CREATE OR REPLACE FUNCTION devilry_dbcache_on_group_or_imageannotationcomment_change_func_wrapper() RETURNS TRIGGER AS $$
-- DECLARE
--        var_record record;
-- BEGIN
--     IF TG_OP = 'INSERT' OR TG_OP = 'DELETE' THEN
--         IF TG_OP = 'INSERT' THEN
--             var_record = NEW;
--         ELSEIF TG_OP = 'DELETE' THEN
--             var_record = OLD;
--         END IF;
--         PERFORM devilry_dbcache_on_group_or_imageannotationcomment_change(TG_OP, var_record.feedback_set_id,
--                                                                           var_record.comment_ptr_id,
--                                                                           var_record.visibility);
--     END IF;
--     RETURN var_record;
-- END
-- $$ LANGUAGE plpgsql;
--
--
-- DROP TRIGGER IF EXISTS devilry_dbcache_on_group_change_trigger
--     ON devilry_group_groupcomment;
-- CREATE TRIGGER devilry_dbcache_on_group_change_trigger
--     AFTER INSERT OR DELETE ON devilry_group_groupcomment
--     FOR EACH ROW
--         EXECUTE PROCEDURE devilry_dbcache_on_group_or_imageannotationcomment_change_func_wrapper();
--
-- DROP TRIGGER IF EXISTS devilry_dbcache_on_group_imageannotationcomment_trigger
--     ON devilry_group_imageannotationcomment;
-- CREATE TRIGGER devilry_dbcache_on_group_imageannotationcomment_trigger
--     AFTER INSERT OR DELETE ON devilry_group_imageannotationcomment
--     FOR EACH ROW
--         EXECUTE PROCEDURE devilry_dbcache_on_group_or_imageannotationcomment_change_func_wrapper();
--
--
--
-- CREATE OR REPLACE FUNCTION devilry_dbcache_on_file_upload_change_func_wrapper() RETURNS TRIGGER AS $$
-- DECLARE
--     var_record record;
-- BEGIN
--     IF TG_OP = 'INSERT' OR TG_OP = 'DELETE' THEN
--         IF TG_OP = 'INSERT' THEN
--             var_record = NEW;
--         ELSEIF TG_OP = 'DELETE' THEN
--             var_record = OLD;
--         END IF;
--         PERFORM devilry_dbcache_on_file_upload_change(TG_OP, var_record.comment_id);
--     END IF;
--     RETURN var_record;
-- END
-- $$ LANGUAGE plpgsql;
--
-- DROP TRIGGER IF EXISTS devilry_dbcache_on_file_upload_change_trigger
--     ON devilry_comment_commentfile;
-- CREATE TRIGGER devilry_dbcache_on_file_upload_change_trigger
--     AFTER INSERT OR UPDATE OR DELETE ON devilry_comment_commentfile
--     FOR EACH ROW
--         EXECUTE PROCEDURE devilry_dbcache_on_file_upload_change_func_wrapper();
