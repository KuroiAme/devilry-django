/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*******************************************!*\
  !*** ./scripts/javascript/devilry_all.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _DownloadCompressedArchiveWidget = __webpack_require__(/*! ./widgets/DownloadCompressedArchiveWidget */ 1);\n\nvar _DownloadCompressedArchiveWidget2 = _interopRequireDefault(_DownloadCompressedArchiveWidget);\n\nvar _DownloadCompressedArchiveStartButtonWidget = __webpack_require__(/*! ./widgets/DownloadCompressedArchiveStartButtonWidget */ 20);\n\nvar _DownloadCompressedArchiveStartButtonWidget2 = _interopRequireDefault(_DownloadCompressedArchiveStartButtonWidget);\n\nvar _DownloadCompressedArchiveDownloadLinkWidget = __webpack_require__(/*! ./widgets/DownloadCompressedArchiveDownloadLinkWidget */ 21);\n\nvar _DownloadCompressedArchiveDownloadLinkWidget2 = _interopRequireDefault(_DownloadCompressedArchiveDownloadLinkWidget);\n\nvar _GradingConfigurationWidget = __webpack_require__(/*! ./widgets/GradingConfigurationWidget */ 22);\n\nvar _GradingConfigurationWidget2 = _interopRequireDefault(_GradingConfigurationWidget);\n\nvar _GradingConfigurationCustomTableWidget = __webpack_require__(/*! ./widgets/GradingConfigurationCustomTableWidget */ 24);\n\nvar _GradingConfigurationCustomTableWidget2 = _interopRequireDefault(_GradingConfigurationCustomTableWidget);\n\nvar _LoggerSingleton = __webpack_require__(/*! ievv_jsbase/lib/log/LoggerSingleton */ 16);\n\nvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\nvar _loglevel = __webpack_require__(/*! ievv_jsbase/lib/log/loglevel */ 19);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _WidgetRegistrySingleton = __webpack_require__(/*! ievv_jsbase/lib/widget/WidgetRegistrySingleton */ 25);\n\nvar _WidgetRegistrySingleton2 = _interopRequireDefault(_WidgetRegistrySingleton);\n\n__webpack_require__(/*! ./utils/i18nFallbacks */ 26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logger = new _LoggerSingleton2.default();\nlogger.setDefaultLogLevel(_loglevel2.default.INFO);\n\nvar widgetRegistry = new _WidgetRegistrySingleton2.default();\nwidgetRegistry.registerWidgetClass('devilry-download-compressed-archive', _DownloadCompressedArchiveWidget2.default);\nwidgetRegistry.registerWidgetClass('devilry-download-compressed-archive-startbutton', _DownloadCompressedArchiveStartButtonWidget2.default);\nwidgetRegistry.registerWidgetClass('devilry-download-compressed-archive-downloadlink', _DownloadCompressedArchiveDownloadLinkWidget2.default);\nwidgetRegistry.registerWidgetClass('devilry-grading-configuration', _GradingConfigurationWidget2.default);\nwidgetRegistry.registerWidgetClass('devilry-grading-configuration-custom-table', _GradingConfigurationCustomTableWidget2.default);\n\nfunction _onDomReady() {\n  // Initialize all widgets in document.body\n  widgetRegistry.initializeAllWidgetsWithinElement(document.body);\n}\n\nif (document.readyState != 'loading') {\n  _onDomReady();\n} else {\n  document.addEventListener('DOMContentLoaded', function () {\n    _onDomReady();\n  });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zY3JpcHRzL2phdmFzY3JpcHQvZGV2aWxyeV9hbGwuanM/NDJiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRG93bmxvYWRDb21wcmVzc2VkQXJjaGl2ZVdpZGdldCBmcm9tIFwiLi93aWRnZXRzL0Rvd25sb2FkQ29tcHJlc3NlZEFyY2hpdmVXaWRnZXRcIjtcbmltcG9ydCBEb3dubG9hZENvbXByZXNzZWRBcmNoaXZlU3RhcnRCdXR0b25XaWRnZXQgZnJvbSBcIi4vd2lkZ2V0cy9Eb3dubG9hZENvbXByZXNzZWRBcmNoaXZlU3RhcnRCdXR0b25XaWRnZXRcIjtcbmltcG9ydCBEb3dubG9hZENvbXByZXNzZWRBcmNoaXZlRG93bmxvYWRMaW5rV2lkZ2V0IGZyb20gXCIuL3dpZGdldHMvRG93bmxvYWRDb21wcmVzc2VkQXJjaGl2ZURvd25sb2FkTGlua1dpZGdldFwiO1xuaW1wb3J0IEdyYWRpbmdDb25maWd1cmF0aW9uV2lkZ2V0IGZyb20gXCIuL3dpZGdldHMvR3JhZGluZ0NvbmZpZ3VyYXRpb25XaWRnZXRcIjtcbmltcG9ydCBHcmFkaW5nQ29uZmlndXJhdGlvbkN1c3RvbVRhYmxlV2lkZ2V0IGZyb20gXCIuL3dpZGdldHMvR3JhZGluZ0NvbmZpZ3VyYXRpb25DdXN0b21UYWJsZVdpZGdldFwiO1xuaW1wb3J0IExvZ2dlclNpbmdsZXRvbiBmcm9tIFwiaWV2dl9qc2Jhc2UvbGliL2xvZy9Mb2dnZXJTaW5nbGV0b25cIjtcbmltcG9ydCBMT0dMRVZFTCBmcm9tIFwiaWV2dl9qc2Jhc2UvbGliL2xvZy9sb2dsZXZlbFwiO1xuaW1wb3J0IFdpZGdldFJlZ2lzdHJ5U2luZ2xldG9uIGZyb20gXCJpZXZ2X2pzYmFzZS9saWIvd2lkZ2V0L1dpZGdldFJlZ2lzdHJ5U2luZ2xldG9uXCI7XG5pbXBvcnQgJy4vdXRpbHMvaTE4bkZhbGxiYWNrcydcblxuY29uc3QgbG9nZ2VyID0gbmV3IExvZ2dlclNpbmdsZXRvbigpO1xubG9nZ2VyLnNldERlZmF1bHRMb2dMZXZlbChMT0dMRVZFTC5JTkZPKTtcblxuY29uc3Qgd2lkZ2V0UmVnaXN0cnkgPSBuZXcgV2lkZ2V0UmVnaXN0cnlTaW5nbGV0b24oKTtcbndpZGdldFJlZ2lzdHJ5LnJlZ2lzdGVyV2lkZ2V0Q2xhc3MoJ2RldmlscnktZG93bmxvYWQtY29tcHJlc3NlZC1hcmNoaXZlJyxcbiAgRG93bmxvYWRDb21wcmVzc2VkQXJjaGl2ZVdpZGdldCk7XG53aWRnZXRSZWdpc3RyeS5yZWdpc3RlcldpZGdldENsYXNzKCdkZXZpbHJ5LWRvd25sb2FkLWNvbXByZXNzZWQtYXJjaGl2ZS1zdGFydGJ1dHRvbicsXG4gIERvd25sb2FkQ29tcHJlc3NlZEFyY2hpdmVTdGFydEJ1dHRvbldpZGdldCk7XG53aWRnZXRSZWdpc3RyeS5yZWdpc3RlcldpZGdldENsYXNzKCdkZXZpbHJ5LWRvd25sb2FkLWNvbXByZXNzZWQtYXJjaGl2ZS1kb3dubG9hZGxpbmsnLFxuICBEb3dubG9hZENvbXByZXNzZWRBcmNoaXZlRG93bmxvYWRMaW5rV2lkZ2V0KTtcbndpZGdldFJlZ2lzdHJ5LnJlZ2lzdGVyV2lkZ2V0Q2xhc3MoJ2RldmlscnktZ3JhZGluZy1jb25maWd1cmF0aW9uJyxcbiAgR3JhZGluZ0NvbmZpZ3VyYXRpb25XaWRnZXQpO1xud2lkZ2V0UmVnaXN0cnkucmVnaXN0ZXJXaWRnZXRDbGFzcygnZGV2aWxyeS1ncmFkaW5nLWNvbmZpZ3VyYXRpb24tY3VzdG9tLXRhYmxlJyxcbiAgR3JhZGluZ0NvbmZpZ3VyYXRpb25DdXN0b21UYWJsZVdpZGdldCk7XG5cbmZ1bmN0aW9uIF9vbkRvbVJlYWR5KCkge1xuICAvLyBJbml0aWFsaXplIGFsbCB3aWRnZXRzIGluIGRvY3VtZW50LmJvZHlcbiAgd2lkZ2V0UmVnaXN0cnkuaW5pdGlhbGl6ZUFsbFdpZGdldHNXaXRoaW5FbGVtZW50KGRvY3VtZW50LmJvZHkpO1xufVxuXG5pZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPSAnbG9hZGluZycpe1xuICBfb25Eb21SZWFkeSgpO1xufSBlbHNlIHtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICBfb25Eb21SZWFkeSgpO1xuICB9KTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzY3JpcHRzL2phdmFzY3JpcHQvZGV2aWxyeV9hbGwuanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/*!***********************************************************************!*\
  !*** ./scripts/javascript/widgets/DownloadCompressedArchiveWidget.js ***!
  \***********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AbstractWidget2 = __webpack_require__(/*! ievv_jsbase/lib/widget/AbstractWidget */ 2);\n\nvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\nvar _HttpDjangoJsonRequest = __webpack_require__(/*! ievv_jsbase/lib/http/HttpDjangoJsonRequest */ 5);\n\nvar _HttpDjangoJsonRequest2 = _interopRequireDefault(_HttpDjangoJsonRequest);\n\nvar _HttpJsonRequest = __webpack_require__(/*! ievv_jsbase/lib/http/HttpJsonRequest */ 6);\n\nvar _HttpJsonRequest2 = _interopRequireDefault(_HttpJsonRequest);\n\nvar _SignalHandlerSingleton = __webpack_require__(/*! ievv_jsbase/lib/SignalHandlerSingleton */ 14);\n\nvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\nvar _LoggerSingleton = __webpack_require__(/*! ievv_jsbase/lib/log/LoggerSingleton */ 16);\n\nvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DownloadCompressedArchiveWidget = function (_AbstractWidget) {\n  _inherits(DownloadCompressedArchiveWidget, _AbstractWidget);\n\n  function DownloadCompressedArchiveWidget(element) {\n    _classCallCheck(this, DownloadCompressedArchiveWidget);\n\n    var _this = _possibleConstructorReturn(this, (DownloadCompressedArchiveWidget.__proto__ || Object.getPrototypeOf(DownloadCompressedArchiveWidget)).call(this, element));\n\n    _this.status = null;\n    _this.cssClassPrefix = 'devilry-batchprocessed-download';\n    _this.pollCount = 0;\n    _this.statuses = ['none', 'not-created', 'not-started', 'running', 'finished'];\n    _this._onStartSignal = _this._onStartSignal.bind(_this);\n    _this.logger = new _LoggerSingleton2.default().getLogger('devilry.DownloadCompressedArchiveWidget');\n    _this.signalHandler = new _SignalHandlerSingleton2.default();\n    _this.processingStartedTime = null;\n    _this.signalHandler.addReceiver(_this.config.signalNameSpace + \".Start\", _this.config.signalNameSpace + \".MainReceiver\", _this._onStartSignal);\n\n    _this._requestStatusUpdate();\n    return _this;\n  }\n\n  _createClass(DownloadCompressedArchiveWidget, [{\n    key: \"_updateCssClassesFromStatus\",\n    value: function _updateCssClassesFromStatus() {\n      this.element.classList.remove(this.cssClassPrefix + \"--finished-within-same-session\");\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.statuses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var status = _step.value;\n\n          this.element.classList.remove(this.cssClassPrefix + \"--\" + status);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.element.classList.add(this.cssClassPrefix + \"--\" + this.status);\n      if (this.status == 'finished' && this.processingStartedTime != null) {\n        this.element.classList.add(this.cssClassPrefix + \"--finished-within-same-session\");\n      }\n    }\n  }, {\n    key: \"_requestStatusUpdate\",\n    value: function _requestStatusUpdate() {\n      var _this2 = this;\n\n      if (this.isLoading) {\n        return;\n      }\n      new _HttpJsonRequest2.default(this.config.apiurl).get().then(function (response) {\n        _this2._handleApiResponse(response, 'GET');\n      }).catch(function (error) {\n        throw error;\n      });\n    }\n  }, {\n    key: \"_handleFinishedStatus\",\n    value: function _handleFinishedStatus(response) {\n      this.logger.debug('Download finished processing', response.bodydata);\n      this.element.setAttribute('href', response.bodydata.download_link);\n      this.signalHandler.send(this.config.signalNameSpace + \".Finished\", response.bodydata);\n    }\n  }, {\n    key: \"_handleNoFilesStatus\",\n    value: function _handleNoFilesStatus() {\n      this.element.style.display = 'none';\n    }\n  }, {\n    key: \"_handleApiResponse\",\n    value: function _handleApiResponse(response, method) {\n      var _this3 = this;\n\n      this.pollCount++;\n      this.logger.debug(method + \" \" + this.config.apiurl + \":\", response.bodydata);\n      this.status = response.bodydata.status;\n      this._updateCssClassesFromStatus();\n      if (this.status == 'not-created') {\n        return; // Do nothing - wait for someone to click the button and start the processing\n      }\n      if (this.status == 'not-started' || this.status == 'running') {\n        window.setTimeout(function () {\n          _this3._requestStatusUpdate();\n        }, this._pollDelayMilliseconds);\n      } else if (this.status == 'finished') {\n        this._handleFinishedStatus(response);\n      } else if (this.status == 'no-files') {\n        this._handleNoFilesStatus(response);\n      } else {\n        throw new Error(\"Invalid status: \" + this.status);\n      }\n    }\n  }, {\n    key: \"_onStartSignal\",\n    value: function _onStartSignal() {\n      var _this4 = this;\n\n      this.logger.debug('Start signal received');\n      if (this.status == 'finished') {\n        return;\n      }\n      this.processingStartedTime = new Date();\n      new _HttpDjangoJsonRequest2.default(this.config.apiurl).post().then(function (response) {\n        _this4._handleApiResponse(response, 'POST');\n      }).catch(function (error) {\n        throw error;\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.signalHandler.removeAllSignalsFromReceiver(this.config.signalNameSpace + \".MainReceiver\");\n    }\n  }, {\n    key: \"_pollDelayMilliseconds\",\n    get: function get() {\n      if (this.pollCount < 3) {\n        return 700;\n      } else if (this.pollCount < 10) {\n        return 2000;\n      } else {\n        return 5000;\n      }\n    }\n  }]);\n\n  return DownloadCompressedArchiveWidget;\n}(_AbstractWidget3.default);\n\nexports.default = DownloadCompressedArchiveWidget;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zY3JpcHRzL2phdmFzY3JpcHQvd2lkZ2V0cy9Eb3dubG9hZENvbXByZXNzZWRBcmNoaXZlV2lkZ2V0LmpzPzY1ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFic3RyYWN0V2lkZ2V0IGZyb20gXCJpZXZ2X2pzYmFzZS9saWIvd2lkZ2V0L0Fic3RyYWN0V2lkZ2V0XCI7XG5pbXBvcnQgSHR0cERqYW5nb0pzb25SZXF1ZXN0IGZyb20gXCJpZXZ2X2pzYmFzZS9saWIvaHR0cC9IdHRwRGphbmdvSnNvblJlcXVlc3RcIjtcbmltcG9ydCBIdHRwSnNvblJlcXVlc3QgZnJvbSBcImlldnZfanNiYXNlL2xpYi9odHRwL0h0dHBKc29uUmVxdWVzdFwiO1xuaW1wb3J0IFNpZ25hbEhhbmRsZXJTaW5nbGV0b24gZnJvbSBcImlldnZfanNiYXNlL2xpYi9TaWduYWxIYW5kbGVyU2luZ2xldG9uXCI7XG5pbXBvcnQgTG9nZ2VyU2luZ2xldG9uIGZyb20gXCJpZXZ2X2pzYmFzZS9saWIvbG9nL0xvZ2dlclNpbmdsZXRvblwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb3dubG9hZENvbXByZXNzZWRBcmNoaXZlV2lkZ2V0IGV4dGVuZHMgQWJzdHJhY3RXaWRnZXQge1xuICBjb25zdHJ1Y3RvcihlbGVtZW50KSB7XG4gICAgc3VwZXIoZWxlbWVudCk7XG4gICAgdGhpcy5zdGF0dXMgPSBudWxsO1xuICAgIHRoaXMuY3NzQ2xhc3NQcmVmaXggPSAnZGV2aWxyeS1iYXRjaHByb2Nlc3NlZC1kb3dubG9hZCc7XG4gICAgdGhpcy5wb2xsQ291bnQgPSAwO1xuICAgIHRoaXMuc3RhdHVzZXMgPSBbXG4gICAgICAnbm9uZScsXG4gICAgICAnbm90LWNyZWF0ZWQnLFxuICAgICAgJ25vdC1zdGFydGVkJyxcbiAgICAgICdydW5uaW5nJyxcbiAgICAgICdmaW5pc2hlZCddO1xuICAgIHRoaXMuX29uU3RhcnRTaWduYWwgPSB0aGlzLl9vblN0YXJ0U2lnbmFsLmJpbmQodGhpcyk7XG4gICAgdGhpcy5sb2dnZXIgPSBuZXcgTG9nZ2VyU2luZ2xldG9uKCkuZ2V0TG9nZ2VyKFxuICAgICAgJ2RldmlscnkuRG93bmxvYWRDb21wcmVzc2VkQXJjaGl2ZVdpZGdldCcpO1xuICAgIHRoaXMuc2lnbmFsSGFuZGxlciA9IG5ldyBTaWduYWxIYW5kbGVyU2luZ2xldG9uKCk7XG4gICAgdGhpcy5wcm9jZXNzaW5nU3RhcnRlZFRpbWUgPSBudWxsO1xuICAgIHRoaXMuc2lnbmFsSGFuZGxlci5hZGRSZWNlaXZlcihcbiAgICAgIGAke3RoaXMuY29uZmlnLnNpZ25hbE5hbWVTcGFjZX0uU3RhcnRgLFxuICAgICAgYCR7dGhpcy5jb25maWcuc2lnbmFsTmFtZVNwYWNlfS5NYWluUmVjZWl2ZXJgLFxuICAgICAgdGhpcy5fb25TdGFydFNpZ25hbCk7XG5cbiAgICB0aGlzLl9yZXF1ZXN0U3RhdHVzVXBkYXRlKCk7XG4gIH1cblxuICBfdXBkYXRlQ3NzQ2xhc3Nlc0Zyb21TdGF0dXMoKSB7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoYCR7dGhpcy5jc3NDbGFzc1ByZWZpeH0tLWZpbmlzaGVkLXdpdGhpbi1zYW1lLXNlc3Npb25gKTtcbiAgICBmb3IobGV0IHN0YXR1cyBvZiB0aGlzLnN0YXR1c2VzKSB7XG4gICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShgJHt0aGlzLmNzc0NsYXNzUHJlZml4fS0tJHtzdGF0dXN9YCk7XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKGAke3RoaXMuY3NzQ2xhc3NQcmVmaXh9LS0ke3RoaXMuc3RhdHVzfWApO1xuICAgIGlmKHRoaXMuc3RhdHVzID09ICdmaW5pc2hlZCcgJiYgdGhpcy5wcm9jZXNzaW5nU3RhcnRlZFRpbWUgIT0gbnVsbCkge1xuICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoYCR7dGhpcy5jc3NDbGFzc1ByZWZpeH0tLWZpbmlzaGVkLXdpdGhpbi1zYW1lLXNlc3Npb25gKTtcbiAgICB9XG4gIH1cblxuICBfcmVxdWVzdFN0YXR1c1VwZGF0ZSgpIHtcbiAgICBpZih0aGlzLmlzTG9hZGluZykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBuZXcgSHR0cEpzb25SZXF1ZXN0KHRoaXMuY29uZmlnLmFwaXVybCkuZ2V0KClcbiAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICB0aGlzLl9oYW5kbGVBcGlSZXNwb25zZShyZXNwb25zZSwgJ0dFVCcpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9KTtcbiAgfVxuXG4gIF9oYW5kbGVGaW5pc2hlZFN0YXR1cyhyZXNwb25zZSkge1xuICAgIHRoaXMubG9nZ2VyLmRlYnVnKCdEb3dubG9hZCBmaW5pc2hlZCBwcm9jZXNzaW5nJywgcmVzcG9uc2UuYm9keWRhdGEpO1xuICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCByZXNwb25zZS5ib2R5ZGF0YS5kb3dubG9hZF9saW5rKTtcbiAgICB0aGlzLnNpZ25hbEhhbmRsZXIuc2VuZChgJHt0aGlzLmNvbmZpZy5zaWduYWxOYW1lU3BhY2V9LkZpbmlzaGVkYCxcbiAgICAgIHJlc3BvbnNlLmJvZHlkYXRhKTtcbiAgfVxuXG4gIF9oYW5kbGVOb0ZpbGVzU3RhdHVzKCkge1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB9XG5cbiAgZ2V0IF9wb2xsRGVsYXlNaWxsaXNlY29uZHMoKSB7XG4gICAgaWYodGhpcy5wb2xsQ291bnQgPCAzKSB7XG4gICAgICByZXR1cm4gNzAwO1xuICAgIH0gZWxzZSBpZih0aGlzLnBvbGxDb3VudCA8IDEwKSB7XG4gICAgICByZXR1cm4gMjAwMDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIDUwMDA7XG4gICAgfVxuICB9XG5cbiAgX2hhbmRsZUFwaVJlc3BvbnNlKHJlc3BvbnNlLCBtZXRob2QpIHtcbiAgICB0aGlzLnBvbGxDb3VudCArKztcbiAgICB0aGlzLmxvZ2dlci5kZWJ1ZyhgJHttZXRob2R9ICR7dGhpcy5jb25maWcuYXBpdXJsfTpgLCByZXNwb25zZS5ib2R5ZGF0YSk7XG4gICAgdGhpcy5zdGF0dXMgPSByZXNwb25zZS5ib2R5ZGF0YS5zdGF0dXM7XG4gICAgdGhpcy5fdXBkYXRlQ3NzQ2xhc3Nlc0Zyb21TdGF0dXMoKTtcbiAgICBpZih0aGlzLnN0YXR1cyA9PSAnbm90LWNyZWF0ZWQnKSB7XG4gICAgICByZXR1cm47ICAvLyBEbyBub3RoaW5nIC0gd2FpdCBmb3Igc29tZW9uZSB0byBjbGljayB0aGUgYnV0dG9uIGFuZCBzdGFydCB0aGUgcHJvY2Vzc2luZ1xuICAgIH1cbiAgICBpZih0aGlzLnN0YXR1cyA9PSAnbm90LXN0YXJ0ZWQnIHx8IHRoaXMuc3RhdHVzID09ICdydW5uaW5nJykge1xuICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLl9yZXF1ZXN0U3RhdHVzVXBkYXRlKCk7XG4gICAgICB9LCB0aGlzLl9wb2xsRGVsYXlNaWxsaXNlY29uZHMpO1xuICAgIH0gZWxzZSBpZih0aGlzLnN0YXR1cyA9PSAnZmluaXNoZWQnKSB7XG4gICAgICB0aGlzLl9oYW5kbGVGaW5pc2hlZFN0YXR1cyhyZXNwb25zZSk7XG4gICAgfSBlbHNlIGlmKHRoaXMuc3RhdHVzID09ICduby1maWxlcycpIHtcbiAgICAgIHRoaXMuX2hhbmRsZU5vRmlsZXNTdGF0dXMocmVzcG9uc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgc3RhdHVzOiAke3RoaXMuc3RhdHVzfWApO1xuICAgIH1cbiAgfVxuXG4gIF9vblN0YXJ0U2lnbmFsKCkge1xuICAgIHRoaXMubG9nZ2VyLmRlYnVnKCdTdGFydCBzaWduYWwgcmVjZWl2ZWQnKTtcbiAgICBpZih0aGlzLnN0YXR1cyA9PSAnZmluaXNoZWQnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMucHJvY2Vzc2luZ1N0YXJ0ZWRUaW1lID0gbmV3IERhdGUoKTtcbiAgICBuZXcgSHR0cERqYW5nb0pzb25SZXF1ZXN0KHRoaXMuY29uZmlnLmFwaXVybCkucG9zdCgpXG4gICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlQXBpUmVzcG9uc2UocmVzcG9uc2UsICdQT1NUJyk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH0pO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLnNpZ25hbEhhbmRsZXIucmVtb3ZlQWxsU2lnbmFsc0Zyb21SZWNlaXZlcihcbiAgICAgIGAke3RoaXMuY29uZmlnLnNpZ25hbE5hbWVTcGFjZX0uTWFpblJlY2VpdmVyYCk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzY3JpcHRzL2phdmFzY3JpcHQvd2lkZ2V0cy9Eb3dubG9hZENvbXByZXNzZWRBcmNoaXZlV2lkZ2V0LmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7Ozs7Ozs7Ozs7O0FBQ0E7OztBQUNBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBckJBO0FBc0JBO0FBQ0E7OztBQUNBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUpBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBRUE7QUFDQTtBQUNBOzs7QUFZQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUVBOzs7QUFqREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFwRUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/*!****************************************************!*\
  !*** ./~/ievv_jsbase/lib/widget/AbstractWidget.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ObjectManager = __webpack_require__(/*! ../utils/ObjectManager */ 3);\n\nvar _ObjectManager2 = _interopRequireDefault(_ObjectManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Base class for widgets for {@link WidgetRegistrySingleton}.\n *\n * @example <caption>Create a very simple widget</caption>\n * export default class OpenMenuWidget extends AbstractWidget {\n *     constructor(element, widgetInstanceId) {\n *          super(element, widgetInstanceId);\n *          this._onClickBound = (...args) => {\n *              this._onClick(...args);\n *          };\n *          this.element.addEventListener('click', this._onClickBound);\n *     }\n *\n *     _onClick = (e) => {\n *          e.preventDefault();\n *          console.log('I should have opened the menu here');\n *     }\n *\n *     destroy() {\n *          this.element.removeEventListener('click', this._onClickBound);\n *     }\n * }\n *\n * @example <caption>Use the widget</caption>\n * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\">\n *     Open menu\n * </button>\n *\n * @example <caption>A widget with configuration input</caption>\n * export default class OpenMenuWidget extends AbstractWidget {\n *     constructor(element) {\n *          super(element);\n *          this._onClickBound = (...args) => {\n *              this._onClick(...args);\n *          };\n *          this.element.addEventListener('click', this._onClickBound);\n *     }\n *\n *     getDefaultConfig() {\n *          return {\n *              'menuId': 'id_main_menu';\n *          }\n *     }\n *\n *     _onClick = (e) => {\n *          e.preventDefault();\n *          console.log(`I should have opened the menu with id=\"${this.config.menuId}\" here`);\n *     }\n *\n *     destroy() {\n *          this.element.removeEventListener('click', this._onClickBound);\n *     }\n * }\n *\n * @example <caption>Use the widget with config</caption>\n * <!-- Using the default config -->\n * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\">\n *     Open the main menu\n * </button>\n * <!-- Override the menuId config -->\n * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\"\n *          data-ievv-jsbase-widget-config='{\"menuId\": \"id_the_other_menu\"}'>\n *     Open the other menu\n * </button>\n */\nvar AbstractWidget = function () {\n\n    /**\n     * @param {Element} element The element to load the widget in.\n     * @param {string} widgetInstanceId The unique ID of this widget instance\n     *  in the widget registry.\n     */\n    function AbstractWidget(element, widgetInstanceId) {\n        _classCallCheck(this, AbstractWidget);\n\n        this.element = element;\n        this.widgetInstanceId = widgetInstanceId;\n    }\n\n    /**\n     * Get the default config.\n     *\n     * Any config supplied via the ``data-ievv-jsbase-widget-config``\n     * attribute is merged into this object.\n     *\n     * @returns {Object}\n     */\n\n\n    _createClass(AbstractWidget, [{\n        key: 'getDefaultConfig',\n        value: function getDefaultConfig() {\n            return {};\n        }\n    }, {\n        key: '_parseConfig',\n        value: function _parseConfig() {\n            var attributeName = 'data-ievv-jsbase-widget-config';\n            if (this.element.hasAttribute(attributeName)) {\n                var rawConfig = this.element.getAttribute(attributeName);\n                var config = JSON.parse(rawConfig);\n                return config;\n            }\n            return {};\n        }\n\n        /**\n         * Get the config.\n         *\n         * JSON decodes any config supplied via the ``data-ievv-jsbase-widget-config``\n         * attribute of the Element and {@link AbstractWidget#getDefaultConfig}\n         * into a config object. The result of this is cached, so multiple calls\n         * to this property will only result in the config object being created\n         * once.\n         *\n         * @throws {SyntaxError} If the ``data-ievv-jsbase-widget-config`` attribute\n         *      does not contain valid JSON data.\n         *      Not thrown if the element does not have a\n         *      ``data-ievv-jsbase-widget-config`` attribute.\n         *\n         * @returns {Object} The config object. This will be an empty object\n         *      if we have no {@link AbstractWidget#getDefaultConfig} and\n         *      no config is supplied via the ``data-ievv-jsbase-widget-config``\n         *      attribute of the Element.\n         */\n\n    }, {\n        key: 'destroy',\n\n\n        /**\n         * Destroy the widget.\n         *\n         * You should override this in subclasses if your\n         * widget sets up something that will work incorrectly\n         * if the widget disappears or is re-created (such as event\n         * listeners and signals).\n         */\n        value: function destroy() {}\n\n        /**\n         * If you override {@link AbstractWidget#afterInitializeAllWidgets},\n         * you must override this to return ``true``.\n         *\n         * @returns {boolean} Should return ``true`` if you want the widget registry\n         *   to call {@link AbstractWidget#afterInitializeAllWidgets}.\n         */\n\n    }, {\n        key: 'useAfterInitializeAllWidgets',\n        value: function useAfterInitializeAllWidgets() {\n            return false;\n        }\n\n        /**\n         * Called after all the widgets within the element that\n         * {@link WidgetRegistrySingleton#initializeAllWidgetsWithinElement}\n         * was called with is initialized.\n         *\n         * For performance reasons, this is only called if\n         * {@link AbstractWidget#useAfterInitializeAllWidgets} returns\n         * ``true``, so you must also override that method if you override\n         * this method.\n         *\n         * This is useful if you need to do something after other\n         * widgets have finished initializing, which may be the case\n         * for loosely coupled widgets.\n         *\n         * Does nothing by default.\n         */\n\n    }, {\n        key: 'afterInitializeAllWidgets',\n        value: function afterInitializeAllWidgets() {}\n    }, {\n        key: 'config',\n        get: function get() {\n            if (typeof this._config === 'undefined') {\n                var parsedConfig = this._parseConfig();\n                this._config = _ObjectManager2.default.mergeAndClone(this.getDefaultConfig(), parsedConfig);\n            }\n            return this._config;\n        }\n    }]);\n\n    return AbstractWidget;\n}();\n\nexports.default = AbstractWidget;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 3 */
/*!**************************************************!*\
  !*** ./~/ievv_jsbase/lib/utils/ObjectManager.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeDetect = __webpack_require__(/*! ./typeDetect */ 4);\n\nvar _typeDetect2 = _interopRequireDefault(_typeDetect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Utility-class with several static functions to simplify validation, merging and other standard operations on\n * javascript-Objects.\n */\nvar ObjectManager = function () {\n    function ObjectManager() {\n        _classCallCheck(this, ObjectManager);\n    }\n\n    _createClass(ObjectManager, null, [{\n        key: \"_hasOwnValue\",\n\n        /**\n         * Checks that given object is not null and not undefined. Also checks the same inwards in provided nested keys\n         *\n         * @example\n         *  let check = this._hasOwnValue({\"foo\": {\"bar\": \"\"}}, false, true, \"foo\", \"bar\");\n         *  // check is now false. key \"foo\" is found, key \"bar\" is found, but \"bar\" is emptyString, and params specify to check for them\n         *\n         * @example\n         *  let check = this._hasOwnValue({\"foo\": {\"bar\": {}}}, true, false, \"foo\", \"bar\");\n         *  // check is now false. key \"foo\" is found, key \"bar\" is found, but \"bar\" is {}, and params specify to check for emptyObject.\n         *\n         * @example\n         *  let check = this._hasOwnValue({\"foo\": {\"bar\": {}}}, false, false, \"foo\", \"bar\");\n         *  // check is now true. key \"foo\" is found, key \"bar\" is found, so no requested values are null or undefined.\n         *\n         *  NOTE: Other functions in this file lets you ignore the boolean params - so just use them :)\n         *\n         * @param givenObject   The object to validate\n         * @param emptyObject   if true - keys mapped to empty object {} will also give false\n         * @param emptyString   if true - keys mapped to empty string \"\" will also give false\n         * @param args          nested keys to look for, so to validate myObject.foo.bar call this._hasOwnValue(myObject, false, false, \"foo\". \"bar\")\n         * @returns {boolean}   true if validation passes, false if not.\n         */\n        value: function _hasOwnValue(givenObject, emptyObject, emptyString) {\n            function checkValue(value) {\n                return value != undefined && value != null && (!emptyObject || value != {}) && (!emptyString || value != \"\");\n            }\n\n            if (!checkValue(givenObject)) {\n                return false;\n            }\n\n            for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n                args[_key - 3] = arguments[_key];\n            }\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = args[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var key = _step.value;\n\n                    if (!(key in givenObject) || !checkValue(givenObject[key])) {\n                        return false;\n                    }\n                    givenObject = givenObject[key];\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        /**\n         * Validate that an object and nested keys are not null, undefined or empty string \"\".\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined or \"\"\n         */\n\n    }, {\n        key: \"validateAllowEmptyObject\",\n        value: function validateAllowEmptyObject(givenObject) {\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                args[_key2 - 1] = arguments[_key2];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, false, true].concat(args));\n        }\n\n        /**\n         * Validate that an object and nested keys are not null, undefined or empty object {}.\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined or {}\n         */\n\n    }, {\n        key: \"validateAllowEmptyString\",\n        value: function validateAllowEmptyString(givenObject) {\n            for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, true, false].concat(args));\n        }\n\n        /**\n         * Validate that an object and nested keys are not null, undefined or empty string \"\" or empty object {}.\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined, {} or \"\"\n         */\n\n    }, {\n        key: \"validate\",\n        value: function validate(givenObject) {\n            for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n                args[_key4 - 1] = arguments[_key4];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, true, true].concat(args));\n        }\n\n        /**\n         * Validate that an object and nested keys are not null or undefined.\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null or undefined.\n         */\n\n    }, {\n        key: \"validateAllowEmptyStringAndEmptyObject\",\n        value: function validateAllowEmptyStringAndEmptyObject(givenObject) {\n            for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n                args[_key5 - 1] = arguments[_key5];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, false, false].concat(args));\n        }\n\n        /**\n         * uses {@link validate} to lookup given args in given objectToBeValidated.\n         * This ensures the lookup is not null, undefined, empty object, or empty string.\n         * If this test fails, given fallbackValue is returned.\n         *\n         * @example\n         *  // to validate myObject.foo.bar, and get \"helloworld\" back as default if it is empty:\n         *  validateOrFallback(\"helloworld\", myObject, \"foo\", \"bar\")\n         *\n         * @param fallbackValue         what to return if empty\n         * @param objectToBeValidated   object to do lookup in\n         * @param args                  indices used for lookup in object\n         * @returns {*}                 lookup in objectToBeValidated if validation succeeded, fallbackValue if not.\n         */\n\n    }, {\n        key: \"validateOrFallback\",\n        value: function validateOrFallback(fallbackValue, objectToBeValidated) {\n            for (var _len6 = arguments.length, args = Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n                args[_key6 - 2] = arguments[_key6];\n            }\n\n            if (!this.validate.apply(this, [objectToBeValidated].concat(args))) {\n                return fallbackValue;\n            }\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = args[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var arg = _step2.value;\n\n                    objectToBeValidated = objectToBeValidated[arg];\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return objectToBeValidated;\n        }\n\n        /**\n         * Utilityfunction to simplify validation! uses {@link validateOrFallback} for validation, and executes\n         * given callback (and returns returnvalue from it) if validation fails.\n         *\n         * @param callback              Function to be executed if validation fails\n         * @param objectToBeValidated   The object to do validation-lookup in\n         * @param args                  indices used for lookup in objectToBeValidated\n         * @returns {*}                 lookup in objectToBeValidated if validation succeeded, returnvalue from callback if not.\n         */\n\n    }, {\n        key: \"validateOrCallback\",\n        value: function validateOrCallback(callback, objectToBeValidated) {\n            for (var _len7 = arguments.length, args = Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n                args[_key7 - 2] = arguments[_key7];\n            }\n\n            var validatedValue = this.validateOrFallback.apply(this, [null, objectToBeValidated].concat(args));\n            if (validatedValue == null) {\n                return callback();\n            }\n            return validatedValue;\n        }\n\n        /**\n         * Utilityfunction to simplify validation! uses {@link validateOrCallback} for validation, and passes\n         * a callback that simply thrown an Error if validation fails.\n         *\n         * @param errorMessage          the message to use in new Error(errorMessage)\n         * @param objectToBeValidated   the object to validate args in\n         * @param args                  args for lookup. see {@link validateOrFallback}\n         * @returns {*}                 the looked-up value from objectToBeValidated if it exists\n         */\n\n    }, {\n        key: \"validateOrError\",\n        value: function validateOrError(errorMessage, objectToBeValidated) {\n            for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n                args[_key8 - 2] = arguments[_key8];\n            }\n\n            return this.validateOrCallback.apply(this, [function () {\n                throw new Error(errorMessage);\n            }, objectToBeValidated].concat(args));\n        }\n    }, {\n        key: \"_recursiveMerge\",\n        value: function _recursiveMerge(mergedValues, overrides) {\n            for (var key in overrides) {\n                var detectedType = (0, _typeDetect2.default)(overrides[key]);\n                if (detectedType == 'object') {\n                    if (mergedValues[key] == undefined) {\n                        mergedValues[key] = {};\n                    }\n                    mergedValues[key] = this._recursiveMerge(mergedValues[key], overrides[key]);\n                } else if (detectedType == 'array') {\n                    mergedValues[key] = Array.from(overrides[key]);\n                } else if (detectedType == 'null' || detectedType == 'number' || detectedType == 'boolean' || detectedType == 'string') {\n                    mergedValues[key] = overrides[key];\n                } else {\n                    throw new Error(\"Unsupported type: \" + detectedType + \".\");\n                }\n            }\n            return mergedValues;\n        }\n\n        /**\n         * Deep copy all values from overrides to givenObject.\n         *\n         * All keys in passed overrides-object will be cloned to passed givenObject. This happens deeply, so all\n         * nested objects will also be iterated (NOTE: lists are not iterated, only objects).\n         *\n         * Note that objects are passed by-reference, so if you do not want givenObject to be modified directly make sure\n         * you pass false as third param\n         *\n         * @param givenObject             The object to override values in\n         * @param overrides               The object to copy all values from\n         * @param overrideValuesInGiven   if true givenObjects will be overwritten directly, if false a new object\n         *                                will be created to merge both given objects into.\n         * @returns {*}                   The result from deep-merging\n         */\n\n    }, {\n        key: \"_merge\",\n        value: function _merge(givenObject, overrides, overrideValuesInGiven) {\n            if (overrideValuesInGiven) {\n                return this._recursiveMerge(givenObject, overrides);\n            }\n\n            var mergedValues = {};\n            mergedValues = this._recursiveMerge(mergedValues, givenObject);\n            return this._recursiveMerge(mergedValues, overrides);\n        }\n\n        /**\n         * Merges all values from overrideObject into originalObject.\n         * This happens in place (as objects are passed-by-reference), so originalObject is modified.\n         *\n         * This is a deep-merge (unlike Object.assign).\n         *\n         * @example <caption>Simple example</caption>\n         * let originalObject = {\n         *      foo: \"bar\",\n         *      person: {\n         *          name: \"Sandy claws\",\n         *          age: 42\n         *      }\n         * }\n         *\n         * let overrideObject = {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678\n         *      }\n         *  }\n         *\n         *  ObjectManager.mergeInPlace(originalObject, overrideObject);\n         *\n         *  // originalObject will now be:\n         *  originalObject == {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678,\n         *          name: \"Sandy claws\"\n         *      }\n         *  }\n         *\n         * @param originalObject    the object to modify\n         * @param overrideObject    the object to copy values from\n         */\n\n    }, {\n        key: \"mergeInPlace\",\n        value: function mergeInPlace(originalObject, overrideObject) {\n            this._merge(originalObject, overrideObject, true);\n        }\n\n        /**\n         * Merges all values from originalObject and overrideObject into a new object that is returned.\n         *\n         * This is a deep-merge (unlike Object.assign).\n         *\n         * First, all values from originalObject are merged into a new object.\n         * Then all values from overrideObject are merged into the same object, overriding any corresponding keys from\n         * originalObject.\n         *\n         * @example <caption>Simple example</caption>\n         * let originalObject = {\n         *      foo: \"bar\",\n         *      person: {\n         *          name: \"Sandy claws\",\n         *          age: 42\n         *      }\n         * }\n         *\n         * let overrideObject = {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678\n         *      }\n         *  }\n         *\n         *  let mergedObject = ObjectManager.mergeAndCopy(originalObject, overrideObject);\n         *\n         *  // mergedObject will now be:\n         *  mergedObject == {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678,\n         *          name: \"Sandy claws\"\n         *      }\n         *  }\n         *\n         * @param originalObject    initial values for new object\n         * @param overrideObject    object to override values from original object with\n         * @returns {{}}            new object containing values from originalObject overridden by overrideObject (see example)\n         */\n\n    }, {\n        key: \"mergeAndClone\",\n        value: function mergeAndClone(originalObject, overrideObject) {\n            return this._merge(originalObject, overrideObject, false);\n        }\n\n        /**\n         * Copies all values from given originalObject into a new object, which is returned to caller.\n         *\n         * uses {@link ObjectManager#mergeAndClone}, but passes an empty object as one of the two it desires for merging..\n         *\n         * @param originalObject\n         * @returns {{}}\n         */\n\n    }, {\n        key: \"clone\",\n        value: function clone(originalObject) {\n            return this.mergeAndClone({}, originalObject);\n        }\n    }]);\n\n    return ObjectManager;\n}();\n\nexports.default = ObjectManager;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaWV2dl9qc2Jhc2UvbGliL3V0aWxzL09iamVjdE1hbmFnZXIuanM/YzJiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3R5cGVEZXRlY3QgPSByZXF1aXJlKFwiLi90eXBlRGV0ZWN0XCIpO1xuXG52YXIgX3R5cGVEZXRlY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHlwZURldGVjdCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8qKlxuICogVXRpbGl0eS1jbGFzcyB3aXRoIHNldmVyYWwgc3RhdGljIGZ1bmN0aW9ucyB0byBzaW1wbGlmeSB2YWxpZGF0aW9uLCBtZXJnaW5nIGFuZCBvdGhlciBzdGFuZGFyZCBvcGVyYXRpb25zIG9uXG4gKiBqYXZhc2NyaXB0LU9iamVjdHMuXG4gKi9cbnZhciBPYmplY3RNYW5hZ2VyID0gZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE9iamVjdE1hbmFnZXIoKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPYmplY3RNYW5hZ2VyKTtcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoT2JqZWN0TWFuYWdlciwgbnVsbCwgW3tcbiAgICAgICAga2V5OiBcIl9oYXNPd25WYWx1ZVwiLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDaGVja3MgdGhhdCBnaXZlbiBvYmplY3QgaXMgbm90IG51bGwgYW5kIG5vdCB1bmRlZmluZWQuIEFsc28gY2hlY2tzIHRoZSBzYW1lIGlud2FyZHMgaW4gcHJvdmlkZWQgbmVzdGVkIGtleXNcbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogIGxldCBjaGVjayA9IHRoaXMuX2hhc093blZhbHVlKHtcImZvb1wiOiB7XCJiYXJcIjogXCJcIn19LCBmYWxzZSwgdHJ1ZSwgXCJmb29cIiwgXCJiYXJcIik7XG4gICAgICAgICAqICAvLyBjaGVjayBpcyBub3cgZmFsc2UuIGtleSBcImZvb1wiIGlzIGZvdW5kLCBrZXkgXCJiYXJcIiBpcyBmb3VuZCwgYnV0IFwiYmFyXCIgaXMgZW1wdHlTdHJpbmcsIGFuZCBwYXJhbXMgc3BlY2lmeSB0byBjaGVjayBmb3IgdGhlbVxuICAgICAgICAgKlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgbGV0IGNoZWNrID0gdGhpcy5faGFzT3duVmFsdWUoe1wiZm9vXCI6IHtcImJhclwiOiB7fX19LCB0cnVlLCBmYWxzZSwgXCJmb29cIiwgXCJiYXJcIik7XG4gICAgICAgICAqICAvLyBjaGVjayBpcyBub3cgZmFsc2UuIGtleSBcImZvb1wiIGlzIGZvdW5kLCBrZXkgXCJiYXJcIiBpcyBmb3VuZCwgYnV0IFwiYmFyXCIgaXMge30sIGFuZCBwYXJhbXMgc3BlY2lmeSB0byBjaGVjayBmb3IgZW1wdHlPYmplY3QuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqICBsZXQgY2hlY2sgPSB0aGlzLl9oYXNPd25WYWx1ZSh7XCJmb29cIjoge1wiYmFyXCI6IHt9fX0sIGZhbHNlLCBmYWxzZSwgXCJmb29cIiwgXCJiYXJcIik7XG4gICAgICAgICAqICAvLyBjaGVjayBpcyBub3cgdHJ1ZS4ga2V5IFwiZm9vXCIgaXMgZm91bmQsIGtleSBcImJhclwiIGlzIGZvdW5kLCBzbyBubyByZXF1ZXN0ZWQgdmFsdWVzIGFyZSBudWxsIG9yIHVuZGVmaW5lZC5cbiAgICAgICAgICpcbiAgICAgICAgICogIE5PVEU6IE90aGVyIGZ1bmN0aW9ucyBpbiB0aGlzIGZpbGUgbGV0cyB5b3UgaWdub3JlIHRoZSBib29sZWFuIHBhcmFtcyAtIHNvIGp1c3QgdXNlIHRoZW0gOilcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIGdpdmVuT2JqZWN0ICAgVGhlIG9iamVjdCB0byB2YWxpZGF0ZVxuICAgICAgICAgKiBAcGFyYW0gZW1wdHlPYmplY3QgICBpZiB0cnVlIC0ga2V5cyBtYXBwZWQgdG8gZW1wdHkgb2JqZWN0IHt9IHdpbGwgYWxzbyBnaXZlIGZhbHNlXG4gICAgICAgICAqIEBwYXJhbSBlbXB0eVN0cmluZyAgIGlmIHRydWUgLSBrZXlzIG1hcHBlZCB0byBlbXB0eSBzdHJpbmcgXCJcIiB3aWxsIGFsc28gZ2l2ZSBmYWxzZVxuICAgICAgICAgKiBAcGFyYW0gYXJncyAgICAgICAgICBuZXN0ZWQga2V5cyB0byBsb29rIGZvciwgc28gdG8gdmFsaWRhdGUgbXlPYmplY3QuZm9vLmJhciBjYWxsIHRoaXMuX2hhc093blZhbHVlKG15T2JqZWN0LCBmYWxzZSwgZmFsc2UsIFwiZm9vXCIuIFwiYmFyXCIpXG4gICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSAgIHRydWUgaWYgdmFsaWRhdGlvbiBwYXNzZXMsIGZhbHNlIGlmIG5vdC5cbiAgICAgICAgICovXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBfaGFzT3duVmFsdWUoZ2l2ZW5PYmplY3QsIGVtcHR5T2JqZWN0LCBlbXB0eVN0cmluZykge1xuICAgICAgICAgICAgZnVuY3Rpb24gY2hlY2tWYWx1ZSh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSAhPSB1bmRlZmluZWQgJiYgdmFsdWUgIT0gbnVsbCAmJiAoIWVtcHR5T2JqZWN0IHx8IHZhbHVlICE9IHt9KSAmJiAoIWVtcHR5U3RyaW5nIHx8IHZhbHVlICE9IFwiXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIWNoZWNrVmFsdWUoZ2l2ZW5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4gPiAzID8gX2xlbiAtIDMgOiAwKSwgX2tleSA9IDM7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgICAgICAgICBhcmdzW19rZXkgLSAzXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICAgICAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gICAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gYXJnc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IF9zdGVwLnZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghKGtleSBpbiBnaXZlbk9iamVjdCkgfHwgIWNoZWNrVmFsdWUoZ2l2ZW5PYmplY3Rba2V5XSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBnaXZlbk9iamVjdCA9IGdpdmVuT2JqZWN0W2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgICAgICAgICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogVmFsaWRhdGUgdGhhdCBhbiBvYmplY3QgYW5kIG5lc3RlZCBrZXlzIGFyZSBub3QgbnVsbCwgdW5kZWZpbmVkIG9yIGVtcHR5IHN0cmluZyBcIlwiLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAvLyBjaGVjayB0aGF0IG15T2JqZWN0LmZvby5iYXIgZXhpc3RzOlxuICAgICAgICAgKiB2YWxpZGF0ZUFsbG93RW1wdHlPYmplY3QobXlPYmplY3QsIFwiZm9vXCIsIFwiYmFyXCIpXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBnaXZlbk9iamVjdCAgIHRoZSBvYmplY3QgdG8gdmFsaWRhdGVcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgICAgICAgICAgbmVzdGVkIGtleXMgdG8gY2hlY2tcbiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59ICAgdHJ1ZSBpZiBuZWl0aGVyIHRoZSBvYmplY3Qgb3IgYW55IHByb3ZpZGVkIG5lc3RlZCBrZXkgaXMgbnVsbCwgdW5kZWZpbmVkIG9yIFwiXCJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJ2YWxpZGF0ZUFsbG93RW1wdHlPYmplY3RcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHZhbGlkYXRlQWxsb3dFbXB0eU9iamVjdChnaXZlbk9iamVjdCkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICAgICAgICAgIGFyZ3NbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9oYXNPd25WYWx1ZS5hcHBseSh0aGlzLCBbZ2l2ZW5PYmplY3QsIGZhbHNlLCB0cnVlXS5jb25jYXQoYXJncykpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFZhbGlkYXRlIHRoYXQgYW4gb2JqZWN0IGFuZCBuZXN0ZWQga2V5cyBhcmUgbm90IG51bGwsIHVuZGVmaW5lZCBvciBlbXB0eSBvYmplY3Qge30uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIC8vIGNoZWNrIHRoYXQgbXlPYmplY3QuZm9vLmJhciBleGlzdHM6XG4gICAgICAgICAqIHZhbGlkYXRlQWxsb3dFbXB0eU9iamVjdChteU9iamVjdCwgXCJmb29cIiwgXCJiYXJcIilcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIGdpdmVuT2JqZWN0ICAgdGhlIG9iamVjdCB0byB2YWxpZGF0ZVxuICAgICAgICAgKiBAcGFyYW0gYXJncyAgICAgICAgICBuZXN0ZWQga2V5cyB0byBjaGVja1xuICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gICB0cnVlIGlmIG5laXRoZXIgdGhlIG9iamVjdCBvciBhbnkgcHJvdmlkZWQgbmVzdGVkIGtleSBpcyBudWxsLCB1bmRlZmluZWQgb3Ige31cbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJ2YWxpZGF0ZUFsbG93RW1wdHlTdHJpbmdcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHZhbGlkYXRlQWxsb3dFbXB0eVN0cmluZyhnaXZlbk9iamVjdCkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2xlbjMgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjMgPiAxID8gX2xlbjMgLSAxIDogMCksIF9rZXkzID0gMTsgX2tleTMgPCBfbGVuMzsgX2tleTMrKykge1xuICAgICAgICAgICAgICAgIGFyZ3NbX2tleTMgLSAxXSA9IGFyZ3VtZW50c1tfa2V5M107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9oYXNPd25WYWx1ZS5hcHBseSh0aGlzLCBbZ2l2ZW5PYmplY3QsIHRydWUsIGZhbHNlXS5jb25jYXQoYXJncykpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFZhbGlkYXRlIHRoYXQgYW4gb2JqZWN0IGFuZCBuZXN0ZWQga2V5cyBhcmUgbm90IG51bGwsIHVuZGVmaW5lZCBvciBlbXB0eSBzdHJpbmcgXCJcIiBvciBlbXB0eSBvYmplY3Qge30uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIC8vIGNoZWNrIHRoYXQgbXlPYmplY3QuZm9vLmJhciBleGlzdHM6XG4gICAgICAgICAqIHZhbGlkYXRlQWxsb3dFbXB0eU9iamVjdChteU9iamVjdCwgXCJmb29cIiwgXCJiYXJcIilcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIGdpdmVuT2JqZWN0ICAgdGhlIG9iamVjdCB0byB2YWxpZGF0ZVxuICAgICAgICAgKiBAcGFyYW0gYXJncyAgICAgICAgICBuZXN0ZWQga2V5cyB0byBjaGVja1xuICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gICB0cnVlIGlmIG5laXRoZXIgdGhlIG9iamVjdCBvciBhbnkgcHJvdmlkZWQgbmVzdGVkIGtleSBpcyBudWxsLCB1bmRlZmluZWQsIHt9IG9yIFwiXCJcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJ2YWxpZGF0ZVwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gdmFsaWRhdGUoZ2l2ZW5PYmplY3QpIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9sZW40ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW40ID4gMSA/IF9sZW40IC0gMSA6IDApLCBfa2V5NCA9IDE7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICAgICAgICAgICAgICBhcmdzW19rZXk0IC0gMV0gPSBhcmd1bWVudHNbX2tleTRdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faGFzT3duVmFsdWUuYXBwbHkodGhpcywgW2dpdmVuT2JqZWN0LCB0cnVlLCB0cnVlXS5jb25jYXQoYXJncykpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFZhbGlkYXRlIHRoYXQgYW4gb2JqZWN0IGFuZCBuZXN0ZWQga2V5cyBhcmUgbm90IG51bGwgb3IgdW5kZWZpbmVkLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAvLyBjaGVjayB0aGF0IG15T2JqZWN0LmZvby5iYXIgZXhpc3RzOlxuICAgICAgICAgKiB2YWxpZGF0ZUFsbG93RW1wdHlPYmplY3QobXlPYmplY3QsIFwiZm9vXCIsIFwiYmFyXCIpXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBnaXZlbk9iamVjdCAgIHRoZSBvYmplY3QgdG8gdmFsaWRhdGVcbiAgICAgICAgICogQHBhcmFtIGFyZ3MgICAgICAgICAgbmVzdGVkIGtleXMgdG8gY2hlY2tcbiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59ICAgdHJ1ZSBpZiBuZWl0aGVyIHRoZSBvYmplY3Qgb3IgYW55IHByb3ZpZGVkIG5lc3RlZCBrZXkgaXMgbnVsbCBvciB1bmRlZmluZWQuXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6IFwidmFsaWRhdGVBbGxvd0VtcHR5U3RyaW5nQW5kRW1wdHlPYmplY3RcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHZhbGlkYXRlQWxsb3dFbXB0eVN0cmluZ0FuZEVtcHR5T2JqZWN0KGdpdmVuT2JqZWN0KSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfbGVuNSA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuNSA+IDEgPyBfbGVuNSAtIDEgOiAwKSwgX2tleTUgPSAxOyBfa2V5NSA8IF9sZW41OyBfa2V5NSsrKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tfa2V5NSAtIDFdID0gYXJndW1lbnRzW19rZXk1XTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2hhc093blZhbHVlLmFwcGx5KHRoaXMsIFtnaXZlbk9iamVjdCwgZmFsc2UsIGZhbHNlXS5jb25jYXQoYXJncykpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHVzZXMge0BsaW5rIHZhbGlkYXRlfSB0byBsb29rdXAgZ2l2ZW4gYXJncyBpbiBnaXZlbiBvYmplY3RUb0JlVmFsaWRhdGVkLlxuICAgICAgICAgKiBUaGlzIGVuc3VyZXMgdGhlIGxvb2t1cCBpcyBub3QgbnVsbCwgdW5kZWZpbmVkLCBlbXB0eSBvYmplY3QsIG9yIGVtcHR5IHN0cmluZy5cbiAgICAgICAgICogSWYgdGhpcyB0ZXN0IGZhaWxzLCBnaXZlbiBmYWxsYmFja1ZhbHVlIGlzIHJldHVybmVkLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgLy8gdG8gdmFsaWRhdGUgbXlPYmplY3QuZm9vLmJhciwgYW5kIGdldCBcImhlbGxvd29ybGRcIiBiYWNrIGFzIGRlZmF1bHQgaWYgaXQgaXMgZW1wdHk6XG4gICAgICAgICAqICB2YWxpZGF0ZU9yRmFsbGJhY2soXCJoZWxsb3dvcmxkXCIsIG15T2JqZWN0LCBcImZvb1wiLCBcImJhclwiKVxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gZmFsbGJhY2tWYWx1ZSAgICAgICAgIHdoYXQgdG8gcmV0dXJuIGlmIGVtcHR5XG4gICAgICAgICAqIEBwYXJhbSBvYmplY3RUb0JlVmFsaWRhdGVkICAgb2JqZWN0IHRvIGRvIGxvb2t1cCBpblxuICAgICAgICAgKiBAcGFyYW0gYXJncyAgICAgICAgICAgICAgICAgIGluZGljZXMgdXNlZCBmb3IgbG9va3VwIGluIG9iamVjdFxuICAgICAgICAgKiBAcmV0dXJucyB7Kn0gICAgICAgICAgICAgICAgIGxvb2t1cCBpbiBvYmplY3RUb0JlVmFsaWRhdGVkIGlmIHZhbGlkYXRpb24gc3VjY2VlZGVkLCBmYWxsYmFja1ZhbHVlIGlmIG5vdC5cbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJ2YWxpZGF0ZU9yRmFsbGJhY2tcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHZhbGlkYXRlT3JGYWxsYmFjayhmYWxsYmFja1ZhbHVlLCBvYmplY3RUb0JlVmFsaWRhdGVkKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfbGVuNiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuNiA+IDIgPyBfbGVuNiAtIDIgOiAwKSwgX2tleTYgPSAyOyBfa2V5NiA8IF9sZW42OyBfa2V5NisrKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tfa2V5NiAtIDJdID0gYXJndW1lbnRzW19rZXk2XTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlLmFwcGx5KHRoaXMsIFtvYmplY3RUb0JlVmFsaWRhdGVkXS5jb25jYXQoYXJncykpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbGxiYWNrVmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlO1xuICAgICAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yMiA9IGZhbHNlO1xuICAgICAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yMiA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IyID0gYXJnc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwMjsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IChfc3RlcDIgPSBfaXRlcmF0b3IyLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYXJnID0gX3N0ZXAyLnZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdFRvQmVWYWxpZGF0ZWQgPSBvYmplY3RUb0JlVmFsaWRhdGVkW2FyZ107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7XG4gICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjIucmV0dXJuKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBvYmplY3RUb0JlVmFsaWRhdGVkO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFV0aWxpdHlmdW5jdGlvbiB0byBzaW1wbGlmeSB2YWxpZGF0aW9uISB1c2VzIHtAbGluayB2YWxpZGF0ZU9yRmFsbGJhY2t9IGZvciB2YWxpZGF0aW9uLCBhbmQgZXhlY3V0ZXNcbiAgICAgICAgICogZ2l2ZW4gY2FsbGJhY2sgKGFuZCByZXR1cm5zIHJldHVybnZhbHVlIGZyb20gaXQpIGlmIHZhbGlkYXRpb24gZmFpbHMuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBjYWxsYmFjayAgICAgICAgICAgICAgRnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgaWYgdmFsaWRhdGlvbiBmYWlsc1xuICAgICAgICAgKiBAcGFyYW0gb2JqZWN0VG9CZVZhbGlkYXRlZCAgIFRoZSBvYmplY3QgdG8gZG8gdmFsaWRhdGlvbi1sb29rdXAgaW5cbiAgICAgICAgICogQHBhcmFtIGFyZ3MgICAgICAgICAgICAgICAgICBpbmRpY2VzIHVzZWQgZm9yIGxvb2t1cCBpbiBvYmplY3RUb0JlVmFsaWRhdGVkXG4gICAgICAgICAqIEByZXR1cm5zIHsqfSAgICAgICAgICAgICAgICAgbG9va3VwIGluIG9iamVjdFRvQmVWYWxpZGF0ZWQgaWYgdmFsaWRhdGlvbiBzdWNjZWVkZWQsIHJldHVybnZhbHVlIGZyb20gY2FsbGJhY2sgaWYgbm90LlxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcInZhbGlkYXRlT3JDYWxsYmFja1wiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gdmFsaWRhdGVPckNhbGxiYWNrKGNhbGxiYWNrLCBvYmplY3RUb0JlVmFsaWRhdGVkKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfbGVuNyA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuNyA+IDIgPyBfbGVuNyAtIDIgOiAwKSwgX2tleTcgPSAyOyBfa2V5NyA8IF9sZW43OyBfa2V5NysrKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tfa2V5NyAtIDJdID0gYXJndW1lbnRzW19rZXk3XTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHZhbGlkYXRlZFZhbHVlID0gdGhpcy52YWxpZGF0ZU9yRmFsbGJhY2suYXBwbHkodGhpcywgW251bGwsIG9iamVjdFRvQmVWYWxpZGF0ZWRdLmNvbmNhdChhcmdzKSk7XG4gICAgICAgICAgICBpZiAodmFsaWRhdGVkVmFsdWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRlZFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFV0aWxpdHlmdW5jdGlvbiB0byBzaW1wbGlmeSB2YWxpZGF0aW9uISB1c2VzIHtAbGluayB2YWxpZGF0ZU9yQ2FsbGJhY2t9IGZvciB2YWxpZGF0aW9uLCBhbmQgcGFzc2VzXG4gICAgICAgICAqIGEgY2FsbGJhY2sgdGhhdCBzaW1wbHkgdGhyb3duIGFuIEVycm9yIGlmIHZhbGlkYXRpb24gZmFpbHMuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBlcnJvck1lc3NhZ2UgICAgICAgICAgdGhlIG1lc3NhZ2UgdG8gdXNlIGluIG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpXG4gICAgICAgICAqIEBwYXJhbSBvYmplY3RUb0JlVmFsaWRhdGVkICAgdGhlIG9iamVjdCB0byB2YWxpZGF0ZSBhcmdzIGluXG4gICAgICAgICAqIEBwYXJhbSBhcmdzICAgICAgICAgICAgICAgICAgYXJncyBmb3IgbG9va3VwLiBzZWUge0BsaW5rIHZhbGlkYXRlT3JGYWxsYmFja31cbiAgICAgICAgICogQHJldHVybnMgeyp9ICAgICAgICAgICAgICAgICB0aGUgbG9va2VkLXVwIHZhbHVlIGZyb20gb2JqZWN0VG9CZVZhbGlkYXRlZCBpZiBpdCBleGlzdHNcbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJ2YWxpZGF0ZU9yRXJyb3JcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHZhbGlkYXRlT3JFcnJvcihlcnJvck1lc3NhZ2UsIG9iamVjdFRvQmVWYWxpZGF0ZWQpIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9sZW44ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW44ID4gMiA/IF9sZW44IC0gMiA6IDApLCBfa2V5OCA9IDI7IF9rZXk4IDwgX2xlbjg7IF9rZXk4KyspIHtcbiAgICAgICAgICAgICAgICBhcmdzW19rZXk4IC0gMl0gPSBhcmd1bWVudHNbX2tleThdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdGhpcy52YWxpZGF0ZU9yQ2FsbGJhY2suYXBwbHkodGhpcywgW2Z1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JNZXNzYWdlKTtcbiAgICAgICAgICAgIH0sIG9iamVjdFRvQmVWYWxpZGF0ZWRdLmNvbmNhdChhcmdzKSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJfcmVjdXJzaXZlTWVyZ2VcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9yZWN1cnNpdmVNZXJnZShtZXJnZWRWYWx1ZXMsIG92ZXJyaWRlcykge1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIG92ZXJyaWRlcykge1xuICAgICAgICAgICAgICAgIHZhciBkZXRlY3RlZFR5cGUgPSAoMCwgX3R5cGVEZXRlY3QyLmRlZmF1bHQpKG92ZXJyaWRlc1trZXldKTtcbiAgICAgICAgICAgICAgICBpZiAoZGV0ZWN0ZWRUeXBlID09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZXJnZWRWYWx1ZXNba2V5XSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlZFZhbHVlc1trZXldID0ge307XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VkVmFsdWVzW2tleV0gPSB0aGlzLl9yZWN1cnNpdmVNZXJnZShtZXJnZWRWYWx1ZXNba2V5XSwgb3ZlcnJpZGVzW2tleV0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGV0ZWN0ZWRUeXBlID09ICdhcnJheScpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VkVmFsdWVzW2tleV0gPSBBcnJheS5mcm9tKG92ZXJyaWRlc1trZXldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRldGVjdGVkVHlwZSA9PSAnbnVsbCcgfHwgZGV0ZWN0ZWRUeXBlID09ICdudW1iZXInIHx8IGRldGVjdGVkVHlwZSA9PSAnYm9vbGVhbicgfHwgZGV0ZWN0ZWRUeXBlID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lcmdlZFZhbHVlc1trZXldID0gb3ZlcnJpZGVzW2tleV07XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgdHlwZTogXCIgKyBkZXRlY3RlZFR5cGUgKyBcIi5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG1lcmdlZFZhbHVlcztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWVwIGNvcHkgYWxsIHZhbHVlcyBmcm9tIG92ZXJyaWRlcyB0byBnaXZlbk9iamVjdC5cbiAgICAgICAgICpcbiAgICAgICAgICogQWxsIGtleXMgaW4gcGFzc2VkIG92ZXJyaWRlcy1vYmplY3Qgd2lsbCBiZSBjbG9uZWQgdG8gcGFzc2VkIGdpdmVuT2JqZWN0LiBUaGlzIGhhcHBlbnMgZGVlcGx5LCBzbyBhbGxcbiAgICAgICAgICogbmVzdGVkIG9iamVjdHMgd2lsbCBhbHNvIGJlIGl0ZXJhdGVkIChOT1RFOiBsaXN0cyBhcmUgbm90IGl0ZXJhdGVkLCBvbmx5IG9iamVjdHMpLlxuICAgICAgICAgKlxuICAgICAgICAgKiBOb3RlIHRoYXQgb2JqZWN0cyBhcmUgcGFzc2VkIGJ5LXJlZmVyZW5jZSwgc28gaWYgeW91IGRvIG5vdCB3YW50IGdpdmVuT2JqZWN0IHRvIGJlIG1vZGlmaWVkIGRpcmVjdGx5IG1ha2Ugc3VyZVxuICAgICAgICAgKiB5b3UgcGFzcyBmYWxzZSBhcyB0aGlyZCBwYXJhbVxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gZ2l2ZW5PYmplY3QgICAgICAgICAgICAgVGhlIG9iamVjdCB0byBvdmVycmlkZSB2YWx1ZXMgaW5cbiAgICAgICAgICogQHBhcmFtIG92ZXJyaWRlcyAgICAgICAgICAgICAgIFRoZSBvYmplY3QgdG8gY29weSBhbGwgdmFsdWVzIGZyb21cbiAgICAgICAgICogQHBhcmFtIG92ZXJyaWRlVmFsdWVzSW5HaXZlbiAgIGlmIHRydWUgZ2l2ZW5PYmplY3RzIHdpbGwgYmUgb3ZlcndyaXR0ZW4gZGlyZWN0bHksIGlmIGZhbHNlIGEgbmV3IG9iamVjdFxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lsbCBiZSBjcmVhdGVkIHRvIG1lcmdlIGJvdGggZ2l2ZW4gb2JqZWN0cyBpbnRvLlxuICAgICAgICAgKiBAcmV0dXJucyB7Kn0gICAgICAgICAgICAgICAgICAgVGhlIHJlc3VsdCBmcm9tIGRlZXAtbWVyZ2luZ1xuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcIl9tZXJnZVwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gX21lcmdlKGdpdmVuT2JqZWN0LCBvdmVycmlkZXMsIG92ZXJyaWRlVmFsdWVzSW5HaXZlbikge1xuICAgICAgICAgICAgaWYgKG92ZXJyaWRlVmFsdWVzSW5HaXZlbikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZWN1cnNpdmVNZXJnZShnaXZlbk9iamVjdCwgb3ZlcnJpZGVzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG1lcmdlZFZhbHVlcyA9IHt9O1xuICAgICAgICAgICAgbWVyZ2VkVmFsdWVzID0gdGhpcy5fcmVjdXJzaXZlTWVyZ2UobWVyZ2VkVmFsdWVzLCBnaXZlbk9iamVjdCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcmVjdXJzaXZlTWVyZ2UobWVyZ2VkVmFsdWVzLCBvdmVycmlkZXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE1lcmdlcyBhbGwgdmFsdWVzIGZyb20gb3ZlcnJpZGVPYmplY3QgaW50byBvcmlnaW5hbE9iamVjdC5cbiAgICAgICAgICogVGhpcyBoYXBwZW5zIGluIHBsYWNlIChhcyBvYmplY3RzIGFyZSBwYXNzZWQtYnktcmVmZXJlbmNlKSwgc28gb3JpZ2luYWxPYmplY3QgaXMgbW9kaWZpZWQuXG4gICAgICAgICAqXG4gICAgICAgICAqIFRoaXMgaXMgYSBkZWVwLW1lcmdlICh1bmxpa2UgT2JqZWN0LmFzc2lnbikuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlIDxjYXB0aW9uPlNpbXBsZSBleGFtcGxlPC9jYXB0aW9uPlxuICAgICAgICAgKiBsZXQgb3JpZ2luYWxPYmplY3QgPSB7XG4gICAgICAgICAqICAgICAgZm9vOiBcImJhclwiLFxuICAgICAgICAgKiAgICAgIHBlcnNvbjoge1xuICAgICAgICAgKiAgICAgICAgICBuYW1lOiBcIlNhbmR5IGNsYXdzXCIsXG4gICAgICAgICAqICAgICAgICAgIGFnZTogNDJcbiAgICAgICAgICogICAgICB9XG4gICAgICAgICAqIH1cbiAgICAgICAgICpcbiAgICAgICAgICogbGV0IG92ZXJyaWRlT2JqZWN0ID0ge1xuICAgICAgICAgKiAgICAgIGZvbzogXCJiYXpcIixcbiAgICAgICAgICogICAgICBwZXJzb246IHtcbiAgICAgICAgICogICAgICAgICAgYWdlOiAyMyxcbiAgICAgICAgICogICAgICAgICAgcGhvbmU6IDEyMzQ1Njc4XG4gICAgICAgICAqICAgICAgfVxuICAgICAgICAgKiAgfVxuICAgICAgICAgKlxuICAgICAgICAgKiAgT2JqZWN0TWFuYWdlci5tZXJnZUluUGxhY2Uob3JpZ2luYWxPYmplY3QsIG92ZXJyaWRlT2JqZWN0KTtcbiAgICAgICAgICpcbiAgICAgICAgICogIC8vIG9yaWdpbmFsT2JqZWN0IHdpbGwgbm93IGJlOlxuICAgICAgICAgKiAgb3JpZ2luYWxPYmplY3QgPT0ge1xuICAgICAgICAgKiAgICAgIGZvbzogXCJiYXpcIixcbiAgICAgICAgICogICAgICBwZXJzb246IHtcbiAgICAgICAgICogICAgICAgICAgYWdlOiAyMyxcbiAgICAgICAgICogICAgICAgICAgcGhvbmU6IDEyMzQ1Njc4LFxuICAgICAgICAgKiAgICAgICAgICBuYW1lOiBcIlNhbmR5IGNsYXdzXCJcbiAgICAgICAgICogICAgICB9XG4gICAgICAgICAqICB9XG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBvcmlnaW5hbE9iamVjdCAgICB0aGUgb2JqZWN0IHRvIG1vZGlmeVxuICAgICAgICAgKiBAcGFyYW0gb3ZlcnJpZGVPYmplY3QgICAgdGhlIG9iamVjdCB0byBjb3B5IHZhbHVlcyBmcm9tXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6IFwibWVyZ2VJblBsYWNlXCIsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBtZXJnZUluUGxhY2Uob3JpZ2luYWxPYmplY3QsIG92ZXJyaWRlT2JqZWN0KSB7XG4gICAgICAgICAgICB0aGlzLl9tZXJnZShvcmlnaW5hbE9iamVjdCwgb3ZlcnJpZGVPYmplY3QsIHRydWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE1lcmdlcyBhbGwgdmFsdWVzIGZyb20gb3JpZ2luYWxPYmplY3QgYW5kIG92ZXJyaWRlT2JqZWN0IGludG8gYSBuZXcgb2JqZWN0IHRoYXQgaXMgcmV0dXJuZWQuXG4gICAgICAgICAqXG4gICAgICAgICAqIFRoaXMgaXMgYSBkZWVwLW1lcmdlICh1bmxpa2UgT2JqZWN0LmFzc2lnbikuXG4gICAgICAgICAqXG4gICAgICAgICAqIEZpcnN0LCBhbGwgdmFsdWVzIGZyb20gb3JpZ2luYWxPYmplY3QgYXJlIG1lcmdlZCBpbnRvIGEgbmV3IG9iamVjdC5cbiAgICAgICAgICogVGhlbiBhbGwgdmFsdWVzIGZyb20gb3ZlcnJpZGVPYmplY3QgYXJlIG1lcmdlZCBpbnRvIHRoZSBzYW1lIG9iamVjdCwgb3ZlcnJpZGluZyBhbnkgY29ycmVzcG9uZGluZyBrZXlzIGZyb21cbiAgICAgICAgICogb3JpZ2luYWxPYmplY3QuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlIDxjYXB0aW9uPlNpbXBsZSBleGFtcGxlPC9jYXB0aW9uPlxuICAgICAgICAgKiBsZXQgb3JpZ2luYWxPYmplY3QgPSB7XG4gICAgICAgICAqICAgICAgZm9vOiBcImJhclwiLFxuICAgICAgICAgKiAgICAgIHBlcnNvbjoge1xuICAgICAgICAgKiAgICAgICAgICBuYW1lOiBcIlNhbmR5IGNsYXdzXCIsXG4gICAgICAgICAqICAgICAgICAgIGFnZTogNDJcbiAgICAgICAgICogICAgICB9XG4gICAgICAgICAqIH1cbiAgICAgICAgICpcbiAgICAgICAgICogbGV0IG92ZXJyaWRlT2JqZWN0ID0ge1xuICAgICAgICAgKiAgICAgIGZvbzogXCJiYXpcIixcbiAgICAgICAgICogICAgICBwZXJzb246IHtcbiAgICAgICAgICogICAgICAgICAgYWdlOiAyMyxcbiAgICAgICAgICogICAgICAgICAgcGhvbmU6IDEyMzQ1Njc4XG4gICAgICAgICAqICAgICAgfVxuICAgICAgICAgKiAgfVxuICAgICAgICAgKlxuICAgICAgICAgKiAgbGV0IG1lcmdlZE9iamVjdCA9IE9iamVjdE1hbmFnZXIubWVyZ2VBbmRDb3B5KG9yaWdpbmFsT2JqZWN0LCBvdmVycmlkZU9iamVjdCk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAvLyBtZXJnZWRPYmplY3Qgd2lsbCBub3cgYmU6XG4gICAgICAgICAqICBtZXJnZWRPYmplY3QgPT0ge1xuICAgICAgICAgKiAgICAgIGZvbzogXCJiYXpcIixcbiAgICAgICAgICogICAgICBwZXJzb246IHtcbiAgICAgICAgICogICAgICAgICAgYWdlOiAyMyxcbiAgICAgICAgICogICAgICAgICAgcGhvbmU6IDEyMzQ1Njc4LFxuICAgICAgICAgKiAgICAgICAgICBuYW1lOiBcIlNhbmR5IGNsYXdzXCJcbiAgICAgICAgICogICAgICB9XG4gICAgICAgICAqICB9XG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSBvcmlnaW5hbE9iamVjdCAgICBpbml0aWFsIHZhbHVlcyBmb3IgbmV3IG9iamVjdFxuICAgICAgICAgKiBAcGFyYW0gb3ZlcnJpZGVPYmplY3QgICAgb2JqZWN0IHRvIG92ZXJyaWRlIHZhbHVlcyBmcm9tIG9yaWdpbmFsIG9iamVjdCB3aXRoXG4gICAgICAgICAqIEByZXR1cm5zIHt7fX0gICAgICAgICAgICBuZXcgb2JqZWN0IGNvbnRhaW5pbmcgdmFsdWVzIGZyb20gb3JpZ2luYWxPYmplY3Qgb3ZlcnJpZGRlbiBieSBvdmVycmlkZU9iamVjdCAoc2VlIGV4YW1wbGUpXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6IFwibWVyZ2VBbmRDbG9uZVwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gbWVyZ2VBbmRDbG9uZShvcmlnaW5hbE9iamVjdCwgb3ZlcnJpZGVPYmplY3QpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tZXJnZShvcmlnaW5hbE9iamVjdCwgb3ZlcnJpZGVPYmplY3QsIGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDb3BpZXMgYWxsIHZhbHVlcyBmcm9tIGdpdmVuIG9yaWdpbmFsT2JqZWN0IGludG8gYSBuZXcgb2JqZWN0LCB3aGljaCBpcyByZXR1cm5lZCB0byBjYWxsZXIuXG4gICAgICAgICAqXG4gICAgICAgICAqIHVzZXMge0BsaW5rIE9iamVjdE1hbmFnZXIjbWVyZ2VBbmRDbG9uZX0sIGJ1dCBwYXNzZXMgYW4gZW1wdHkgb2JqZWN0IGFzIG9uZSBvZiB0aGUgdHdvIGl0IGRlc2lyZXMgZm9yIG1lcmdpbmcuLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gb3JpZ2luYWxPYmplY3RcbiAgICAgICAgICogQHJldHVybnMge3t9fVxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcImNsb25lXCIsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZShvcmlnaW5hbE9iamVjdCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWVyZ2VBbmRDbG9uZSh7fSwgb3JpZ2luYWxPYmplY3QpO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIE9iamVjdE1hbmFnZXI7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IE9iamVjdE1hbmFnZXI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lldnZfanNiYXNlL2xpYi91dGlscy9PYmplY3RNYW5hZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 4 */
/*!***********************************************!*\
  !*** ./~/ievv_jsbase/lib/utils/typeDetect.js ***!
  \***********************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = typeDetect;\n/**\n * Detect the type of an object and return the\n * result as a string.\n *\n * Handles the following types:\n *\n * - null  (returned as ``\"null\"``).\n * - undefined  (returned as ``\"undefined\"``).\n * - Number  (returned as ``\"number\"``).\n * - Boolean  (returned as ``\"boolean\"``).\n * - String  (returned as ``\"string\"``).\n * - Array  (returned as ``\"array\"``).\n * - Map  (returned as ``\"map\"``).\n * - Set  (returned as ``\"set\"``).\n * - Function  (returned as ``\"function\"``).\n * - Object  (returned as ``\"object\"``).\n *\n * We do not handle classes - they are returned as ``\"function\"``.\n * We could handle classes, but for Babel classes that will require\n * a fairly expensive and error prone regex.\n *\n * @param obj An object to detect the type for.\n * @returns {string}\n */\nfunction typeDetect(obj) {\n    if (obj === null) {\n        return 'null';\n    }\n    var typeOf = typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    if (typeOf === 'undefined') {\n        return 'undefined';\n    }\n    if (typeOf === 'number') {\n        return 'number';\n    }\n    if (typeOf === 'boolean') {\n        return 'boolean';\n    }\n    if (typeOf === 'string') {\n        return 'string';\n    }\n    if (typeOf === 'function') {\n        return 'function';\n    }\n    if (Array.isArray(obj)) {\n        return 'array';\n    }\n    if (obj instanceof Map) {\n        return 'map';\n    }\n    if (obj instanceof Set) {\n        return 'set';\n    }\n    return 'object';\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaWV2dl9qc2Jhc2UvbGliL3V0aWxzL3R5cGVEZXRlY3QuanM/ODdlZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5leHBvcnRzLmRlZmF1bHQgPSB0eXBlRGV0ZWN0O1xuLyoqXG4gKiBEZXRlY3QgdGhlIHR5cGUgb2YgYW4gb2JqZWN0IGFuZCByZXR1cm4gdGhlXG4gKiByZXN1bHQgYXMgYSBzdHJpbmcuXG4gKlxuICogSGFuZGxlcyB0aGUgZm9sbG93aW5nIHR5cGVzOlxuICpcbiAqIC0gbnVsbCAgKHJldHVybmVkIGFzIGBgXCJudWxsXCJgYCkuXG4gKiAtIHVuZGVmaW5lZCAgKHJldHVybmVkIGFzIGBgXCJ1bmRlZmluZWRcImBgKS5cbiAqIC0gTnVtYmVyICAocmV0dXJuZWQgYXMgYGBcIm51bWJlclwiYGApLlxuICogLSBCb29sZWFuICAocmV0dXJuZWQgYXMgYGBcImJvb2xlYW5cImBgKS5cbiAqIC0gU3RyaW5nICAocmV0dXJuZWQgYXMgYGBcInN0cmluZ1wiYGApLlxuICogLSBBcnJheSAgKHJldHVybmVkIGFzIGBgXCJhcnJheVwiYGApLlxuICogLSBNYXAgIChyZXR1cm5lZCBhcyBgYFwibWFwXCJgYCkuXG4gKiAtIFNldCAgKHJldHVybmVkIGFzIGBgXCJzZXRcImBgKS5cbiAqIC0gRnVuY3Rpb24gIChyZXR1cm5lZCBhcyBgYFwiZnVuY3Rpb25cImBgKS5cbiAqIC0gT2JqZWN0ICAocmV0dXJuZWQgYXMgYGBcIm9iamVjdFwiYGApLlxuICpcbiAqIFdlIGRvIG5vdCBoYW5kbGUgY2xhc3NlcyAtIHRoZXkgYXJlIHJldHVybmVkIGFzIGBgXCJmdW5jdGlvblwiYGAuXG4gKiBXZSBjb3VsZCBoYW5kbGUgY2xhc3NlcywgYnV0IGZvciBCYWJlbCBjbGFzc2VzIHRoYXQgd2lsbCByZXF1aXJlXG4gKiBhIGZhaXJseSBleHBlbnNpdmUgYW5kIGVycm9yIHByb25lIHJlZ2V4LlxuICpcbiAqIEBwYXJhbSBvYmogQW4gb2JqZWN0IHRvIGRldGVjdCB0aGUgdHlwZSBmb3IuXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiB0eXBlRGV0ZWN0KG9iaikge1xuICAgIGlmIChvYmogPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuICdudWxsJztcbiAgICB9XG4gICAgdmFyIHR5cGVPZiA9IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG9iaik7XG4gICAgaWYgKHR5cGVPZiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuICd1bmRlZmluZWQnO1xuICAgIH1cbiAgICBpZiAodHlwZU9mID09PSAnbnVtYmVyJykge1xuICAgICAgICByZXR1cm4gJ251bWJlcic7XG4gICAgfVxuICAgIGlmICh0eXBlT2YgPT09ICdib29sZWFuJykge1xuICAgICAgICByZXR1cm4gJ2Jvb2xlYW4nO1xuICAgIH1cbiAgICBpZiAodHlwZU9mID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gJ3N0cmluZyc7XG4gICAgfVxuICAgIGlmICh0eXBlT2YgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuICdmdW5jdGlvbic7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgcmV0dXJuICdhcnJheSc7XG4gICAgfVxuICAgIGlmIChvYmogaW5zdGFuY2VvZiBNYXApIHtcbiAgICAgICAgcmV0dXJuICdtYXAnO1xuICAgIH1cbiAgICBpZiAob2JqIGluc3RhbmNlb2YgU2V0KSB7XG4gICAgICAgIHJldHVybiAnc2V0JztcbiAgICB9XG4gICAgcmV0dXJuICdvYmplY3QnO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9pZXZ2X2pzYmFzZS9saWIvdXRpbHMvdHlwZURldGVjdC5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 5 */
/*!*********************************************************!*\
  !*** ./~/ievv_jsbase/lib/http/HttpDjangoJsonRequest.js ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _HttpJsonRequest2 = __webpack_require__(/*! ./HttpJsonRequest */ 6);\n\nvar _HttpJsonRequest3 = _interopRequireDefault(_HttpJsonRequest2);\n\nvar _HttpCookies = __webpack_require__(/*! ./HttpCookies */ 13);\n\nvar _HttpCookies2 = _interopRequireDefault(_HttpCookies);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Extends HttpJsonRequest with automatic handling\n * of the Django csrftoken.\n */\nvar HttpDjangoJsonRequest = function (_HttpJsonRequest) {\n  _inherits(HttpDjangoJsonRequest, _HttpJsonRequest);\n\n  /**\n   * @param args Same args as for {@link HttpResponse}.\n   */\n  function HttpDjangoJsonRequest() {\n    var _ref;\n\n    _classCallCheck(this, HttpDjangoJsonRequest);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = HttpDjangoJsonRequest.__proto__ || Object.getPrototypeOf(HttpDjangoJsonRequest)).call.apply(_ref, [this].concat(args)));\n\n    _this._cookies = new _HttpCookies2.default();\n    return _this;\n  }\n\n  /**\n   * Returns the value of the ``csrftoken`` cookie.\n   */\n\n\n  _createClass(HttpDjangoJsonRequest, [{\n    key: \"setDefaultRequestHeaders\",\n\n\n    /**\n     * Ensures the csrftoken cookie value is automatically set in\n     * the ``X-CSRFToken`` header for all requests except GET and HEAD.\n     *\n     * @param method See {@link HttpRequest}.\n     */\n    value: function setDefaultRequestHeaders(method) {\n      _get(HttpDjangoJsonRequest.prototype.__proto__ || Object.getPrototypeOf(HttpDjangoJsonRequest.prototype), \"setDefaultRequestHeaders\", this).call(this, method);\n      var shouldAddCsrfToken = !(method == 'GET' || method == 'HEAD');\n      if (shouldAddCsrfToken) {\n        this.setRequestHeader(\"X-CSRFToken\", this.csrftoken);\n      }\n    }\n  }, {\n    key: \"csrftoken\",\n    get: function get() {\n      return this._cookies.getStrict('csrftoken');\n    }\n  }]);\n\n  return HttpDjangoJsonRequest;\n}(_HttpJsonRequest3.default);\n\nexports.default = HttpDjangoJsonRequest;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaWV2dl9qc2Jhc2UvbGliL2h0dHAvSHR0cERqYW5nb0pzb25SZXF1ZXN0LmpzPzgyMzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTsgfSB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfTtcblxudmFyIF9IdHRwSnNvblJlcXVlc3QyID0gcmVxdWlyZShcIi4vSHR0cEpzb25SZXF1ZXN0XCIpO1xuXG52YXIgX0h0dHBKc29uUmVxdWVzdDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9IdHRwSnNvblJlcXVlc3QyKTtcblxudmFyIF9IdHRwQ29va2llcyA9IHJlcXVpcmUoXCIuL0h0dHBDb29raWVzXCIpO1xuXG52YXIgX0h0dHBDb29raWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0h0dHBDb29raWVzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG4vKipcbiAqIEV4dGVuZHMgSHR0cEpzb25SZXF1ZXN0IHdpdGggYXV0b21hdGljIGhhbmRsaW5nXG4gKiBvZiB0aGUgRGphbmdvIGNzcmZ0b2tlbi5cbiAqL1xudmFyIEh0dHBEamFuZ29Kc29uUmVxdWVzdCA9IGZ1bmN0aW9uIChfSHR0cEpzb25SZXF1ZXN0KSB7XG4gIF9pbmhlcml0cyhIdHRwRGphbmdvSnNvblJlcXVlc3QsIF9IdHRwSnNvblJlcXVlc3QpO1xuXG4gIC8qKlxuICAgKiBAcGFyYW0gYXJncyBTYW1lIGFyZ3MgYXMgZm9yIHtAbGluayBIdHRwUmVzcG9uc2V9LlxuICAgKi9cbiAgZnVuY3Rpb24gSHR0cERqYW5nb0pzb25SZXF1ZXN0KCkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEh0dHBEamFuZ29Kc29uUmVxdWVzdCk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX3JlZiA9IEh0dHBEamFuZ29Kc29uUmVxdWVzdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEh0dHBEamFuZ29Kc29uUmVxdWVzdCkpLmNhbGwuYXBwbHkoX3JlZiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpO1xuXG4gICAgX3RoaXMuX2Nvb2tpZXMgPSBuZXcgX0h0dHBDb29raWVzMi5kZWZhdWx0KCk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBgYGNzcmZ0b2tlbmBgIGNvb2tpZS5cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoSHR0cERqYW5nb0pzb25SZXF1ZXN0LCBbe1xuICAgIGtleTogXCJzZXREZWZhdWx0UmVxdWVzdEhlYWRlcnNcIixcblxuXG4gICAgLyoqXG4gICAgICogRW5zdXJlcyB0aGUgY3NyZnRva2VuIGNvb2tpZSB2YWx1ZSBpcyBhdXRvbWF0aWNhbGx5IHNldCBpblxuICAgICAqIHRoZSBgYFgtQ1NSRlRva2VuYGAgaGVhZGVyIGZvciBhbGwgcmVxdWVzdHMgZXhjZXB0IEdFVCBhbmQgSEVBRC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBtZXRob2QgU2VlIHtAbGluayBIdHRwUmVxdWVzdH0uXG4gICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldERlZmF1bHRSZXF1ZXN0SGVhZGVycyhtZXRob2QpIHtcbiAgICAgIF9nZXQoSHR0cERqYW5nb0pzb25SZXF1ZXN0LnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEh0dHBEamFuZ29Kc29uUmVxdWVzdC5wcm90b3R5cGUpLCBcInNldERlZmF1bHRSZXF1ZXN0SGVhZGVyc1wiLCB0aGlzKS5jYWxsKHRoaXMsIG1ldGhvZCk7XG4gICAgICB2YXIgc2hvdWxkQWRkQ3NyZlRva2VuID0gIShtZXRob2QgPT0gJ0dFVCcgfHwgbWV0aG9kID09ICdIRUFEJyk7XG4gICAgICBpZiAoc2hvdWxkQWRkQ3NyZlRva2VuKSB7XG4gICAgICAgIHRoaXMuc2V0UmVxdWVzdEhlYWRlcihcIlgtQ1NSRlRva2VuXCIsIHRoaXMuY3NyZnRva2VuKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY3NyZnRva2VuXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fY29va2llcy5nZXRTdHJpY3QoJ2NzcmZ0b2tlbicpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBIdHRwRGphbmdvSnNvblJlcXVlc3Q7XG59KF9IdHRwSnNvblJlcXVlc3QzLmRlZmF1bHQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBIdHRwRGphbmdvSnNvblJlcXVlc3Q7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lldnZfanNiYXNlL2xpYi9odHRwL0h0dHBEamFuZ29Kc29uUmVxdWVzdC5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 6 */
/*!***************************************************!*\
  !*** ./~/ievv_jsbase/lib/http/HttpJsonRequest.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _HttpJsonResponse = __webpack_require__(/*! ./HttpJsonResponse */ 7);\n\nvar _HttpJsonResponse2 = _interopRequireDefault(_HttpJsonResponse);\n\nvar _HttpRequest2 = __webpack_require__(/*! ./HttpRequest */ 10);\n\nvar _HttpRequest3 = _interopRequireDefault(_HttpRequest2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Extends HttpRequest with transparent JSON request/response handling.\n */\nvar JsonHttpRequest = function (_HttpRequest) {\n  _inherits(JsonHttpRequest, _HttpRequest);\n\n  function JsonHttpRequest() {\n    _classCallCheck(this, JsonHttpRequest);\n\n    return _possibleConstructorReturn(this, (JsonHttpRequest.__proto__ || Object.getPrototypeOf(JsonHttpRequest)).apply(this, arguments));\n  }\n\n  _createClass(JsonHttpRequest, [{\n    key: \"makeRequestBody\",\n\n    /**\n     * Overridden to automatically convert request data to JSON.\n     */\n    value: function makeRequestBody(data) {\n      return JSON.stringify(data);\n    }\n\n    /**\n     * Overridden to return the response as a\n     * {@link HttpJsonResponse} instead if a HttpResponse.\n     *\n     * @returns {HttpJsonResponse}\n     */\n\n  }, {\n    key: \"makeResponse\",\n    value: function makeResponse() {\n      return new _HttpJsonResponse2.default(this.request);\n    }\n\n    /**\n     * Overridden to ensure we send the correct content-type header for\n     * json requests.\n     */\n\n  }, {\n    key: \"setDefaultRequestHeaders\",\n    value: function setDefaultRequestHeaders(method) {\n      _get(JsonHttpRequest.prototype.__proto__ || Object.getPrototypeOf(JsonHttpRequest.prototype), \"setDefaultRequestHeaders\", this).call(this, method);\n      this.setRequestHeader('Accept', 'application/json');\n      this.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n    }\n  }]);\n\n  return JsonHttpRequest;\n}(_HttpRequest3.default);\n\nexports.default = JsonHttpRequest;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaWV2dl9qc2Jhc2UvbGliL2h0dHAvSHR0cEpzb25SZXF1ZXN0LmpzPzcxNjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTsgfSB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfTtcblxudmFyIF9IdHRwSnNvblJlc3BvbnNlID0gcmVxdWlyZShcIi4vSHR0cEpzb25SZXNwb25zZVwiKTtcblxudmFyIF9IdHRwSnNvblJlc3BvbnNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0h0dHBKc29uUmVzcG9uc2UpO1xuXG52YXIgX0h0dHBSZXF1ZXN0MiA9IHJlcXVpcmUoXCIuL0h0dHBSZXF1ZXN0XCIpO1xuXG52YXIgX0h0dHBSZXF1ZXN0MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0h0dHBSZXF1ZXN0Mik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuLyoqXG4gKiBFeHRlbmRzIEh0dHBSZXF1ZXN0IHdpdGggdHJhbnNwYXJlbnQgSlNPTiByZXF1ZXN0L3Jlc3BvbnNlIGhhbmRsaW5nLlxuICovXG52YXIgSnNvbkh0dHBSZXF1ZXN0ID0gZnVuY3Rpb24gKF9IdHRwUmVxdWVzdCkge1xuICBfaW5oZXJpdHMoSnNvbkh0dHBSZXF1ZXN0LCBfSHR0cFJlcXVlc3QpO1xuXG4gIGZ1bmN0aW9uIEpzb25IdHRwUmVxdWVzdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSnNvbkh0dHBSZXF1ZXN0KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoSnNvbkh0dHBSZXF1ZXN0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSnNvbkh0dHBSZXF1ZXN0KSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSnNvbkh0dHBSZXF1ZXN0LCBbe1xuICAgIGtleTogXCJtYWtlUmVxdWVzdEJvZHlcIixcblxuICAgIC8qKlxuICAgICAqIE92ZXJyaWRkZW4gdG8gYXV0b21hdGljYWxseSBjb252ZXJ0IHJlcXVlc3QgZGF0YSB0byBKU09OLlxuICAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBtYWtlUmVxdWVzdEJvZHkoZGF0YSkge1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE92ZXJyaWRkZW4gdG8gcmV0dXJuIHRoZSByZXNwb25zZSBhcyBhXG4gICAgICoge0BsaW5rIEh0dHBKc29uUmVzcG9uc2V9IGluc3RlYWQgaWYgYSBIdHRwUmVzcG9uc2UuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7SHR0cEpzb25SZXNwb25zZX1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIm1ha2VSZXNwb25zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBtYWtlUmVzcG9uc2UoKSB7XG4gICAgICByZXR1cm4gbmV3IF9IdHRwSnNvblJlc3BvbnNlMi5kZWZhdWx0KHRoaXMucmVxdWVzdCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGRlbiB0byBlbnN1cmUgd2Ugc2VuZCB0aGUgY29ycmVjdCBjb250ZW50LXR5cGUgaGVhZGVyIGZvclxuICAgICAqIGpzb24gcmVxdWVzdHMuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJzZXREZWZhdWx0UmVxdWVzdEhlYWRlcnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0RGVmYXVsdFJlcXVlc3RIZWFkZXJzKG1ldGhvZCkge1xuICAgICAgX2dldChKc29uSHR0cFJlcXVlc3QucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSnNvbkh0dHBSZXF1ZXN0LnByb3RvdHlwZSksIFwic2V0RGVmYXVsdFJlcXVlc3RIZWFkZXJzXCIsIHRoaXMpLmNhbGwodGhpcywgbWV0aG9kKTtcbiAgICAgIHRoaXMuc2V0UmVxdWVzdEhlYWRlcignQWNjZXB0JywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgICAgIHRoaXMuc2V0UmVxdWVzdEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSnNvbkh0dHBSZXF1ZXN0O1xufShfSHR0cFJlcXVlc3QzLmRlZmF1bHQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBKc29uSHR0cFJlcXVlc3Q7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lldnZfanNiYXNlL2xpYi9odHRwL0h0dHBKc29uUmVxdWVzdC5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 7 */
/*!****************************************************!*\
  !*** ./~/ievv_jsbase/lib/http/HttpJsonResponse.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _HttpResponse2 = __webpack_require__(/*! ./HttpResponse */ 8);\n\nvar _HttpResponse3 = _interopRequireDefault(_HttpResponse2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Extends HttpResponse with extra functionality for\n * working with JSON response data.\n *\n * The most important addition is the {@link HttpJsonResponse#bodydata}\n * property that you will want to use instead of\n * {@link HttpResponse#body}.\n */\nvar HttpJsonResponse = function (_HttpResponse) {\n    _inherits(HttpJsonResponse, _HttpResponse);\n\n    function HttpJsonResponse() {\n        _classCallCheck(this, HttpJsonResponse);\n\n        return _possibleConstructorReturn(this, (HttpJsonResponse.__proto__ || Object.getPrototypeOf(HttpJsonResponse)).apply(this, arguments));\n    }\n\n    _createClass(HttpJsonResponse, [{\n        key: \"__parseResponseTextAsJson\",\n        value: function __parseResponseTextAsJson() {\n            return JSON.parse(this.body);\n        }\n\n        /**\n         * Overriden to make use of JSON.stringify to produce more\n         * pretty output.\n         */\n\n    }, {\n        key: \"getPrettyfiedBody\",\n        value: function getPrettyfiedBody() {\n            var prettyBody = void 0;\n            try {\n                prettyBody = JSON.stringify(this.bodydata, null, 2);\n            } catch (SyntaxError) {\n                prettyBody = this.body;\n            }\n            return prettyBody;\n        }\n    }, {\n        key: \"bodydata\",\n\n\n        /**\n         * Get the response body (the responseText attribute of the XMLHttpRequest)\n         * decoded from JSON.\n         */\n        get: function get() {\n            if (this.isConnectionRefused()) {\n                return null;\n            } else {\n                return this.__parseResponseTextAsJson();\n            }\n        }\n    }]);\n\n    return HttpJsonResponse;\n}(_HttpResponse3.default);\n\nexports.default = HttpJsonResponse;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaWV2dl9qc2Jhc2UvbGliL2h0dHAvSHR0cEpzb25SZXNwb25zZS5qcz9mOGRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfSHR0cFJlc3BvbnNlMiA9IHJlcXVpcmUoXCIuL0h0dHBSZXNwb25zZVwiKTtcblxudmFyIF9IdHRwUmVzcG9uc2UzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfSHR0cFJlc3BvbnNlMik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuLyoqXG4gKiBFeHRlbmRzIEh0dHBSZXNwb25zZSB3aXRoIGV4dHJhIGZ1bmN0aW9uYWxpdHkgZm9yXG4gKiB3b3JraW5nIHdpdGggSlNPTiByZXNwb25zZSBkYXRhLlxuICpcbiAqIFRoZSBtb3N0IGltcG9ydGFudCBhZGRpdGlvbiBpcyB0aGUge0BsaW5rIEh0dHBKc29uUmVzcG9uc2UjYm9keWRhdGF9XG4gKiBwcm9wZXJ0eSB0aGF0IHlvdSB3aWxsIHdhbnQgdG8gdXNlIGluc3RlYWQgb2ZcbiAqIHtAbGluayBIdHRwUmVzcG9uc2UjYm9keX0uXG4gKi9cbnZhciBIdHRwSnNvblJlc3BvbnNlID0gZnVuY3Rpb24gKF9IdHRwUmVzcG9uc2UpIHtcbiAgICBfaW5oZXJpdHMoSHR0cEpzb25SZXNwb25zZSwgX0h0dHBSZXNwb25zZSk7XG5cbiAgICBmdW5jdGlvbiBIdHRwSnNvblJlc3BvbnNlKCkge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSHR0cEpzb25SZXNwb25zZSk7XG5cbiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChIdHRwSnNvblJlc3BvbnNlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSHR0cEpzb25SZXNwb25zZSkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhIdHRwSnNvblJlc3BvbnNlLCBbe1xuICAgICAgICBrZXk6IFwiX19wYXJzZVJlc3BvbnNlVGV4dEFzSnNvblwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gX19wYXJzZVJlc3BvbnNlVGV4dEFzSnNvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHRoaXMuYm9keSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogT3ZlcnJpZGVuIHRvIG1ha2UgdXNlIG9mIEpTT04uc3RyaW5naWZ5IHRvIHByb2R1Y2UgbW9yZVxuICAgICAgICAgKiBwcmV0dHkgb3V0cHV0LlxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcImdldFByZXR0eWZpZWRCb2R5XCIsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQcmV0dHlmaWVkQm9keSgpIHtcbiAgICAgICAgICAgIHZhciBwcmV0dHlCb2R5ID0gdm9pZCAwO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwcmV0dHlCb2R5ID0gSlNPTi5zdHJpbmdpZnkodGhpcy5ib2R5ZGF0YSwgbnVsbCwgMik7XG4gICAgICAgICAgICB9IGNhdGNoIChTeW50YXhFcnJvcikge1xuICAgICAgICAgICAgICAgIHByZXR0eUJvZHkgPSB0aGlzLmJvZHk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcHJldHR5Qm9keTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcImJvZHlkYXRhXCIsXG5cblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0IHRoZSByZXNwb25zZSBib2R5ICh0aGUgcmVzcG9uc2VUZXh0IGF0dHJpYnV0ZSBvZiB0aGUgWE1MSHR0cFJlcXVlc3QpXG4gICAgICAgICAqIGRlY29kZWQgZnJvbSBKU09OLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5pc0Nvbm5lY3Rpb25SZWZ1c2VkKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19wYXJzZVJlc3BvbnNlVGV4dEFzSnNvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIEh0dHBKc29uUmVzcG9uc2U7XG59KF9IdHRwUmVzcG9uc2UzLmRlZmF1bHQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBIdHRwSnNvblJlc3BvbnNlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9pZXZ2X2pzYmFzZS9saWIvaHR0cC9IdHRwSnNvblJlc3BvbnNlLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 8 */
/*!************************************************!*\
  !*** ./~/ievv_jsbase/lib/http/HttpResponse.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.HttpResponseError = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = __webpack_require__(/*! ../makeCustomError */ 9);\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Error class created by {@link HttpResponse#toError}.\n *\n * @type {Error}\n */\nvar HttpResponseError = exports.HttpResponseError = (0, _makeCustomError2.default)('HttpResponseError');\n\n/**\n * HTTP response.\n *\n * Wraps a XMLHttpRequest to make it easier to get\n * information about the response from the server.\n */\n\nvar HttpResponse = function () {\n    /**\n     *\n     * @param request A XMLHttpRequest object.\n     */\n    function HttpResponse(request) {\n        _classCallCheck(this, HttpResponse);\n\n        this.request = request;\n    }\n\n    /**\n     * Returns ``true`` if {@link HttpResponse#status} is\n     * 200 or larger and less than 300.\n     */\n\n\n    _createClass(HttpResponse, [{\n        key: \"isSuccess\",\n        value: function isSuccess() {\n            return this.status >= 200 && this.status < 300;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is\n         * 300 or larger and less than 400.\n         */\n\n    }, {\n        key: \"isRedirect\",\n        value: function isRedirect() {\n            return this.status >= 300 && this.status < 400;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is\n         * 400 or larger and less than 500.\n         */\n\n    }, {\n        key: \"isClientError\",\n        value: function isClientError() {\n            return this.status >= 400 && this.status < 500;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is\n         * 500 or larger.\n         */\n\n    }, {\n        key: \"isServerError\",\n        value: function isServerError() {\n            return this.status >= 500;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is 0.\n         * Assuming the XMLHttpRequest was actually sent, this\n         * means that the connection was refused.\n         */\n\n    }, {\n        key: \"isConnectionRefused\",\n        value: function isConnectionRefused() {\n            return this.status === 0;\n        }\n\n        /**\n         * Get the status code of the response (the status attribute of the XMLHttpRequest).\n         */\n\n    }, {\n        key: \"responseHeaderToString\",\n\n\n        /**\n         * Get the response header as string.\n         */\n        value: function responseHeaderToString() {\n            if (this.connectionRefused) {\n                return \"ERROR: Connection refused\";\n            } else {\n                return \"HTTP \" + this.status + \"\\n\" + this.request.getAllResponseHeaders();\n            }\n        }\n\n        /**\n         * Create a {@link HttpResponseError} from this HttpResponse.\n         *\n         * @returns {HttpResponseError} An HttpResponseError with this HttpResponse\n         *      as the ``response`` property.\n         */\n\n    }, {\n        key: \"toError\",\n        value: function toError() {\n            return new HttpResponseError(this.toString(), {\n                response: this\n            });\n        }\n\n        /**\n         * Get {@link HttpResponse#body} pretty formatted.\n         *\n         * By default, this just returns {@link HttpResponse#body}\n         * but subclasses can override this to prettify the body\n         * if they know the output format of the body.\n         */\n\n    }, {\n        key: \"getPrettyfiedBody\",\n        value: function getPrettyfiedBody() {\n            return this.body;\n        }\n\n        /**\n         * Format as a string suitable for debugging.\n         */\n\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return this.responseHeaderToString() + \"\\n\\n\" + this.getPrettyfiedBody();\n        }\n    }, {\n        key: \"status\",\n        get: function get() {\n            return this.request.status;\n        }\n\n        /**\n         * Get the response body (the responseText attribute of the XMLHttpRequest).\n         */\n\n    }, {\n        key: \"body\",\n        get: function get() {\n            return this.request.responseText;\n        }\n    }]);\n\n    return HttpResponse;\n}();\n\nexports.default = HttpResponse;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 9 */
/*!**********************************************!*\
  !*** ./~/ievv_jsbase/lib/makeCustomError.js ***!
  \**********************************************/
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = makeCustomError;\n/**\n * Make a custom error \"class\".\n *\n * Makes an old style prototype based error class.\n *\n * @example <caption>Typical usage</caption>\n * // In myerrors.js\n * export let MyCustomError = makeCustomError('MyCustomError');\n *\n * // Using the error\n * import {MyCustomError} from './myerrors';\n * throw new MyCustomError('The message');\n *\n * @example <caption>Throwing the error - complete example</caption>\n * try {\n *     throw new MyCustomError('The message', {\n *          code: 'stuff_happened',\n *          details: {\n *              size: 10\n *          }\n *     });\n * } catch(e) {\n *     if(e instanceof MyCustomError) {\n *         console.error(`${e.toString()} -- Code: ${e.code}. Size: ${e.details.size}`);\n *     }\n * }\n *\n * @example <caption>Define an error that extends Error</caption>\n * let NotFoundError = makeCustomError('NotFoundError');\n * // error instanceof NotFoundError === true\n * // error instanceof Error === true\n *\n * @example <caption>Define an error that extends a built in error</caption>\n * let MyValueError = makeCustomError('MyValueError', TypeError);\n * let error = new MyValueError();\n * // error instanceof MyValueError === true\n * // error instanceof TypeError === true\n * // error instanceof Error === true\n *\n * @example <caption>Define an error that extends another custom error</caption>\n * let MySuperError = makeCustomError('MySuperError', TypeError);\n * let MySubError = makeCustomError('MySubError', MySuperError);\n * let error = new MySubError();\n * // error instanceof MySubError === true\n * // error instanceof MySuperError === true\n * // error instanceof TypeError === true\n * // error instanceof Error === true\n *\n * @param {string} name The name of the error class.\n * @param {Error} extendsError An optional Error to extend.\n *      Defaults to {@link Error}. Can be a built in error\n *      or a custom error created by this function.\n * @returns {Error} The created error class.\n */\nfunction makeCustomError(name, extendsError) {\n    extendsError = extendsError || Error;\n    var CustomError = function CustomError(message, properties) {\n        this.message = message;\n        var last_part = new extendsError().stack.match(/[^\\s]+$/);\n        this.stack = this.name + \" at \" + last_part;\n        if (typeof properties !== 'undefined') {\n            Object.assign(this, properties);\n        }\n    };\n    Object.setPrototypeOf(CustomError, extendsError);\n    CustomError.prototype = Object.create(extendsError.prototype);\n    CustomError.prototype.constructor = CustomError;\n    CustomError.prototype.message = \"\";\n    CustomError.prototype.name = name;\n    return CustomError;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vaWV2dl9qc2Jhc2UvbGliL21ha2VDdXN0b21FcnJvci5qcz82NDNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBtYWtlQ3VzdG9tRXJyb3I7XG4vKipcbiAqIE1ha2UgYSBjdXN0b20gZXJyb3IgXCJjbGFzc1wiLlxuICpcbiAqIE1ha2VzIGFuIG9sZCBzdHlsZSBwcm90b3R5cGUgYmFzZWQgZXJyb3IgY2xhc3MuXG4gKlxuICogQGV4YW1wbGUgPGNhcHRpb24+VHlwaWNhbCB1c2FnZTwvY2FwdGlvbj5cbiAqIC8vIEluIG15ZXJyb3JzLmpzXG4gKiBleHBvcnQgbGV0IE15Q3VzdG9tRXJyb3IgPSBtYWtlQ3VzdG9tRXJyb3IoJ015Q3VzdG9tRXJyb3InKTtcbiAqXG4gKiAvLyBVc2luZyB0aGUgZXJyb3JcbiAqIGltcG9ydCB7TXlDdXN0b21FcnJvcn0gZnJvbSAnLi9teWVycm9ycyc7XG4gKiB0aHJvdyBuZXcgTXlDdXN0b21FcnJvcignVGhlIG1lc3NhZ2UnKTtcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5UaHJvd2luZyB0aGUgZXJyb3IgLSBjb21wbGV0ZSBleGFtcGxlPC9jYXB0aW9uPlxuICogdHJ5IHtcbiAqICAgICB0aHJvdyBuZXcgTXlDdXN0b21FcnJvcignVGhlIG1lc3NhZ2UnLCB7XG4gKiAgICAgICAgICBjb2RlOiAnc3R1ZmZfaGFwcGVuZWQnLFxuICogICAgICAgICAgZGV0YWlsczoge1xuICogICAgICAgICAgICAgIHNpemU6IDEwXG4gKiAgICAgICAgICB9XG4gKiAgICAgfSk7XG4gKiB9IGNhdGNoKGUpIHtcbiAqICAgICBpZihlIGluc3RhbmNlb2YgTXlDdXN0b21FcnJvcikge1xuICogICAgICAgICBjb25zb2xlLmVycm9yKGAke2UudG9TdHJpbmcoKX0gLS0gQ29kZTogJHtlLmNvZGV9LiBTaXplOiAke2UuZGV0YWlscy5zaXplfWApO1xuICogICAgIH1cbiAqIH1cbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5EZWZpbmUgYW4gZXJyb3IgdGhhdCBleHRlbmRzIEVycm9yPC9jYXB0aW9uPlxuICogbGV0IE5vdEZvdW5kRXJyb3IgPSBtYWtlQ3VzdG9tRXJyb3IoJ05vdEZvdW5kRXJyb3InKTtcbiAqIC8vIGVycm9yIGluc3RhbmNlb2YgTm90Rm91bmRFcnJvciA9PT0gdHJ1ZVxuICogLy8gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA9PT0gdHJ1ZVxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkRlZmluZSBhbiBlcnJvciB0aGF0IGV4dGVuZHMgYSBidWlsdCBpbiBlcnJvcjwvY2FwdGlvbj5cbiAqIGxldCBNeVZhbHVlRXJyb3IgPSBtYWtlQ3VzdG9tRXJyb3IoJ015VmFsdWVFcnJvcicsIFR5cGVFcnJvcik7XG4gKiBsZXQgZXJyb3IgPSBuZXcgTXlWYWx1ZUVycm9yKCk7XG4gKiAvLyBlcnJvciBpbnN0YW5jZW9mIE15VmFsdWVFcnJvciA9PT0gdHJ1ZVxuICogLy8gZXJyb3IgaW5zdGFuY2VvZiBUeXBlRXJyb3IgPT09IHRydWVcbiAqIC8vIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPT09IHRydWVcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5EZWZpbmUgYW4gZXJyb3IgdGhhdCBleHRlbmRzIGFub3RoZXIgY3VzdG9tIGVycm9yPC9jYXB0aW9uPlxuICogbGV0IE15U3VwZXJFcnJvciA9IG1ha2VDdXN0b21FcnJvcignTXlTdXBlckVycm9yJywgVHlwZUVycm9yKTtcbiAqIGxldCBNeVN1YkVycm9yID0gbWFrZUN1c3RvbUVycm9yKCdNeVN1YkVycm9yJywgTXlTdXBlckVycm9yKTtcbiAqIGxldCBlcnJvciA9IG5ldyBNeVN1YkVycm9yKCk7XG4gKiAvLyBlcnJvciBpbnN0YW5jZW9mIE15U3ViRXJyb3IgPT09IHRydWVcbiAqIC8vIGVycm9yIGluc3RhbmNlb2YgTXlTdXBlckVycm9yID09PSB0cnVlXG4gKiAvLyBlcnJvciBpbnN0YW5jZW9mIFR5cGVFcnJvciA9PT0gdHJ1ZVxuICogLy8gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA9PT0gdHJ1ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIFRoZSBuYW1lIG9mIHRoZSBlcnJvciBjbGFzcy5cbiAqIEBwYXJhbSB7RXJyb3J9IGV4dGVuZHNFcnJvciBBbiBvcHRpb25hbCBFcnJvciB0byBleHRlbmQuXG4gKiAgICAgIERlZmF1bHRzIHRvIHtAbGluayBFcnJvcn0uIENhbiBiZSBhIGJ1aWx0IGluIGVycm9yXG4gKiAgICAgIG9yIGEgY3VzdG9tIGVycm9yIGNyZWF0ZWQgYnkgdGhpcyBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IgY2xhc3MuXG4gKi9cbmZ1bmN0aW9uIG1ha2VDdXN0b21FcnJvcihuYW1lLCBleHRlbmRzRXJyb3IpIHtcbiAgICBleHRlbmRzRXJyb3IgPSBleHRlbmRzRXJyb3IgfHwgRXJyb3I7XG4gICAgdmFyIEN1c3RvbUVycm9yID0gZnVuY3Rpb24gQ3VzdG9tRXJyb3IobWVzc2FnZSwgcHJvcGVydGllcykge1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB2YXIgbGFzdF9wYXJ0ID0gbmV3IGV4dGVuZHNFcnJvcigpLnN0YWNrLm1hdGNoKC9bXlxcc10rJC8pO1xuICAgICAgICB0aGlzLnN0YWNrID0gdGhpcy5uYW1lICsgXCIgYXQgXCIgKyBsYXN0X3BhcnQ7XG4gICAgICAgIGlmICh0eXBlb2YgcHJvcGVydGllcyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgcHJvcGVydGllcyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihDdXN0b21FcnJvciwgZXh0ZW5kc0Vycm9yKTtcbiAgICBDdXN0b21FcnJvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKGV4dGVuZHNFcnJvci5wcm90b3R5cGUpO1xuICAgIEN1c3RvbUVycm9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEN1c3RvbUVycm9yO1xuICAgIEN1c3RvbUVycm9yLnByb3RvdHlwZS5tZXNzYWdlID0gXCJcIjtcbiAgICBDdXN0b21FcnJvci5wcm90b3R5cGUubmFtZSA9IG5hbWU7XG4gICAgcmV0dXJuIEN1c3RvbUVycm9yO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9pZXZ2X2pzYmFzZS9saWIvbWFrZUN1c3RvbUVycm9yLmpzXG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 10 */
/*!***********************************************!*\
  !*** ./~/ievv_jsbase/lib/http/HttpRequest.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _HttpResponse = __webpack_require__(/*! ./HttpResponse */ 8);\n\nvar _HttpResponse2 = _interopRequireDefault(_HttpResponse);\n\nvar _UrlParser = __webpack_require__(/*! ./UrlParser */ 11);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * API for performing HTTP requests.\n *\n * @example <caption>Make a POST request</caption>\n * const request = new HttpRequest('http://example.com/api/users/');\n * request.post('Hello world')\n *     .then((response) => {\n *         // Success - response is a HttpResponse object.\n *         console.log(response.toString());\n *         if(response.isSuccess()) {\n *             console.log('Success: ', response.body);\n *         } else if (response.isRedirect) {\n *             console.log('Hmm strange, we got a redirect instead of a 2xx response.');\n *         }\n *     })\n *     .catch((error) => {\n *         // Error - response is an HttpResponse object.\n *         console.error(error.toString());\n *         if(error.response.isRedirect()) {\n *             // Yes - redirect is treated as an error by default.\n *             // you can change this by supplying an extra argument\n *             // to HttpResponse()\n *             console.log('We got a 3xx response!', error.response.body);\n *         } else if(error.response.isClientError()) {\n *             console.log('We got a 4xx response!', error.response.body);\n *         } else if (error.response.isServerError()) {\n *             console.log('We got a 5xx response!', error.response.body);\n *         } else if (error.response.isConnectionRefused()) {\n *             console.log('Connection refused.');\n *         }\n *         // throw error;  // You can throw the error as an exception\n *     });\n *\n * @example <caption>Make a GET request with a querystring</caption>\n * const request = new HttpRequest('http://example.com/api/users/');\n * request.urlParser.queryString.set('search', 'doe');\n * request.get()\n *     .then((response) => {\n *         console.log('Success!', response.toString());\n *     })\n *     .catch((error) => {\n *         console.error('Error:', error.toString());\n *     });\n */\nvar HttpRequest = function () {\n    /**\n     * @param {string} url The URL to request.\n     *      If this is supplied, it is passed to\n     *      {@link HttpRequest#setUrl}\n     */\n    function HttpRequest(url) {\n        _classCallCheck(this, HttpRequest);\n\n        this._treatRedirectResponseAsError = true;\n        this.request = new XMLHttpRequest();\n        this._urlParser = null;\n        if (typeof url !== 'undefined') {\n            this.setUrl(url);\n        }\n    }\n\n    /**\n     * Get the parsed URL of the request.\n     *\n     * @returns {UrlParser} The UrlParser for the parsed URL.\n     */\n\n\n    _createClass(HttpRequest, [{\n        key: \"setUrl\",\n\n\n        /**\n         * Set the URL of the request.\n         *\n         * @param {String} url The URL.\n         */\n        value: function setUrl(url) {\n            this._urlParser = new _UrlParser.UrlParser(url);\n        }\n\n        /**\n         * Set how we treat 3xx responses.\n         *\n         * By default they are treated as errors, but you can change\n         * this behavior by calling this function.\n         *\n         * @param {bool} treatRedirectResponseAsError Treat 3xx responses as\n         *      errors?\n         *\n         * @example <caption>Do not treat 3xx responses as error</caption>\n         * const request = HttpRequest('http://example.com/api/');\n         * request.setTreatRedirectResponseAsError(false);\n         */\n\n    }, {\n        key: \"setTreatRedirectResponseAsError\",\n        value: function setTreatRedirectResponseAsError(treatRedirectResponseAsError) {\n            this._treatRedirectResponseAsError = treatRedirectResponseAsError;\n        }\n\n        /**\n         * Send the request.\n         *\n         * @param method The HTTP method. I.e.: \"get\", \"post\", ...\n         * @param data Request body data. This is sent through\n         *      {@link HttpRequest#makeRequestBody} before it\n         *      is sent.*\n         * @return A Promise.\n         *\n         *      The resolve function argument is an\n         *      an object of whatever {@link HttpRequest#makeResponse}\n         *      returns.\n         *\n         *      The reject function argument is a\n         *      {@link HttpResponseError} object created using\n         *      {@link HttpResponse#toError}.\n         */\n\n    }, {\n        key: \"send\",\n        value: function send(method, data) {\n            var _this = this;\n\n            method = method.toUpperCase();\n            if (this._urlParser === null) {\n                throw new TypeError('Can not call send() without an url.');\n            }\n            return new Promise(function (resolve, reject) {\n                _this.request.open(method, _this.urlParser.buildUrl(), true);\n                _this.setDefaultRequestHeaders(method);\n                _this.request.onload = function () {\n                    return _this._onComplete(resolve, reject);\n                };\n                _this.request.onerror = function () {\n                    return _this._onComplete(resolve, reject);\n                };\n                _this.request.send(_this.makeRequestBody(data));\n            });\n        }\n\n        /**\n         * Shortcut for ``send(\"get\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"get\",\n        value: function get(data) {\n            return this.send('get', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"head\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"head\",\n        value: function head(data) {\n            return this.send('head', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"post\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"post\",\n        value: function post(data) {\n            return this.send('post', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"put\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"put\",\n        value: function put(data) {\n            return this.send('put', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"patch\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"patch\",\n        value: function patch(data) {\n            return this.send('patch', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"delete\", data)``.\n         *\n         * Named httpdelete to avoid crash with builtin keyword ``delete``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"httpdelete\",\n        value: function httpdelete(data) {\n            return this.send('delete', data);\n        }\n\n        /**\n         * Make request body from the provided data.\n         *\n         * By default this just returns the provided data,\n         * but subclasses can override this to perform automatic\n         * conversion.\n         *\n         * Must return a string.\n         */\n\n    }, {\n        key: \"makeRequestBody\",\n        value: function makeRequestBody(data) {\n            return data;\n        }\n\n        /**\n         * Creates a {@link HttpResponse}.\n         * @returns {HttpResponse}\n         */\n\n    }, {\n        key: \"makeResponse\",\n        value: function makeResponse() {\n            return new _HttpResponse2.default(this.request);\n        }\n\n        /**\n         * Set a request header.\n         *\n         * @param header The header name. E.g.: ``\"Content-type\"``.\n         * @param value The header value.\n         */\n\n    }, {\n        key: \"setRequestHeader\",\n        value: function setRequestHeader(header, value) {\n            this.request.setRequestHeader(header, value);\n        }\n\n        /**\n         * Set default request headers.\n         *\n         * Does nothing by default, but subclasses can override this.\n         *\n         * @param method The HTTP request method (GET, POST, PUT, ...).\n         *      Will always be uppercase.\n         */\n\n    }, {\n        key: \"setDefaultRequestHeaders\",\n        value: function setDefaultRequestHeaders(method) {}\n    }, {\n        key: \"_onComplete\",\n        value: function _onComplete(resolve, reject) {\n            var response = this.makeResponse();\n            var isSuccess = false;\n            if (this._treatRedirectResponseAsError) {\n                isSuccess = response.isSuccess();\n            } else {\n                isSuccess = response.isSuccess() || response.isRedirect();\n            }\n            if (isSuccess) {\n                resolve(response);\n            } else {\n                reject(response.toError());\n            }\n        }\n    }, {\n        key: \"urlParser\",\n        get: function get() {\n            return this._urlParser;\n        }\n    }]);\n\n    return HttpRequest;\n}();\n\nexports.default = HttpRequest;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 11 */
/*!*********************************************!*\
  !*** ./~/ievv_jsbase/lib/http/UrlParser.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UrlParser = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _QueryString = __webpack_require__(/*! ./QueryString */ 12);\n\nvar _QueryString2 = _interopRequireDefault(_QueryString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * URL parser.\n *\n * @example\n * const urlparser = new UrlParser('http://example.com/api/people?name=Jane');\n * querystring.queryString.set('search', 'doe');\n * // urlparser.buildUrl() === 'http://example.com/api/people?name=Jane&search=doe'\n */\nvar UrlParser = exports.UrlParser = function () {\n  function UrlParser(url) {\n    _classCallCheck(this, UrlParser);\n\n    if (typeof url !== 'string') {\n      throw new TypeError('url must be a string.');\n    }\n    var urlSplit = url.split('?');\n    this._baseUrl = urlSplit[0];\n    this._parsedBaseUrl = this._parseBaseUrl();\n\n    /**\n     * The query-string of the the URL.\n     * @type {QueryString}\n     */\n    this.queryString = null;\n\n    if (urlSplit.length > 1) {\n      this.setQueryString(new _QueryString2.default(urlSplit[1]));\n    } else {\n      this.setQueryString(new _QueryString2.default());\n    }\n  }\n\n  _createClass(UrlParser, [{\n    key: '_splitDomainAndPath',\n    value: function _splitDomainAndPath(domainAndPath) {\n      var split = domainAndPath.split('/');\n      var domain = split.shift();\n      var path = '';\n      if (split.length > 0) {\n        path = '/' + split.join('/');\n      }\n      return {\n        domain: domain,\n        path: path\n      };\n    }\n  }, {\n    key: '_parseBaseUrl',\n    value: function _parseBaseUrl() {\n      var parsedBaseUrl = {\n        scheme: null,\n        path: '',\n        domain: null\n      };\n      if (this._baseUrl.match(/^[a-zA-Z0-9]+:\\/\\//)) {\n        // We have a full URL (<scheme>://<domain><path>)\n        var split = this._baseUrl.split('://');\n        parsedBaseUrl.scheme = split.shift();\n        var remaining = split.join('://');\n        var domainAndPath = this._splitDomainAndPath(remaining);\n        parsedBaseUrl.domain = domainAndPath.domain;\n        parsedBaseUrl.path = domainAndPath.path;\n      } else if (this._baseUrl.length > 0 && this._baseUrl.substring(0, 1) == '/') {\n        // We have path only\n        parsedBaseUrl.path = '' + this._baseUrl;\n      } else {\n        // We have domain and path, but no scheme (<domain><path>)\n        var _domainAndPath = this._splitDomainAndPath(this._baseUrl);\n        parsedBaseUrl.domain = _domainAndPath.domain;\n        parsedBaseUrl.path = _domainAndPath.path;\n      }\n      return parsedBaseUrl;\n    }\n  }, {\n    key: 'buildUrl',\n\n\n    /**\n     * Build the URL.\n     * @returns {String} The built URL.\n     */\n    value: function buildUrl() {\n      var url = this._baseUrl;\n      if (!this.queryString.isEmpty()) {\n        url = url + '?' + this.queryString.urlencode();\n      }\n      return url;\n    }\n\n    /**\n     * Set/replace the query-string.\n     *\n     * @param {QueryString} queryStringObject The QueryString object\n     *      to replace the current query-string with.\n     *\n     * @example\n     * const urlparser = UrlParser('http://example.com/api/people');\n     * const querystring = new QueryString();\n     * querystring.set('search', 'doe');\n     * urlparser.setQueryString(querystring);\n     * // urlparser.buildUrl() === 'http://example.com/api/people?search=doe'\n     */\n\n  }, {\n    key: 'setQueryString',\n    value: function setQueryString(queryStringObject) {\n      this.queryString = queryStringObject;\n    }\n  }, {\n    key: 'scheme',\n    get: function get() {\n      return this._parsedBaseUrl.scheme;\n    }\n  }, {\n    key: 'path',\n    get: function get() {\n      return this._parsedBaseUrl.path;\n    }\n  }, {\n    key: 'domain',\n    get: function get() {\n      return this._parsedBaseUrl.domain;\n    }\n  }]);\n\n  return UrlParser;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lldnZfanNiYXNlL2xpYi9odHRwL1VybFBhcnNlci5qcz83NDVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuVXJsUGFyc2VyID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX1F1ZXJ5U3RyaW5nID0gcmVxdWlyZSgnLi9RdWVyeVN0cmluZycpO1xuXG52YXIgX1F1ZXJ5U3RyaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1F1ZXJ5U3RyaW5nKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLyoqXG4gKiBVUkwgcGFyc2VyLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCB1cmxwYXJzZXIgPSBuZXcgVXJsUGFyc2VyKCdodHRwOi8vZXhhbXBsZS5jb20vYXBpL3Blb3BsZT9uYW1lPUphbmUnKTtcbiAqIHF1ZXJ5c3RyaW5nLnF1ZXJ5U3RyaW5nLnNldCgnc2VhcmNoJywgJ2RvZScpO1xuICogLy8gdXJscGFyc2VyLmJ1aWxkVXJsKCkgPT09ICdodHRwOi8vZXhhbXBsZS5jb20vYXBpL3Blb3BsZT9uYW1lPUphbmUmc2VhcmNoPWRvZSdcbiAqL1xudmFyIFVybFBhcnNlciA9IGV4cG9ydHMuVXJsUGFyc2VyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBVcmxQYXJzZXIodXJsKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVybFBhcnNlcik7XG5cbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3VybCBtdXN0IGJlIGEgc3RyaW5nLicpO1xuICAgIH1cbiAgICB2YXIgdXJsU3BsaXQgPSB1cmwuc3BsaXQoJz8nKTtcbiAgICB0aGlzLl9iYXNlVXJsID0gdXJsU3BsaXRbMF07XG4gICAgdGhpcy5fcGFyc2VkQmFzZVVybCA9IHRoaXMuX3BhcnNlQmFzZVVybCgpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHF1ZXJ5LXN0cmluZyBvZiB0aGUgdGhlIFVSTC5cbiAgICAgKiBAdHlwZSB7UXVlcnlTdHJpbmd9XG4gICAgICovXG4gICAgdGhpcy5xdWVyeVN0cmluZyA9IG51bGw7XG5cbiAgICBpZiAodXJsU3BsaXQubGVuZ3RoID4gMSkge1xuICAgICAgdGhpcy5zZXRRdWVyeVN0cmluZyhuZXcgX1F1ZXJ5U3RyaW5nMi5kZWZhdWx0KHVybFNwbGl0WzFdKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0UXVlcnlTdHJpbmcobmV3IF9RdWVyeVN0cmluZzIuZGVmYXVsdCgpKTtcbiAgICB9XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVXJsUGFyc2VyLCBbe1xuICAgIGtleTogJ19zcGxpdERvbWFpbkFuZFBhdGgnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfc3BsaXREb21haW5BbmRQYXRoKGRvbWFpbkFuZFBhdGgpIHtcbiAgICAgIHZhciBzcGxpdCA9IGRvbWFpbkFuZFBhdGguc3BsaXQoJy8nKTtcbiAgICAgIHZhciBkb21haW4gPSBzcGxpdC5zaGlmdCgpO1xuICAgICAgdmFyIHBhdGggPSAnJztcbiAgICAgIGlmIChzcGxpdC5sZW5ndGggPiAwKSB7XG4gICAgICAgIHBhdGggPSAnLycgKyBzcGxpdC5qb2luKCcvJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBkb21haW46IGRvbWFpbixcbiAgICAgICAgcGF0aDogcGF0aFxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfcGFyc2VCYXNlVXJsJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3BhcnNlQmFzZVVybCgpIHtcbiAgICAgIHZhciBwYXJzZWRCYXNlVXJsID0ge1xuICAgICAgICBzY2hlbWU6IG51bGwsXG4gICAgICAgIHBhdGg6ICcnLFxuICAgICAgICBkb21haW46IG51bGxcbiAgICAgIH07XG4gICAgICBpZiAodGhpcy5fYmFzZVVybC5tYXRjaCgvXlthLXpBLVowLTldKzpcXC9cXC8vKSkge1xuICAgICAgICAvLyBXZSBoYXZlIGEgZnVsbCBVUkwgKDxzY2hlbWU+Oi8vPGRvbWFpbj48cGF0aD4pXG4gICAgICAgIHZhciBzcGxpdCA9IHRoaXMuX2Jhc2VVcmwuc3BsaXQoJzovLycpO1xuICAgICAgICBwYXJzZWRCYXNlVXJsLnNjaGVtZSA9IHNwbGl0LnNoaWZ0KCk7XG4gICAgICAgIHZhciByZW1haW5pbmcgPSBzcGxpdC5qb2luKCc6Ly8nKTtcbiAgICAgICAgdmFyIGRvbWFpbkFuZFBhdGggPSB0aGlzLl9zcGxpdERvbWFpbkFuZFBhdGgocmVtYWluaW5nKTtcbiAgICAgICAgcGFyc2VkQmFzZVVybC5kb21haW4gPSBkb21haW5BbmRQYXRoLmRvbWFpbjtcbiAgICAgICAgcGFyc2VkQmFzZVVybC5wYXRoID0gZG9tYWluQW5kUGF0aC5wYXRoO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLl9iYXNlVXJsLmxlbmd0aCA+IDAgJiYgdGhpcy5fYmFzZVVybC5zdWJzdHJpbmcoMCwgMSkgPT0gJy8nKSB7XG4gICAgICAgIC8vIFdlIGhhdmUgcGF0aCBvbmx5XG4gICAgICAgIHBhcnNlZEJhc2VVcmwucGF0aCA9ICcnICsgdGhpcy5fYmFzZVVybDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFdlIGhhdmUgZG9tYWluIGFuZCBwYXRoLCBidXQgbm8gc2NoZW1lICg8ZG9tYWluPjxwYXRoPilcbiAgICAgICAgdmFyIF9kb21haW5BbmRQYXRoID0gdGhpcy5fc3BsaXREb21haW5BbmRQYXRoKHRoaXMuX2Jhc2VVcmwpO1xuICAgICAgICBwYXJzZWRCYXNlVXJsLmRvbWFpbiA9IF9kb21haW5BbmRQYXRoLmRvbWFpbjtcbiAgICAgICAgcGFyc2VkQmFzZVVybC5wYXRoID0gX2RvbWFpbkFuZFBhdGgucGF0aDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwYXJzZWRCYXNlVXJsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2J1aWxkVXJsJyxcblxuXG4gICAgLyoqXG4gICAgICogQnVpbGQgdGhlIFVSTC5cbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgYnVpbHQgVVJMLlxuICAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBidWlsZFVybCgpIHtcbiAgICAgIHZhciB1cmwgPSB0aGlzLl9iYXNlVXJsO1xuICAgICAgaWYgKCF0aGlzLnF1ZXJ5U3RyaW5nLmlzRW1wdHkoKSkge1xuICAgICAgICB1cmwgPSB1cmwgKyAnPycgKyB0aGlzLnF1ZXJ5U3RyaW5nLnVybGVuY29kZSgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHVybDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQvcmVwbGFjZSB0aGUgcXVlcnktc3RyaW5nLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtRdWVyeVN0cmluZ30gcXVlcnlTdHJpbmdPYmplY3QgVGhlIFF1ZXJ5U3RyaW5nIG9iamVjdFxuICAgICAqICAgICAgdG8gcmVwbGFjZSB0aGUgY3VycmVudCBxdWVyeS1zdHJpbmcgd2l0aC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3QgdXJscGFyc2VyID0gVXJsUGFyc2VyKCdodHRwOi8vZXhhbXBsZS5jb20vYXBpL3Blb3BsZScpO1xuICAgICAqIGNvbnN0IHF1ZXJ5c3RyaW5nID0gbmV3IFF1ZXJ5U3RyaW5nKCk7XG4gICAgICogcXVlcnlzdHJpbmcuc2V0KCdzZWFyY2gnLCAnZG9lJyk7XG4gICAgICogdXJscGFyc2VyLnNldFF1ZXJ5U3RyaW5nKHF1ZXJ5c3RyaW5nKTtcbiAgICAgKiAvLyB1cmxwYXJzZXIuYnVpbGRVcmwoKSA9PT0gJ2h0dHA6Ly9leGFtcGxlLmNvbS9hcGkvcGVvcGxlP3NlYXJjaD1kb2UnXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3NldFF1ZXJ5U3RyaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0UXVlcnlTdHJpbmcocXVlcnlTdHJpbmdPYmplY3QpIHtcbiAgICAgIHRoaXMucXVlcnlTdHJpbmcgPSBxdWVyeVN0cmluZ09iamVjdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzY2hlbWUnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3BhcnNlZEJhc2VVcmwuc2NoZW1lO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3BhdGgnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3BhcnNlZEJhc2VVcmwucGF0aDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdkb21haW4nLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3BhcnNlZEJhc2VVcmwuZG9tYWluO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBVcmxQYXJzZXI7XG59KCk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lldnZfanNiYXNlL2xpYi9odHRwL1VybFBhcnNlci5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 12 */
/*!***********************************************!*\
  !*** ./~/ievv_jsbase/lib/http/QueryString.js ***!
  \***********************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Query-string creator and parser.\n *\n * @example <caption>Basics - build a querystring</caption>\n * const querystring = new QueryString();\n * querystring.set('name', 'Peter');\n * querystring.setIterable('tags', ['person', 'male']);\n * const encodedQuerystring = querystring.urlencode();\n * // encodedQuerystring === 'name=Peter&tags=person&tags=male'  // order may vary\n *\n * @example <caption>Parse a querystring</caption>\n * const querystring = new QueryString('name=Peter&tags=person&tags=male');\n * const name = querystring.get('name');\n * const tags = querystring.getArray('tags');\n * const firstTag = querystring.get('tags');\n *\n * @example <caption>Parse and modify a querystring</caption>\n * const querystring = new QueryString('name=Peter&tags=person&tags=male');\n * querystring.set('name', 'John');\n * querystring.append('tags', 'important');\n * // querystring.urlencode() === 'name=John&tags=person&tags=male&tags=important'\n * querystring.setIterable('tags', ['male']);\n * // querystring.urlencode() === 'name=John&tags=male'\n */\nvar QueryString = function () {\n    /**\n     *\n     * @param {string} querystring Optional input querystring to parse.\n     */\n    function QueryString(querystring) {\n        _classCallCheck(this, QueryString);\n\n        this._queryStringMap = new Map();\n        if (typeof querystring !== 'undefined') {\n            if (typeof querystring !== 'string') {\n                throw new TypeError('The querystring argument must be a string.');\n            }\n            this._parseQueryString(querystring);\n        }\n    }\n\n    /**\n     * Returns ``true`` if the querystring is empty, otherwise ``false``.\n     *\n     * @returns {boolean}\n     */\n\n\n    _createClass(QueryString, [{\n        key: 'isEmpty',\n        value: function isEmpty() {\n            return this._queryStringMap.size === 0;\n        }\n\n        /**\n         * Remove all keys and values from the QueryString.\n         */\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this._queryStringMap.clear();\n        }\n    }, {\n        key: '_parseQueryStringItem',\n        value: function _parseQueryStringItem(querystringItem) {\n            var splitPair = querystringItem.split('=');\n            var key = decodeURIComponent(splitPair[0]);\n            var value = decodeURIComponent(splitPair[1]);\n            this.append(key, value);\n        }\n    }, {\n        key: '_parseQueryString',\n        value: function _parseQueryString(querystring) {\n            var splitQueryString = querystring.split('&');\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = splitQueryString[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var querystringItem = _step.value;\n\n                    this._parseQueryStringItem(querystringItem);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: '_addToKey',\n        value: function _addToKey(key, value) {\n            if (typeof key !== 'string') {\n                throw new TypeError('All keys added to a QueryString must be strings.');\n            }\n            if (typeof value !== 'string') {\n                throw new TypeError('All values added to a QueryString must be strings.');\n            }\n            this._queryStringMap.get(key).push(value);\n        }\n    }, {\n        key: '_setKeyToEmptyArray',\n        value: function _setKeyToEmptyArray(key) {\n            this._queryStringMap.set(key, []);\n        }\n\n        /**\n         * Set value from an iterable.\n         *\n         * @param {string} key The key to set.\n         * @param iterable Something that can be iterated with a\n         *      ``for(const value of iterable)`` loop.\n         *      All the values in the iterable must be strings.\n         *      If the iterable is empty the key will be removed\n         *      from the QueryString.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.setIterable('names', ['Peter', 'Jane']);\n         */\n\n    }, {\n        key: 'setIterable',\n        value: function setIterable(key, iterable) {\n            this._setKeyToEmptyArray(key);\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = iterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var value = _step2.value;\n\n                    this._addToKey(key, value);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            if (this._queryStringMap.get(key).length === 0) {\n                this.remove(key);\n            }\n        }\n\n        /**\n         * Set a value.\n         *\n         * @param {string} key The key to store the value as.\n         * @param {string} value The value to set.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.set('name', 'Peter');\n         */\n\n    }, {\n        key: 'set',\n        value: function set(key, value) {\n            this.setIterable(key, [value]);\n        }\n\n        /**\n         * Get a value.\n         *\n         * @param {string} key The key to get the value for.\n         * @param {string} fallback An optional fallback value if the key is\n         *      not in the QueryString. Defaults to ``undefined``.\n         */\n\n    }, {\n        key: 'get',\n        value: function get(key, fallback) {\n            var value = this._queryStringMap.get(key);\n            if (typeof value === 'undefined') {\n                return fallback;\n            } else {\n                return value[0];\n            }\n        }\n\n        /**\n         * Append a value to a key.\n         *\n         * @param {string} key The key to append a value to.\n         * @param {string} value The value to append.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.append('names', 'Jane');\n         * querystring.append('names', 'Joe');\n         * // querystring.urlencode() === 'names=Jane&names=Joe'\n         */\n\n    }, {\n        key: 'append',\n        value: function append(key, value) {\n            if (!this._queryStringMap.has(key)) {\n                this._setKeyToEmptyArray(key);\n            }\n            this._addToKey(key, value);\n        }\n\n        /**\n         * Get the values for the specified key as an array.\n         *\n         * Always returns an array, even if the value was set\n         * with {@link QueryString#set}.\n         *\n         * @param {string} key The key to get the values for.\n         * @param {Array} fallback An optional fallback value if they\n         *      key is not in the QueryString. Defaults to an empty array.\n         * @returns {Array}\n         */\n\n    }, {\n        key: 'getArray',\n        value: function getArray(key, fallback) {\n            if (this._queryStringMap.has(key)) {\n                var valueArray = this._queryStringMap.get(key);\n                return Array.from(valueArray);\n            }\n            if (typeof falback !== 'undefined') {\n                return [];\n            }\n            return fallback;\n        }\n\n        /**\n         * Remove the specified key from the QueryString.\n         *\n         * @param {string} key The key to remove.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove(key) {\n            this._queryStringMap.delete(key);\n        }\n\n        /**\n         * Check if the QueryString contains the given key.\n         *\n         * @param {string} key The key to check for.\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(key) {\n            return this._queryStringMap.has(key);\n        }\n    }, {\n        key: '_encodeKeyValue',\n        value: function _encodeKeyValue(key, value) {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n        }\n\n        /**\n         * Get the QueryString object as a string in query-string format.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.set('next', '/a&b/');\n         * querystring.set('name', 'john');\n         * let urlEncodedQuerystring = querystring.urlencode();\n         * // urlEncodedQuerystring === 'name=john&next=%2Fa%26b%2F'  // order may vary\n         */\n\n    }, {\n        key: 'urlencode',\n        value: function urlencode() {\n            var urlEncodedArray = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._queryStringMap[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var _step3$value = _slicedToArray(_step3.value, 2),\n                        key = _step3$value[0],\n                        valueArray = _step3$value[1];\n\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = valueArray[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var value = _step4.value;\n\n                            urlEncodedArray.push(this._encodeKeyValue(key, value));\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return urlEncodedArray.join('&');\n        }\n    }]);\n\n    return QueryString;\n}();\n\nexports.default = QueryString;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 13 */
/*!***********************************************!*\
  !*** ./~/ievv_jsbase/lib/http/HttpCookies.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.HttpCookieNotFoundError = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = __webpack_require__(/*! ../makeCustomError */ 9);\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Exception raised by {@link HttpCookies#getStrict} when the cookie is not found.\n *\n * @type {Error}\n */\nvar HttpCookieNotFoundError = exports.HttpCookieNotFoundError = (0, _makeCustomError2.default)('HttpCookieNotFoundError');\n\n/**\n * Makes working with ``document.cookie`` easy.\n *\n * @example <caption>Get a cookie named \"name\"</caption>\n * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n * let cookies = HttpCookies();\n * let name = cookies.get('name');\n *\n * @example <caption>Get a cookie named \"pageurl\", with a fallback</caption>\n * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n * let cookies = HttpCookies();\n * let name = cookies.get('pageurl', 'http://example.com');\n *\n * @example <caption>Get a cookie named \"name\" in strict mode</caption>\n * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n * import {HttpCookieNotFoundError} from 'ievv_jsbase/http/HttpCookies';\n * let cookies = HttpCookies();\n * try {\n *     let name = cookies.getStrict('name');\n * } catch(e) {\n *     if(e instanceof HttpCookieNotFoundError) {\n *         console.error('Cookie not found', e);\n *     } else {\n *         throw e;\n *     }\n * }\n */\n\nvar HttpCookies = function () {\n    /**\n     * @param {string} rawCookies Raw cookies string. This is\n     *      optional - it defaults to ``document.cookie``.\n     */\n    function HttpCookies(rawCookies) {\n        _classCallCheck(this, HttpCookies);\n\n        this.rawCookies = rawCookies || document.cookie;\n        this.cookies = this.__parse();\n    }\n\n    _createClass(HttpCookies, [{\n        key: '__parse',\n        value: function __parse() {\n            var cookies = {};\n            if (this.rawCookies && this.rawCookies !== '') {\n                var cookiesArray = this.rawCookies.split(';');\n                for (var i = 0; i < cookiesArray.length; i++) {\n                    var cookie = cookiesArray[i].trim();\n                    var cookieArray = cookie.split('=', 2);\n                    if (cookieArray.length === 2) {\n                        var name = cookieArray[0];\n                        var value = cookieArray[1];\n                        cookies[name.trim()] = value.trim();\n                    }\n                }\n            }\n            return cookies;\n        }\n\n        /**\n         * Get cookie value.\n         *\n         * @param {string} cookieName The name of the cookie.\n         * @param fallback Fallback value if the cookie with the provided\n         *      ``cookieName`` does not exist.\n         *      Defaults to ``undefined``.\n         * @return {string} The cookie value, or the fallback value if no cookie\n         *      with the provided ``cookieName`` is found.\n         */\n\n    }, {\n        key: 'get',\n        value: function get(cookieName, fallback) {\n            var value = this.cookies[cookieName];\n            if (typeof value === 'undefined') {\n                return fallback;\n            } else {\n                return value;\n            }\n        }\n\n        /**\n         * Get cookie value and throw exception if it is not found.\n         *\n         * @param {string} cookieName The name of the cookie.\n         * @returns {string} The cookie value.\n         * @throws {HttpCookieNotFoundError} If no cookie named ``cookieName`` is found.\n         */\n\n    }, {\n        key: 'getStrict',\n        value: function getStrict(cookieName) {\n            var value = this.get(cookieName);\n            if (typeof value === 'undefined') {\n                throw new HttpCookieNotFoundError('Cookie not found: \"' + cookieName + '\".');\n            }\n            return value;\n        }\n\n        /**\n         * Check if a cookie is among the parsed cookies.\n         *\n         * @param {string} cookieName The name of the cookie to look for.\n         * @returns {boolean} ``true`` if the cookie is among the parsed cookies.\n         */\n\n    }, {\n        key: 'contains',\n        value: function contains(cookieName) {\n            return typeof this.cookies[cookieName] !== 'undefined';\n        }\n    }]);\n\n    return HttpCookies;\n}();\n\nexports.default = HttpCookies;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 14 */
/*!*****************************************************!*\
  !*** ./~/ievv_jsbase/lib/SignalHandlerSingleton.js ***!
  \*****************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SentSignalInfo = exports.ReceivedSignalInfo = exports.DuplicateReceiverNameForSignal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = __webpack_require__(/*! ./makeCustomError */ 9);\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nvar _PrettyFormat = __webpack_require__(/*! ./utils/PrettyFormat */ 15);\n\nvar _PrettyFormat2 = _interopRequireDefault(_PrettyFormat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Exception raised by {@link HttpCookies#getStrict} when the cookie is not found.\n *\n * @type {Error}\n */\nvar DuplicateReceiverNameForSignal = exports.DuplicateReceiverNameForSignal = (0, _makeCustomError2.default)('DuplicateReceiverNameForSignal');\n\n/**\n * Represents information about the received signal.\n *\n * An object of this class is sent to the ``callback``\n * of all signal receivers.\n *\n * The data sent by the signal is available in\n * {@link ReceivedSignalInfo.data}.\n */\n\nvar ReceivedSignalInfo = exports.ReceivedSignalInfo = function () {\n  function ReceivedSignalInfo(data, signalName, receiverName) {\n    _classCallCheck(this, ReceivedSignalInfo);\n\n    /**\n     * The data sent by {@link SignalHandlerSingleton#send}.\n     */\n    this.data = data;\n\n    /**\n     * The signal name.\n     *\n     * @type {string}\n     */\n    this.signalName = signalName;\n\n    /**\n     * The receiver name.\n     *\n     * @type {string}\n     */\n    this.receiverName = receiverName;\n  }\n\n  /**\n   * Get a string with information about the received signal.\n   * Includes signal name and receiver name.\n   *\n   * @returns {string}\n   */\n\n\n  _createClass(ReceivedSignalInfo, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"ReceivedSignalInfo: signalName=\\\"\" + this.signalName + \"\\\" receiverName=\\\"\" + this.receiverName + \"\\\"\";\n    }\n\n    /**\n     * Get the data pretty formatted as a string.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getPrettyFormattedData\",\n    value: function getPrettyFormattedData() {\n      return new _PrettyFormat2.default(this.data).toString(2);\n    }\n\n    /**\n     * Get a string with debug information about the received signal.\n     * Includes signal name, receiver name, and pretty formatted data.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"toDebugString\",\n    value: function toDebugString() {\n      return this.toString + \" data=\" + this.getPrettyFormattedData();\n    }\n  }]);\n\n  return ReceivedSignalInfo;\n}();\n\n/**\n * Private class used by {@link _SignalReceivers} to represent\n * a single receiver listening for a single signal.\n */\n\n\nvar _SignalReceiver = function () {\n  function _SignalReceiver(signal, name, callback) {\n    _classCallCheck(this, _SignalReceiver);\n\n    this.signal = signal;\n    this.name = name;\n    this.callback = callback;\n  }\n\n  /**\n   * Asynchronously trigger the receiver callback.\n   * @param data The signal data (the data argument provided for\n   *    {@link SignalHandlerSingleton#send}.\n   */\n\n\n  _createClass(_SignalReceiver, [{\n    key: \"trigger\",\n    value: function trigger(data) {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.callback(new ReceivedSignalInfo(data, _this.signal.name, _this.name));\n      }, 0);\n    }\n  }]);\n\n  return _SignalReceiver;\n}();\n\n/**\n * Object containing debugging information about a sent\n * signal.\n */\n\n\nvar SentSignalInfo = exports.SentSignalInfo = function () {\n  function SentSignalInfo(signalName) {\n    _classCallCheck(this, SentSignalInfo);\n\n    /**\n     * The signal name.\n     *\n     * @type {string}\n     */\n    this.signalName = signalName;\n\n    /**\n     * Array of triggered receiver names.\n     *\n     * @type {Array}\n     */\n    this.triggeredReceiverNames = [];\n  }\n\n  _createClass(SentSignalInfo, [{\n    key: \"_addReceiverName\",\n    value: function _addReceiverName(receiverName) {\n      this.triggeredReceiverNames.push(receiverName);\n    }\n\n    /**\n     * Get a string representation of the sent signal info.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var receivers = this.triggeredReceiverNames.join(', ');\n      if (receivers === '') {\n        receivers = 'NO RECEIVERS';\n      }\n      return \"Signal: \" + this.signalName + \" was sent to: \" + receivers;\n    }\n  }]);\n\n  return SentSignalInfo;\n}();\n\n/**\n * Private class used by {@link SignalHandlerSingleton}\n * to represent all receivers for a single signal.\n */\n\n\nvar _SignalReceivers = function () {\n  function _SignalReceivers(name) {\n    _classCallCheck(this, _SignalReceivers);\n\n    this.name = name;\n    this.receiverMap = new Map();\n  }\n\n  /**\n   * Add a receiver.\n   *\n   * @throw DuplicateReceiverNameForSignal If the receiver is already registered for the signal.\n   */\n\n\n  _createClass(_SignalReceivers, [{\n    key: \"addReceiver\",\n    value: function addReceiver(receiverName, callback) {\n      if (this.receiverMap.has(receiverName)) {\n        throw new DuplicateReceiverNameForSignal(\"The \\\"\" + receiverName + \"\\\" receiver is already registered for the \\\"\" + this.name + \"\\\" signal\");\n      }\n      this.receiverMap.set(receiverName, new _SignalReceiver(this, receiverName, callback));\n    }\n\n    /**\n     * Remove a receiver.\n     *\n     * If the receiver is not registered for the signal,\n     * nothing happens.\n     */\n\n  }, {\n    key: \"removeReceiver\",\n    value: function removeReceiver(receiverName) {\n      if (this.receiverMap.has(receiverName)) {\n        this.receiverMap.delete(receiverName);\n      }\n    }\n\n    /**\n     * Check if we have a specific receiver for this signal.\n     */\n\n  }, {\n    key: \"hasReceiver\",\n    value: function hasReceiver(receiverName) {\n      return this.receiverMap.has(receiverName);\n    }\n\n    /**\n     * Get the number of receivers registered for the signal.\n     */\n\n  }, {\n    key: \"receiverCount\",\n    value: function receiverCount() {\n      return this.receiverMap.size;\n    }\n\n    /**\n     * Send the signal.\n     *\n     * @param data The data sent with the signal. Forwarded to\n     *      the signal receiver callback.\n     * @param {SentSignalInfo} info If this is provided, we add the\n     *      name of all receivers the signal was sent to.\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(data, info) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.receiverMap.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var receiver = _step.value;\n\n          receiver.trigger(data);\n          if (info) {\n            info._addReceiverName(receiver.name);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return _SignalReceivers;\n}();\n\n/**\n * The instance of the {@link SignalHandlerSingleton}.\n */\n\n\nvar _instance = null;\n\n/**\n * Signal handler singleton for global communication.\n *\n * @example <caption>Basic example</caption>\n * let signalHandler = new SignalHandlerSingleton();\n * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MyReceiver', (receivedSignalInfo) => {\n *     console.log('Signal received. Data:', receivedSignalInfo.data);\n * });\n * signalHandler.send('myapp.mysignal', {'the': 'data'});\n *\n *\n * @example <caption>Recommended signal and receiver naming</caption>\n *\n * // In myapp/menu/MenuComponent.js\n * class MenuComponent {\n *     constructor(menuName) {\n *         this.menuName = menuName;\n *         let signalHandler = new SignalHandlerSingleton();\n *         signalHandler.addReceiver(\n *             `toggleMenu#${this.menuName}`,\n *             'myapp.menu.MenuComponent',\n *             (receivedSignalInfo) => {\n *                  this.toggle();\n *             }\n *         );\n *     }\n *     toggle() {\n *         // Toggle the menu\n *     }\n * }\n *\n * // In myotherapp/widgets/MenuToggle.js\n * class MenuToggle {\n *     constructor(menuName) {\n *         this.menuName = menuName;\n *     }\n *     toggle() {\n *         let signalHandler = new SignalHandlerSingleton();\n *         signalHandler.send(`toggleMenu#${this.menuName}`);\n *     }\n * }\n *\n * @example <caption>Multiple receivers</caption>\n * let signalHandler = new SignalHandlerSingleton();\n * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MyFirstReceiver', (receivedSignalInfo) => {\n *     console.log('Signal received by receiver 1!');\n * });\n * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MySecondReceiver', (receivedSignalInfo) => {\n *     console.log('Signal received by receiver 1!');\n * });\n * signalHandler.send('myapp.mysignal', {'the': 'data'});\n *\n *\n * @example <caption>Debugging</caption>\n * let signalHandler = new SignalHandlerSingleton();\n * signalHandler.addReceiver('mysignal', 'MyReceiver', (receivedSignalInfo) => {\n *     console.log('received signal:', receivedSignalInfo.toString());\n * });\n * signalHandler.send('myapp.mysignal', {'the': 'data'}, (sentSignalInfo) => {\n *     console.log('sent signal info:', sentSignalInfo.toString());\n * });\n *\n */\n\nvar SignalHandlerSingleton = function () {\n  function SignalHandlerSingleton() {\n    _classCallCheck(this, SignalHandlerSingleton);\n\n    if (!_instance) {\n      _instance = this;\n      this._signalMap = new Map();\n      this._receiverMap = new Map();\n    }\n    return _instance;\n  }\n\n  /**\n   * Remove all receivers for all signals.\n   *\n   * Useful for debugging and tests, but should not be\n   * used for production code.\n   */\n\n\n  _createClass(SignalHandlerSingleton, [{\n    key: \"clearAllReceiversForAllSignals\",\n    value: function clearAllReceiversForAllSignals() {\n      this._signalMap.clear();\n    }\n\n    /**\n     * Add a receiver for a specific signal.\n     *\n     * @param {string} signalName The name of the signal.\n     *      Typically something like ``toggleMenu`` or ``myapp.toggleMenu``.\n     *\n     *      What if we have multiple objects listening for this ``toggleMenu``\n     *      signal, and we only want to toggle a specific menu? You need\n     *      to ensure the signalName is unique for each menu. We recommend\n     *      that you do this by adding ``#<context>``. For example\n     *      ``toggleMenu#mainmenu``. This is shown in one of the examples\n     *      above.\n     * @param {string} receiverName The name of the receiver.\n     *      Must be unique for the signal.\n     *      We recommend that you use a very explicit name for your signals.\n     *      It should normally be the full path to the method or function receiving\n     *      the signal. So if you have a class named ``myapp/menu/MenuComponent.js``\n     *      that receives a signal to toggle the menu, the receiverName should be\n     *      ``myapp.menu.MenuComponent``.\n     * @param callback The callback to call when the signal is sent.\n     *      The callback is called with a single argument - a\n     *      {@link ReceivedSignalInfo} object.\n     */\n\n  }, {\n    key: \"addReceiver\",\n    value: function addReceiver(signalName, receiverName, callback) {\n      if (typeof callback === 'undefined') {\n        throw new TypeError('The callback argument for addReceiver() is required.');\n      }\n      if (!this._signalMap.has(signalName)) {\n        this._signalMap.set(signalName, new _SignalReceivers(signalName));\n      }\n      if (this._receiverMap.has(receiverName)) {\n        this._receiverMap.get(receiverName).add(signalName);\n      } else {\n        this._receiverMap.set(receiverName, new Set([signalName]));\n      }\n      var signal = this._signalMap.get(signalName);\n      signal.addReceiver(receiverName, callback);\n    }\n\n    /**\n     * Remove a receiver for a signal added with {@link SignalHandlerSingleton#addReceiver}.\n     *\n     * @param {string} signalName The name of the signal.\n     * @param {string} receiverName The name of the receiver.\n     */\n\n  }, {\n    key: \"removeReceiver\",\n    value: function removeReceiver(signalName, receiverName) {\n      if (this._signalMap.has(signalName)) {\n        var signal = this._signalMap.get(signalName);\n        signal.removeReceiver(receiverName);\n        if (signal.receiverCount() == 0) {\n          this._signalMap.delete(signalName);\n        }\n        var receiverSignalSet = this._receiverMap.get(receiverName);\n        if (receiverSignalSet != undefined) {\n          if (receiverSignalSet.has(signalName)) {\n            receiverSignalSet.delete(signalName);\n          }\n          if (receiverSignalSet.size == 0) {\n            this._receiverMap.delete(receiverName);\n          }\n        }\n      }\n    }\n\n    /**\n     * Remove all signals registered for a receiver.\n     *\n     * @param {string} receiverName The name of the receiver.\n     */\n\n  }, {\n    key: \"removeAllSignalsFromReceiver\",\n    value: function removeAllSignalsFromReceiver(receiverName) {\n      if (this._receiverMap.has(receiverName)) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._receiverMap.get(receiverName)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var signalName = _step2.value;\n\n            this.removeReceiver(signalName, receiverName);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Check if a signal has a specific receiver.\n     *\n     * @param {string} signalName The name of the signal.\n     * @param {string} receiverName The name of the receiver.\n     */\n\n  }, {\n    key: \"hasReceiver\",\n    value: function hasReceiver(signalName, receiverName) {\n      if (this._signalMap.has(signalName)) {\n        var signal = this._signalMap.get(signalName);\n        return signal.hasReceiver(receiverName);\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * Remove all receivers for a specific signal.\n     *\n     * @param {string} signalName The name of the signal to remove.\n     */\n\n  }, {\n    key: \"clearAllReceiversForSignal\",\n    value: function clearAllReceiversForSignal(signalName) {\n      if (this._signalMap.has(signalName)) {\n        this._signalMap.delete(signalName);\n      }\n    }\n\n    /**\n     * Send a signal.\n     *\n     * @param {string} signalName The name of the signal to send.\n     * @param data Data to send to the callback of all receivers registered\n     *      for the signal.\n     * @param infoCallback An optional callback that receives information\n     *      about the signal. Useful for debugging what actually received\n     *      the signal. The ``infoCallback`` is called with a single\n     *      argument - a {@link SentSignalInfo} object.\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(signalName, data, infoCallback) {\n      var info = null;\n      if (infoCallback) {\n        info = new SentSignalInfo(signalName);\n      }\n      if (this._signalMap.has(signalName)) {\n        var signal = this._signalMap.get(signalName);\n        signal.send(data, info);\n      }\n      if (infoCallback) {\n        infoCallback(info);\n      }\n    }\n  }]);\n\n  return SignalHandlerSingleton;\n}();\n\nexports.default = SignalHandlerSingleton;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 15 */
/*!*************************************************!*\
  !*** ./~/ievv_jsbase/lib/utils/PrettyFormat.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeDetect = __webpack_require__(/*! ./typeDetect */ 4);\n\nvar _typeDetect2 = _interopRequireDefault(_typeDetect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Pretty format any javascript object.\n *\n * Handles the following types:\n *\n * - null\n * - undefined\n * - Number\n * - Boolean\n * - String\n * - Array\n * - Map\n * - Set\n * - Function\n * - Class (detected as a Function, so pretty formatted just like a function)\n * - Object\n *\n * @example <caption>Without indentation</caption>\n * new PrettyFormat([1, 2]).toString();\n *\n * @example <caption>With indentation (indent by 2 spaces)</caption>\n * new PrettyFormat([1, 2]).toString(2);\n *\n * @example <caption>Simple examples</caption>\n * new PrettyFormat(true).toString() === 'true';\n * new PrettyFormat(null).toString() === 'null';\n * new PrettyFormat([1, 2]).toString() === '[1, 2]';\n * new PrettyFormat({name: \"John\", age: 29}).toString() === '{\"age\": 29, \"name\": John}';\n *\n * @example <caption>Complex example</caption>\n * let map = new Map();\n * map.set('a', [10, 20]);\n * map.set('b', [30, 40, 50]);\n * function testFunction() {}\n * let obj = {\n *     theMap: map,\n *     aSet: new Set(['one', 'two']),\n *     theFunction: testFunction\n * };\n * const prettyFormatted = new PrettyFormat(obj).toString(2);\n */\nvar PrettyFormat = function () {\n    function PrettyFormat(obj) {\n        _classCallCheck(this, PrettyFormat);\n\n        this._obj = obj;\n    }\n\n    _createClass(PrettyFormat, [{\n        key: '_indentString',\n        value: function _indentString(str, indent, indentLevel) {\n            if (indent === 0) {\n                return str;\n            }\n            return '' + ' '.repeat(indent * indentLevel) + str;\n        }\n    }, {\n        key: '_objectToMap',\n        value: function _objectToMap(obj) {\n            var map = new Map();\n            var sortedKeys = Array.from(Object.keys(obj));\n            sortedKeys.sort();\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = sortedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var key = _step.value;\n\n                    map.set(key, obj[key]);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return map;\n        }\n    }, {\n        key: '_prettyFormatFlatIterable',\n        value: function _prettyFormatFlatIterable(flatIterable, size, indent, indentLevel, prefix, suffix) {\n            var output = prefix;\n            var itemSuffix = ', ';\n            if (indent) {\n                output = prefix + '\\n';\n                itemSuffix = ',';\n            }\n            var index = 1;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = flatIterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var item = _step2.value;\n\n                    var prettyItem = this._prettyFormat(item, indent, indentLevel + 1);\n                    if (index !== size) {\n                        prettyItem += itemSuffix;\n                    }\n                    output += this._indentString(prettyItem, indent, indentLevel + 1);\n                    if (indent) {\n                        output += '\\n';\n                    }\n                    index++;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            output += this._indentString('' + suffix, indent, indentLevel);\n            return output;\n        }\n    }, {\n        key: '_prettyFormatMap',\n        value: function _prettyFormatMap(map, indent, indentLevel, prefix, suffix, keyValueSeparator) {\n            var output = prefix;\n            var itemSuffix = ', ';\n            if (indent) {\n                output = prefix + '\\n';\n                itemSuffix = ',';\n            }\n            var index = 1;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = map[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var _step3$value = _slicedToArray(_step3.value, 2),\n                        key = _step3$value[0],\n                        value = _step3$value[1];\n\n                    var prettyKey = this._prettyFormat(key, indent, indentLevel + 1);\n                    var prettyValue = this._prettyFormat(value, indent, indentLevel + 1);\n                    var prettyItem = '' + prettyKey + keyValueSeparator + prettyValue;\n                    if (index !== map.size) {\n                        prettyItem += itemSuffix;\n                    }\n                    output += this._indentString(prettyItem, indent, indentLevel + 1);\n                    if (indent) {\n                        output += '\\n';\n                    }\n                    index++;\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            output += this._indentString('' + suffix, indent, indentLevel);\n            return output;\n        }\n    }, {\n        key: '_prettyFormatFunction',\n        value: function _prettyFormatFunction(fn) {\n            return '[Function: ' + fn.name + ']';\n        }\n    }, {\n        key: '_prettyFormat',\n        value: function _prettyFormat(obj, indent, indentLevel) {\n            var typeString = (0, _typeDetect2.default)(obj);\n            var output = '';\n            if (typeString === 'string') {\n                output = '\"' + obj + '\"';\n            } else if (typeString === 'number' || typeString === 'boolean' || typeString === 'undefined' || typeString === 'null') {\n                output = '' + obj;\n            } else if (typeString === 'array') {\n                output = this._prettyFormatFlatIterable(obj, obj.length, indent, indentLevel, '[', ']');\n            } else if (typeString === 'set') {\n                output = this._prettyFormatFlatIterable(obj, obj.size, indent, indentLevel, 'Set(', ')');\n            } else if (typeString === 'map') {\n                output = this._prettyFormatMap(obj, indent, indentLevel, 'Map(', ')', ' => ');\n            } else if (typeString === 'function') {\n                output = this._prettyFormatFunction(obj);\n            } else {\n                output = this._prettyFormatMap(this._objectToMap(obj), indent, indentLevel, '{', '}', ': ');\n            }\n            return output;\n        }\n\n        /**\n         * Get the results as a string, optionally indented.\n         *\n         * @param {number} indent The number of spaces to indent by. Only\n         *    child objects are indented, and they are indented recursively.\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toString',\n        value: function toString(indent) {\n            indent = indent || 0;\n            return this._prettyFormat(this._obj, indent, 0);\n        }\n    }]);\n\n    return PrettyFormat;\n}();\n\nexports.default = PrettyFormat;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 16 */
/*!**************************************************!*\
  !*** ./~/ievv_jsbase/lib/log/LoggerSingleton.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Logger = __webpack_require__(/*! ./Logger */ 17);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _loglevel = __webpack_require__(/*! ./loglevel */ 19);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _instance = null;\n\n/**\n * A logging system.\n *\n * @example <caption>Create and use a logger</caption>\n * import LoggerSingleton from 'ievv_jsbase/log/LoggerSingleton';\n * let mylogger = new LoggerSingleton().loggerSingleton.getLogger('myproject.MyClass');\n * mylogger.debug('Hello debug world');\n * mylogger.info('Hello info world');\n * mylogger.warning('Hello warning world');\n * mylogger.error('Hello error world');\n *\n * @example <caption>Set a default loglevel for all loggers</caption>\n * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n * new LoggerSingleton().setDefaultLogLevel(LOGLEVEL.DEBUG);\n *\n * @example <caption>Set a custom loglevel for a single logger</caption>\n * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n * new LoggerSingleton().getLogger('mylogger').setLoglevel(LOGLEVEL.DEBUG);\n */\n\nvar LoggerSingleton = function () {\n    /**\n     * Get an instance of the singleton.\n     *\n     * The first time this is called, we create a new instance.\n     * For all subsequent calls, we return the instance that was\n     * created on the first call.\n     */\n    function LoggerSingleton() {\n        _classCallCheck(this, LoggerSingleton);\n\n        if (!_instance) {\n            _instance = this;\n        }\n        this._loggerMap = new Map();\n        this.reset();\n        return _instance;\n    }\n\n    /**\n     * Get the number of loggers registered using\n     * {@link getLogger}.\n     *\n     * @returns {number} The number of loggers.\n     */\n\n\n    _createClass(LoggerSingleton, [{\n        key: \"getLoggerCount\",\n        value: function getLoggerCount() {\n            return this._loggerMap.size;\n        }\n\n        /**\n         * Reset to default log level, and clear all\n         * custom loggers.\n         */\n\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this._logLevel = _loglevel2.default.WARNING;\n            this._loggerMap.clear();\n        }\n\n        /**\n         * Get the default log level.\n         *\n         * Defaults to {@link LogLevels#WARNING} if not overridden\n         * with {@LoggerSingleton#setDefaultLogLevel}.\n         *\n         * @returns {int} One of the loglevels defined in {@link LogLevels}\n         */\n\n    }, {\n        key: \"getDefaultLogLevel\",\n        value: function getDefaultLogLevel() {\n            return this._logLevel;\n        }\n\n        /**\n         * Set the default loglevel.\n         *\n         * All loggers use this by default unless\n         * you override their loglevel.\n         *\n         * @example <caption>Override loglevel of a specific logger</caption>\n         * import LoggerSingleton from 'ievv_jsbase/log/LoggerSingleton';\n         * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n         * let loggerSingleton = new LoggerSingleton();\n         * loggerSingleton.getLogger('mylogger').setLogLevel(LOGLEVEL.DEBUG);\n         *\n         * @param logLevel The log level. Must be one of the loglevels\n         *      defined in {@link LogLevels}.\n         * @throws {RangeError} if {@link LogLevels#validateLogLevel} fails.\n         */\n\n    }, {\n        key: \"setDefaultLogLevel\",\n        value: function setDefaultLogLevel(logLevel) {\n            _loglevel2.default.validateLogLevel(logLevel);\n            this._logLevel = logLevel;\n        }\n\n        /**\n         * Get a logger.\n         *\n         * @param {string} name A name for the logger. Should be a unique name,\n         *      so typically the full import path of the class/function using\n         *      the logger.\n         * @returns {Logger}\n         */\n\n    }, {\n        key: \"getLogger\",\n        value: function getLogger(name) {\n            if (!this._loggerMap.has(name)) {\n                this._loggerMap.set(name, new _Logger2.default(name, this));\n            }\n            return this._loggerMap.get(name);\n        }\n\n        /**\n         * Get the names of all the registered loggers.\n         *\n         * @returns {Array} Sorted array with the same of the loggers.\n         */\n\n    }, {\n        key: \"getLoggerNameArray\",\n        value: function getLoggerNameArray() {\n            var loggerNames = Array.from(this._loggerMap.keys());\n            loggerNames.sort();\n            return loggerNames;\n        }\n\n        /**\n         * Get textual name for the default log level.\n         *\n         * Intended for debugging. The format of the string may change.\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getTextualNameForDefaultLogLevel\",\n        value: function getTextualNameForDefaultLogLevel() {\n            return _loglevel2.default.getTextualNameForLogLevel(this.getDefaultLogLevel());\n        }\n\n        /**\n         * Get a string that summarize information about all the\n         * loggers. The string has a list of loglevels with\n         * their loglevel. Perfect for debugging.\n         *\n         * Intended for debugging. The format of the string may change.\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getDebugInfoString\",\n        value: function getDebugInfoString() {\n            var loggerInfoString = \"Default logLevel: \" + (this.getTextualNameForDefaultLogLevel() + \"\\n\") + \"Loggers:\\n\";\n            if (this.getLoggerCount() === 0) {\n                loggerInfoString += '(no loggers)\\n';\n            } else {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = this.getLoggerNameArray()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var loggerName = _step.value;\n\n                        var logger = this.getLogger(loggerName);\n                        loggerInfoString += \" - \" + logger.getDebugInfoString() + \"\\n\";\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n            return loggerInfoString;\n        }\n    }]);\n\n    return LoggerSingleton;\n}();\n\nexports.default = LoggerSingleton;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 17 */
/*!*****************************************!*\
  !*** ./~/ievv_jsbase/lib/log/Logger.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AbstractLogger2 = __webpack_require__(/*! ./AbstractLogger */ 18);\n\nvar _AbstractLogger3 = _interopRequireDefault(_AbstractLogger2);\n\nvar _loglevel = __webpack_require__(/*! ./loglevel */ 19);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Logger = function (_AbstractLogger) {\n    _inherits(Logger, _AbstractLogger);\n\n    /**\n     *\n     * @param {string} name The name of the logger.\n     * @param {LoggerSingleton} loggerSingleton The logger singleton\n     *      this logger belongs to.\n     */\n    function Logger(name, loggerSingleton) {\n        _classCallCheck(this, Logger);\n\n        var _this = _possibleConstructorReturn(this, (Logger.__proto__ || Object.getPrototypeOf(Logger)).call(this));\n\n        _this._name = name;\n        _this._logLevel = null;\n        _this._loggerSingleton = loggerSingleton;\n        return _this;\n    }\n\n    /**\n     * Get the name of this logger.\n     * @returns {string}\n     */\n\n\n    _createClass(Logger, [{\n        key: \"setLogLevel\",\n\n\n        /**\n         * Set the loglevel for this logger.\n         *\n         * @param {int} logLevel The log level. Must be one of the loglevels\n         *      defined in {@link LogLevels}.\n         * @throws {RangeError} if {@link LogLevels#validateLogLevel} fails.\n         */\n        value: function setLogLevel(logLevel) {\n            _loglevel2.default.validateLogLevel(logLevel);\n            this._logLevel = logLevel;\n        }\n\n        /**\n         * Get the log level.\n         *\n         * If no log level has been set with {@link Logger#setLogLevel},\n         * this returns {@link LoggerSingleton#getDefaultLogLevel}.\n         *\n         * @returns {int}\n         */\n\n    }, {\n        key: \"getLogLevel\",\n        value: function getLogLevel() {\n            if (this._logLevel == null) {\n                return this._loggerSingleton.getDefaultLogLevel();\n            }\n            return this._logLevel;\n        }\n\n        /**\n         * Get textual name for the log level. If the logger\n         * does not have a logLevel (if it inherits it from the LoggerSingleton)\n         * a string with information about this and the default logLevel for the\n         * LoggerSingleton is returned.\n         *\n         * Intended for debugging. The format of the string may change.\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getTextualNameForLogLevel\",\n        value: function getTextualNameForLogLevel() {\n            if (this._logLevel == null) {\n                return '[default for LoggerSingleton - ' + (this._loggerSingleton.getTextualNameForDefaultLogLevel() + \"]\");\n            }\n            return _loglevel2.default.getTextualNameForLogLevel(this.getLogLevel());\n        }\n    }, {\n        key: \"getDebugInfoString\",\n        value: function getDebugInfoString() {\n            return this.name + \": \" + this.getTextualNameForLogLevel();\n        }\n    }, {\n        key: \"name\",\n        get: function get() {\n            return this._name;\n        }\n    }]);\n\n    return Logger;\n}(_AbstractLogger3.default);\n\nexports.default = Logger;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lldnZfanNiYXNlL2xpYi9sb2cvTG9nZ2VyLmpzPzYyMDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9BYnN0cmFjdExvZ2dlcjIgPSByZXF1aXJlKFwiLi9BYnN0cmFjdExvZ2dlclwiKTtcblxudmFyIF9BYnN0cmFjdExvZ2dlcjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9BYnN0cmFjdExvZ2dlcjIpO1xuXG52YXIgX2xvZ2xldmVsID0gcmVxdWlyZShcIi4vbG9nbGV2ZWxcIik7XG5cbnZhciBfbG9nbGV2ZWwyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbG9nbGV2ZWwpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBMb2dnZXIgPSBmdW5jdGlvbiAoX0Fic3RyYWN0TG9nZ2VyKSB7XG4gICAgX2luaGVyaXRzKExvZ2dlciwgX0Fic3RyYWN0TG9nZ2VyKTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgVGhlIG5hbWUgb2YgdGhlIGxvZ2dlci5cbiAgICAgKiBAcGFyYW0ge0xvZ2dlclNpbmdsZXRvbn0gbG9nZ2VyU2luZ2xldG9uIFRoZSBsb2dnZXIgc2luZ2xldG9uXG4gICAgICogICAgICB0aGlzIGxvZ2dlciBiZWxvbmdzIHRvLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIExvZ2dlcihuYW1lLCBsb2dnZXJTaW5nbGV0b24pIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvZ2dlcik7XG5cbiAgICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKExvZ2dlci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExvZ2dlcikpLmNhbGwodGhpcykpO1xuXG4gICAgICAgIF90aGlzLl9uYW1lID0gbmFtZTtcbiAgICAgICAgX3RoaXMuX2xvZ0xldmVsID0gbnVsbDtcbiAgICAgICAgX3RoaXMuX2xvZ2dlclNpbmdsZXRvbiA9IGxvZ2dlclNpbmdsZXRvbjtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgbmFtZSBvZiB0aGlzIGxvZ2dlci5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAqL1xuXG5cbiAgICBfY3JlYXRlQ2xhc3MoTG9nZ2VyLCBbe1xuICAgICAgICBrZXk6IFwic2V0TG9nTGV2ZWxcIixcblxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgdGhlIGxvZ2xldmVsIGZvciB0aGlzIGxvZ2dlci5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtpbnR9IGxvZ0xldmVsIFRoZSBsb2cgbGV2ZWwuIE11c3QgYmUgb25lIG9mIHRoZSBsb2dsZXZlbHNcbiAgICAgICAgICogICAgICBkZWZpbmVkIGluIHtAbGluayBMb2dMZXZlbHN9LlxuICAgICAgICAgKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBpZiB7QGxpbmsgTG9nTGV2ZWxzI3ZhbGlkYXRlTG9nTGV2ZWx9IGZhaWxzLlxuICAgICAgICAgKi9cbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHNldExvZ0xldmVsKGxvZ0xldmVsKSB7XG4gICAgICAgICAgICBfbG9nbGV2ZWwyLmRlZmF1bHQudmFsaWRhdGVMb2dMZXZlbChsb2dMZXZlbCk7XG4gICAgICAgICAgICB0aGlzLl9sb2dMZXZlbCA9IGxvZ0xldmVsO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgbG9nIGxldmVsLlxuICAgICAgICAgKlxuICAgICAgICAgKiBJZiBubyBsb2cgbGV2ZWwgaGFzIGJlZW4gc2V0IHdpdGgge0BsaW5rIExvZ2dlciNzZXRMb2dMZXZlbH0sXG4gICAgICAgICAqIHRoaXMgcmV0dXJucyB7QGxpbmsgTG9nZ2VyU2luZ2xldG9uI2dldERlZmF1bHRMb2dMZXZlbH0uXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHtpbnR9XG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6IFwiZ2V0TG9nTGV2ZWxcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldExvZ0xldmVsKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2xvZ0xldmVsID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fbG9nZ2VyU2luZ2xldG9uLmdldERlZmF1bHRMb2dMZXZlbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xvZ0xldmVsO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0ZXh0dWFsIG5hbWUgZm9yIHRoZSBsb2cgbGV2ZWwuIElmIHRoZSBsb2dnZXJcbiAgICAgICAgICogZG9lcyBub3QgaGF2ZSBhIGxvZ0xldmVsIChpZiBpdCBpbmhlcml0cyBpdCBmcm9tIHRoZSBMb2dnZXJTaW5nbGV0b24pXG4gICAgICAgICAqIGEgc3RyaW5nIHdpdGggaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBhbmQgdGhlIGRlZmF1bHQgbG9nTGV2ZWwgZm9yIHRoZVxuICAgICAgICAgKiBMb2dnZXJTaW5nbGV0b24gaXMgcmV0dXJuZWQuXG4gICAgICAgICAqXG4gICAgICAgICAqIEludGVuZGVkIGZvciBkZWJ1Z2dpbmcuIFRoZSBmb3JtYXQgb2YgdGhlIHN0cmluZyBtYXkgY2hhbmdlLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcImdldFRleHR1YWxOYW1lRm9yTG9nTGV2ZWxcIixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRleHR1YWxOYW1lRm9yTG9nTGV2ZWwoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbG9nTGV2ZWwgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnW2RlZmF1bHQgZm9yIExvZ2dlclNpbmdsZXRvbiAtICcgKyAodGhpcy5fbG9nZ2VyU2luZ2xldG9uLmdldFRleHR1YWxOYW1lRm9yRGVmYXVsdExvZ0xldmVsKCkgKyBcIl1cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX2xvZ2xldmVsMi5kZWZhdWx0LmdldFRleHR1YWxOYW1lRm9yTG9nTGV2ZWwodGhpcy5nZXRMb2dMZXZlbCgpKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcImdldERlYnVnSW5mb1N0cmluZ1wiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RGVidWdJbmZvU3RyaW5nKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmFtZSArIFwiOiBcIiArIHRoaXMuZ2V0VGV4dHVhbE5hbWVGb3JMb2dMZXZlbCgpO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6IFwibmFtZVwiLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIExvZ2dlcjtcbn0oX0Fic3RyYWN0TG9nZ2VyMy5kZWZhdWx0KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gTG9nZ2VyO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9pZXZ2X2pzYmFzZS9saWIvbG9nL0xvZ2dlci5qc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 18 */
/*!*************************************************!*\
  !*** ./~/ievv_jsbase/lib/log/AbstractLogger.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _loglevel = __webpack_require__(/*! ./loglevel */ 19);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n */\nvar AbstractLogger = function () {\n  function AbstractLogger() {\n    _classCallCheck(this, AbstractLogger);\n  }\n\n  _createClass(AbstractLogger, [{\n    key: \"getLogLevel\",\n    value: function getLogLevel() {\n      throw new Error('Must be overridden in subclasses.');\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#DEBUG}.\n     */\n\n  }, {\n    key: \"_noOutput\",\n    value: function _noOutput() {}\n\n    /**\n     * Exposes console.log. Will only print if current level is\n     * higher than or equal to {@link LogLevels#DEBUG}.\n     * @returns {Function} console.log\n     */\n\n  }, {\n    key: \"isDebug\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.DEBUG;\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#INFO}.\n     */\n\n  }, {\n    key: \"isInfo\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.INFO;\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#WARNING}.\n     */\n\n  }, {\n    key: \"isWarning\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.WARNING;\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#ERROR}.\n     */\n\n  }, {\n    key: \"isError\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.ERROR;\n    }\n  }, {\n    key: \"debug\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.DEBUG) {\n        return console.log.bind(console);\n      }\n      return this._noOutput;\n    }\n\n    /**\n     * Exposes console.log. Will only print if current level is\n     * higher than or equal to {@link LogLevels#INFO}.\n     * @returns {Function} console.log\n     */\n\n  }, {\n    key: \"info\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.INFO) {\n        return console.log.bind(console);\n      }\n      return this._noOutput;\n    }\n\n    /**\n     * Exposes console.warn. Will only print if current level is\n     * higher than or equal to {@link LogLevels#WARNING}.\n     * @returns {Function} console.warn\n     */\n\n  }, {\n    key: \"warning\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.WARNING) {\n        return console.warn.bind(console);\n      }\n      return this._noOutput;\n    }\n\n    /**\n     * Exposes console.error. Will only print if current level is\n     * higher than or equal to {@link LogLevels#ERROR}.\n     * @returns {Function} console.error\n     */\n\n  }, {\n    key: \"error\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.ERROR) {\n        return console.error.bind(console);\n      }\n      return this._noOutput;\n    }\n  }]);\n\n  return AbstractLogger;\n}();\n\nexports.default = AbstractLogger;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lldnZfanNiYXNlL2xpYi9sb2cvQWJzdHJhY3RMb2dnZXIuanM/MTNjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9sb2dsZXZlbCA9IHJlcXVpcmUoXCIuL2xvZ2xldmVsXCIpO1xuXG52YXIgX2xvZ2xldmVsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xvZ2xldmVsKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLyoqXG4gKi9cbnZhciBBYnN0cmFjdExvZ2dlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQWJzdHJhY3RMb2dnZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFic3RyYWN0TG9nZ2VyKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhBYnN0cmFjdExvZ2dlciwgW3tcbiAgICBrZXk6IFwiZ2V0TG9nTGV2ZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TG9nTGV2ZWwoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ011c3QgYmUgb3ZlcnJpZGRlbiBpbiBzdWJjbGFzc2VzLicpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYGB0cnVlYGAgaWYgbG9nbGV2ZWwgaXMgaGlnaGVyXG4gICAgICogdGhhbiBvciBlcXVhbCB0byB7QGxpbmsgTG9nTGV2ZWxzI0RFQlVHfS5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIl9ub091dHB1dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfbm9PdXRwdXQoKSB7fVxuXG4gICAgLyoqXG4gICAgICogRXhwb3NlcyBjb25zb2xlLmxvZy4gV2lsbCBvbmx5IHByaW50IGlmIGN1cnJlbnQgbGV2ZWwgaXNcbiAgICAgKiBoaWdoZXIgdGhhbiBvciBlcXVhbCB0byB7QGxpbmsgTG9nTGV2ZWxzI0RFQlVHfS5cbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IGNvbnNvbGUubG9nXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJpc0RlYnVnXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRMb2dMZXZlbCgpID49IF9sb2dsZXZlbDIuZGVmYXVsdC5ERUJVRztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGBgdHJ1ZWBgIGlmIGxvZ2xldmVsIGlzIGhpZ2hlclxuICAgICAqIHRoYW4gb3IgZXF1YWwgdG8ge0BsaW5rIExvZ0xldmVscyNJTkZPfS5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImlzSW5mb1wiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0TG9nTGV2ZWwoKSA+PSBfbG9nbGV2ZWwyLmRlZmF1bHQuSU5GTztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGBgdHJ1ZWBgIGlmIGxvZ2xldmVsIGlzIGhpZ2hlclxuICAgICAqIHRoYW4gb3IgZXF1YWwgdG8ge0BsaW5rIExvZ0xldmVscyNXQVJOSU5HfS5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImlzV2FybmluZ1wiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0TG9nTGV2ZWwoKSA+PSBfbG9nbGV2ZWwyLmRlZmF1bHQuV0FSTklORztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGBgdHJ1ZWBgIGlmIGxvZ2xldmVsIGlzIGhpZ2hlclxuICAgICAqIHRoYW4gb3IgZXF1YWwgdG8ge0BsaW5rIExvZ0xldmVscyNFUlJPUn0uXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJpc0Vycm9yXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRMb2dMZXZlbCgpID49IF9sb2dsZXZlbDIuZGVmYXVsdC5FUlJPUjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVidWdcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIGlmICh0aGlzLmdldExvZ0xldmVsKCkgPj0gX2xvZ2xldmVsMi5kZWZhdWx0LkRFQlVHKSB7XG4gICAgICAgIHJldHVybiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuX25vT3V0cHV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4cG9zZXMgY29uc29sZS5sb2cuIFdpbGwgb25seSBwcmludCBpZiBjdXJyZW50IGxldmVsIGlzXG4gICAgICogaGlnaGVyIHRoYW4gb3IgZXF1YWwgdG8ge0BsaW5rIExvZ0xldmVscyNJTkZPfS5cbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IGNvbnNvbGUubG9nXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJpbmZvXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICBpZiAodGhpcy5nZXRMb2dMZXZlbCgpID49IF9sb2dsZXZlbDIuZGVmYXVsdC5JTkZPKSB7XG4gICAgICAgIHJldHVybiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuX25vT3V0cHV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4cG9zZXMgY29uc29sZS53YXJuLiBXaWxsIG9ubHkgcHJpbnQgaWYgY3VycmVudCBsZXZlbCBpc1xuICAgICAqIGhpZ2hlciB0aGFuIG9yIGVxdWFsIHRvIHtAbGluayBMb2dMZXZlbHMjV0FSTklOR30uXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBjb25zb2xlLndhcm5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcIndhcm5pbmdcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIGlmICh0aGlzLmdldExvZ0xldmVsKCkgPj0gX2xvZ2xldmVsMi5kZWZhdWx0LldBUk5JTkcpIHtcbiAgICAgICAgcmV0dXJuIGNvbnNvbGUud2Fybi5iaW5kKGNvbnNvbGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuX25vT3V0cHV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4cG9zZXMgY29uc29sZS5lcnJvci4gV2lsbCBvbmx5IHByaW50IGlmIGN1cnJlbnQgbGV2ZWwgaXNcbiAgICAgKiBoaWdoZXIgdGhhbiBvciBlcXVhbCB0byB7QGxpbmsgTG9nTGV2ZWxzI0VSUk9SfS5cbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IGNvbnNvbGUuZXJyb3JcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImVycm9yXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICBpZiAodGhpcy5nZXRMb2dMZXZlbCgpID49IF9sb2dsZXZlbDIuZGVmYXVsdC5FUlJPUikge1xuICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuX25vT3V0cHV0O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBBYnN0cmFjdExvZ2dlcjtcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gQWJzdHJhY3RMb2dnZXI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lldnZfanNiYXNlL2xpYi9sb2cvQWJzdHJhY3RMb2dnZXIuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 19 */
/*!*******************************************!*\
  !*** ./~/ievv_jsbase/lib/log/loglevel.js ***!
  \*******************************************/
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Defines valid log levels.\n *\n * Not used directly, but instead via the LOGLEVEL\n * constant exported as default by this module.\n *\n * @example\n * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n * console.log('The debug loglevel is:', LOGLEVEL.DEBUG);\n * LOGLEVEL.validateLogLevel(10);\n */\nvar LogLevels = exports.LogLevels = function () {\n    function LogLevels() {\n        _classCallCheck(this, LogLevels);\n\n        this._prettyLogLevelNames = {};\n        this._prettyLogLevelNames[this.DEBUG] = 'DEBUG';\n        this._prettyLogLevelNames[this.INFO] = 'INFO';\n        this._prettyLogLevelNames[this.WARNING] = 'WARNING';\n        this._prettyLogLevelNames[this.ERROR] = 'ERROR';\n        this._prettyLogLevelNames[this.SILENT] = 'SILENT';\n    }\n\n    /**\n     * Get the number for log level DEBUG.\n     * @returns {number}\n     */\n\n\n    _createClass(LogLevels, [{\n        key: 'validateLogLevel',\n\n\n        /**\n         * Validate a log level.\n         *\n         * Should be used by all functions/methods that set a log level.\n         *\n         * @param logLevel The loglevel.\n         * @throws {RangeError} If ``logLevel`` is not one\n         *   of:\n         *\n         *   - {@link LogLevels#DEBUG}\n         *   - {@link LogLevels#INFO}\n         *   - {@link LogLevels#WARNING}\n         *   - {@link LogLevels#ERROR}\n         *   - {@link LogLevels#SILENT}\n         */\n        value: function validateLogLevel(logLevel) {\n            if (logLevel > this.DEBUG || logLevel < this.SILENT) {\n                throw new RangeError('Invalid log level: ' + logLevel + ', must be between ' + (this.SILENT + ' (SILENT) and ' + this.DEBUG + ' (DEBUG)'));\n            }\n        }\n\n        /**\n         * Get the textual name for a log level.\n         *\n         * @param {number} logLevel The log level to get a textual name for.\n         * @returns {string}\n         *\n         * @example\n         * const infoText = LOGLEVEL.getTextualNameForLogLevel(LOGLEVEL.INFO);\n         * // infoText === 'INFO'\n         */\n\n    }, {\n        key: 'getTextualNameForLogLevel',\n        value: function getTextualNameForLogLevel(logLevel) {\n            return this._prettyLogLevelNames[logLevel];\n        }\n    }, {\n        key: 'DEBUG',\n        get: function get() {\n            return 4;\n        }\n\n        /**\n         * Get the number for log level INFO.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'INFO',\n        get: function get() {\n            return 3;\n        }\n\n        /**\n         * Get the number for log level WARNING.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'WARNING',\n        get: function get() {\n            return 2;\n        }\n\n        /**\n         * Get the number for log level ERROR.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'ERROR',\n        get: function get() {\n            return 1;\n        }\n\n        /**\n         * Get the number for log level SILENT.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'SILENT',\n        get: function get() {\n            return 0;\n        }\n    }]);\n\n    return LogLevels;\n}();\n\nvar LOGLEVEL = new LogLevels();\nexports.default = LOGLEVEL;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lldnZfanNiYXNlL2xpYi9sb2cvbG9nbGV2ZWwuanM/NTgxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuLyoqXG4gKiBEZWZpbmVzIHZhbGlkIGxvZyBsZXZlbHMuXG4gKlxuICogTm90IHVzZWQgZGlyZWN0bHksIGJ1dCBpbnN0ZWFkIHZpYSB0aGUgTE9HTEVWRUxcbiAqIGNvbnN0YW50IGV4cG9ydGVkIGFzIGRlZmF1bHQgYnkgdGhpcyBtb2R1bGUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCBMT0dMRVZFTCBmcm9tICdpZXZ2X2pzYmFzZS9sb2cvbG9nbGV2ZWwnO1xuICogY29uc29sZS5sb2coJ1RoZSBkZWJ1ZyBsb2dsZXZlbCBpczonLCBMT0dMRVZFTC5ERUJVRyk7XG4gKiBMT0dMRVZFTC52YWxpZGF0ZUxvZ0xldmVsKDEwKTtcbiAqL1xudmFyIExvZ0xldmVscyA9IGV4cG9ydHMuTG9nTGV2ZWxzID0gZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIExvZ0xldmVscygpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvZ0xldmVscyk7XG5cbiAgICAgICAgdGhpcy5fcHJldHR5TG9nTGV2ZWxOYW1lcyA9IHt9O1xuICAgICAgICB0aGlzLl9wcmV0dHlMb2dMZXZlbE5hbWVzW3RoaXMuREVCVUddID0gJ0RFQlVHJztcbiAgICAgICAgdGhpcy5fcHJldHR5TG9nTGV2ZWxOYW1lc1t0aGlzLklORk9dID0gJ0lORk8nO1xuICAgICAgICB0aGlzLl9wcmV0dHlMb2dMZXZlbE5hbWVzW3RoaXMuV0FSTklOR10gPSAnV0FSTklORyc7XG4gICAgICAgIHRoaXMuX3ByZXR0eUxvZ0xldmVsTmFtZXNbdGhpcy5FUlJPUl0gPSAnRVJST1InO1xuICAgICAgICB0aGlzLl9wcmV0dHlMb2dMZXZlbE5hbWVzW3RoaXMuU0lMRU5UXSA9ICdTSUxFTlQnO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgbnVtYmVyIGZvciBsb2cgbGV2ZWwgREVCVUcuXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cblxuXG4gICAgX2NyZWF0ZUNsYXNzKExvZ0xldmVscywgW3tcbiAgICAgICAga2V5OiAndmFsaWRhdGVMb2dMZXZlbCcsXG5cblxuICAgICAgICAvKipcbiAgICAgICAgICogVmFsaWRhdGUgYSBsb2cgbGV2ZWwuXG4gICAgICAgICAqXG4gICAgICAgICAqIFNob3VsZCBiZSB1c2VkIGJ5IGFsbCBmdW5jdGlvbnMvbWV0aG9kcyB0aGF0IHNldCBhIGxvZyBsZXZlbC5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIGxvZ0xldmVsIFRoZSBsb2dsZXZlbC5cbiAgICAgICAgICogQHRocm93cyB7UmFuZ2VFcnJvcn0gSWYgYGBsb2dMZXZlbGBgIGlzIG5vdCBvbmVcbiAgICAgICAgICogICBvZjpcbiAgICAgICAgICpcbiAgICAgICAgICogICAtIHtAbGluayBMb2dMZXZlbHMjREVCVUd9XG4gICAgICAgICAqICAgLSB7QGxpbmsgTG9nTGV2ZWxzI0lORk99XG4gICAgICAgICAqICAgLSB7QGxpbmsgTG9nTGV2ZWxzI1dBUk5JTkd9XG4gICAgICAgICAqICAgLSB7QGxpbmsgTG9nTGV2ZWxzI0VSUk9SfVxuICAgICAgICAgKiAgIC0ge0BsaW5rIExvZ0xldmVscyNTSUxFTlR9XG4gICAgICAgICAqL1xuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gdmFsaWRhdGVMb2dMZXZlbChsb2dMZXZlbCkge1xuICAgICAgICAgICAgaWYgKGxvZ0xldmVsID4gdGhpcy5ERUJVRyB8fCBsb2dMZXZlbCA8IHRoaXMuU0lMRU5UKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ludmFsaWQgbG9nIGxldmVsOiAnICsgbG9nTGV2ZWwgKyAnLCBtdXN0IGJlIGJldHdlZW4gJyArICh0aGlzLlNJTEVOVCArICcgKFNJTEVOVCkgYW5kICcgKyB0aGlzLkRFQlVHICsgJyAoREVCVUcpJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgdGV4dHVhbCBuYW1lIGZvciBhIGxvZyBsZXZlbC5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGxvZ0xldmVsIFRoZSBsb2cgbGV2ZWwgdG8gZ2V0IGEgdGV4dHVhbCBuYW1lIGZvci5cbiAgICAgICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogY29uc3QgaW5mb1RleHQgPSBMT0dMRVZFTC5nZXRUZXh0dWFsTmFtZUZvckxvZ0xldmVsKExPR0xFVkVMLklORk8pO1xuICAgICAgICAgKiAvLyBpbmZvVGV4dCA9PT0gJ0lORk8nXG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdnZXRUZXh0dWFsTmFtZUZvckxvZ0xldmVsJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRleHR1YWxOYW1lRm9yTG9nTGV2ZWwobG9nTGV2ZWwpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9wcmV0dHlMb2dMZXZlbE5hbWVzW2xvZ0xldmVsXTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnREVCVUcnLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiA0O1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgbnVtYmVyIGZvciBsb2cgbGV2ZWwgSU5GTy5cbiAgICAgICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ0lORk8nLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiAzO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgbnVtYmVyIGZvciBsb2cgbGV2ZWwgV0FSTklORy5cbiAgICAgICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ1dBUk5JTkcnLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiAyO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCB0aGUgbnVtYmVyIGZvciBsb2cgbGV2ZWwgRVJST1IuXG4gICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdFUlJPUicsXG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0IHRoZSBudW1iZXIgZm9yIGxvZyBsZXZlbCBTSUxFTlQuXG4gICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6ICdTSUxFTlQnLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIExvZ0xldmVscztcbn0oKTtcblxudmFyIExPR0xFVkVMID0gbmV3IExvZ0xldmVscygpO1xuZXhwb3J0cy5kZWZhdWx0ID0gTE9HTEVWRUw7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2lldnZfanNiYXNlL2xpYi9sb2cvbG9nbGV2ZWwuanNcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 20 */
/*!**********************************************************************************!*\
  !*** ./scripts/javascript/widgets/DownloadCompressedArchiveStartButtonWidget.js ***!
  \**********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AbstractWidget2 = __webpack_require__(/*! ievv_jsbase/lib/widget/AbstractWidget */ 2);\n\nvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\nvar _SignalHandlerSingleton = __webpack_require__(/*! ievv_jsbase/lib/SignalHandlerSingleton */ 14);\n\nvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DownloadCompressedArchiveStartButtonWidget = function (_AbstractWidget) {\n  _inherits(DownloadCompressedArchiveStartButtonWidget, _AbstractWidget);\n\n  function DownloadCompressedArchiveStartButtonWidget(element) {\n    _classCallCheck(this, DownloadCompressedArchiveStartButtonWidget);\n\n    var _this = _possibleConstructorReturn(this, (DownloadCompressedArchiveStartButtonWidget.__proto__ || Object.getPrototypeOf(DownloadCompressedArchiveStartButtonWidget)).call(this, element));\n\n    _this._onClick = _this._onClick.bind(_this);\n    _this.signalHandler = new _SignalHandlerSingleton2.default();\n    _this.element.addEventListener('click', _this._onClick);\n    return _this;\n  }\n\n  _createClass(DownloadCompressedArchiveStartButtonWidget, [{\n    key: \"_onClick\",\n    value: function _onClick(event) {\n      event.preventDefault();\n      this.signalHandler.send(this.config.signalNameSpace + \".Start\");\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.element.removeEventListener('click', this._onClick);\n    }\n  }]);\n\n  return DownloadCompressedArchiveStartButtonWidget;\n}(_AbstractWidget3.default);\n\nexports.default = DownloadCompressedArchiveStartButtonWidget;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc2NyaXB0cy9qYXZhc2NyaXB0L3dpZGdldHMvRG93bmxvYWRDb21wcmVzc2VkQXJjaGl2ZVN0YXJ0QnV0dG9uV2lkZ2V0LmpzPzI2ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFic3RyYWN0V2lkZ2V0IGZyb20gXCJpZXZ2X2pzYmFzZS9saWIvd2lkZ2V0L0Fic3RyYWN0V2lkZ2V0XCI7XG5pbXBvcnQgU2lnbmFsSGFuZGxlclNpbmdsZXRvbiBmcm9tIFwiaWV2dl9qc2Jhc2UvbGliL1NpZ25hbEhhbmRsZXJTaW5nbGV0b25cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRG93bmxvYWRDb21wcmVzc2VkQXJjaGl2ZVN0YXJ0QnV0dG9uV2lkZ2V0IGV4dGVuZHMgQWJzdHJhY3RXaWRnZXQge1xuICBjb25zdHJ1Y3RvcihlbGVtZW50KSB7XG4gICAgc3VwZXIoZWxlbWVudCk7XG4gICAgdGhpcy5fb25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLnNpZ25hbEhhbmRsZXIgPSBuZXcgU2lnbmFsSGFuZGxlclNpbmdsZXRvbigpO1xuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uQ2xpY2spO1xuICB9XG5cbiAgX29uQ2xpY2soZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuc2lnbmFsSGFuZGxlci5zZW5kKGAke3RoaXMuY29uZmlnLnNpZ25hbE5hbWVTcGFjZX0uU3RhcnRgKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fb25DbGljayk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzY3JpcHRzL2phdmFzY3JpcHQvd2lkZ2V0cy9Eb3dubG9hZENvbXByZXNzZWRBcmNoaXZlU3RhcnRCdXR0b25XaWRnZXQuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7Ozs7Ozs7Ozs7QUFDQTs7O0FBQ0E7QUFBQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBS0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTs7Ozs7O0FBZkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 21 */
/*!***********************************************************************************!*\
  !*** ./scripts/javascript/widgets/DownloadCompressedArchiveDownloadLinkWidget.js ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AbstractWidget2 = __webpack_require__(/*! ievv_jsbase/lib/widget/AbstractWidget */ 2);\n\nvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\nvar _SignalHandlerSingleton = __webpack_require__(/*! ievv_jsbase/lib/SignalHandlerSingleton */ 14);\n\nvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DownloadCompressedArchiveDownloadLinkWidget = function (_AbstractWidget) {\n  _inherits(DownloadCompressedArchiveDownloadLinkWidget, _AbstractWidget);\n\n  function DownloadCompressedArchiveDownloadLinkWidget(element) {\n    _classCallCheck(this, DownloadCompressedArchiveDownloadLinkWidget);\n\n    var _this = _possibleConstructorReturn(this, (DownloadCompressedArchiveDownloadLinkWidget.__proto__ || Object.getPrototypeOf(DownloadCompressedArchiveDownloadLinkWidget)).call(this, element));\n\n    _this._onFinishedSignal = _this._onFinishedSignal.bind(_this);\n    _this.signalHandler = new _SignalHandlerSingleton2.default();\n    _this.signalHandler.addReceiver(_this.config.signalNameSpace + \".Finished\", _this.config.signalNameSpace + \".DownloadLinkReceiver\", _this._onFinishedSignal);\n    return _this;\n  }\n\n  _createClass(DownloadCompressedArchiveDownloadLinkWidget, [{\n    key: \"_onFinishedSignal\",\n    value: function _onFinishedSignal(receivedSignalInfo) {\n      console.log('FINISHED', receivedSignalInfo.data);\n      this.element.setAttribute('href', receivedSignalInfo.data.download_link);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.signalHandler.removeAllSignalsFromReceiver(this.config.signalNameSpace + \".DownloadLinkReceiver\");\n    }\n  }]);\n\n  return DownloadCompressedArchiveDownloadLinkWidget;\n}(_AbstractWidget3.default);\n\nexports.default = DownloadCompressedArchiveDownloadLinkWidget;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc2NyaXB0cy9qYXZhc2NyaXB0L3dpZGdldHMvRG93bmxvYWRDb21wcmVzc2VkQXJjaGl2ZURvd25sb2FkTGlua1dpZGdldC5qcz9lNjBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBYnN0cmFjdFdpZGdldCBmcm9tIFwiaWV2dl9qc2Jhc2UvbGliL3dpZGdldC9BYnN0cmFjdFdpZGdldFwiO1xuaW1wb3J0IFNpZ25hbEhhbmRsZXJTaW5nbGV0b24gZnJvbSBcImlldnZfanNiYXNlL2xpYi9TaWduYWxIYW5kbGVyU2luZ2xldG9uXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERvd25sb2FkQ29tcHJlc3NlZEFyY2hpdmVEb3dubG9hZExpbmtXaWRnZXQgZXh0ZW5kcyBBYnN0cmFjdFdpZGdldCB7XG4gIGNvbnN0cnVjdG9yKGVsZW1lbnQpIHtcbiAgICBzdXBlcihlbGVtZW50KTtcbiAgICB0aGlzLl9vbkZpbmlzaGVkU2lnbmFsID0gdGhpcy5fb25GaW5pc2hlZFNpZ25hbC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2lnbmFsSGFuZGxlciA9IG5ldyBTaWduYWxIYW5kbGVyU2luZ2xldG9uKCk7XG4gICAgdGhpcy5zaWduYWxIYW5kbGVyLmFkZFJlY2VpdmVyKFxuICAgICAgYCR7dGhpcy5jb25maWcuc2lnbmFsTmFtZVNwYWNlfS5GaW5pc2hlZGAsXG4gICAgICBgJHt0aGlzLmNvbmZpZy5zaWduYWxOYW1lU3BhY2V9LkRvd25sb2FkTGlua1JlY2VpdmVyYCxcbiAgICAgIHRoaXMuX29uRmluaXNoZWRTaWduYWwpO1xuICB9XG5cbiAgX29uRmluaXNoZWRTaWduYWwocmVjZWl2ZWRTaWduYWxJbmZvKSB7XG4gICAgY29uc29sZS5sb2coJ0ZJTklTSEVEJywgcmVjZWl2ZWRTaWduYWxJbmZvLmRhdGEpO1xuICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCByZWNlaXZlZFNpZ25hbEluZm8uZGF0YS5kb3dubG9hZF9saW5rKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5zaWduYWxIYW5kbGVyLnJlbW92ZUFsbFNpZ25hbHNGcm9tUmVjZWl2ZXIoXG4gICAgICBgJHt0aGlzLmNvbmZpZy5zaWduYWxOYW1lU3BhY2V9LkRvd25sb2FkTGlua1JlY2VpdmVyYCk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzY3JpcHRzL2phdmFzY3JpcHQvd2lkZ2V0cy9Eb3dubG9hZENvbXByZXNzZWRBcmNoaXZlRG93bmxvYWRMaW5rV2lkZ2V0LmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7Ozs7Ozs7Ozs7O0FBQ0E7OztBQUNBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQVFBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBRUE7Ozs7OztBQW5CQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 22 */
/*!******************************************************************!*\
  !*** ./scripts/javascript/widgets/GradingConfigurationWidget.js ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AbstractWidget2 = __webpack_require__(/*! ievv_jsbase/lib/widget/AbstractWidget */ 2);\n\nvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\nvar _HtmlParser = __webpack_require__(/*! ievv_jsbase/lib/dom/HtmlParser */ 23);\n\nvar _HtmlParser2 = _interopRequireDefault(_HtmlParser);\n\nvar _SignalHandlerSingleton = __webpack_require__(/*! ievv_jsbase/lib/SignalHandlerSingleton */ 14);\n\nvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\nvar _LoggerSingleton = __webpack_require__(/*! ievv_jsbase/lib/log/LoggerSingleton */ 16);\n\nvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GradingConfigurationWidget = function (_AbstractWidget) {\n  _inherits(GradingConfigurationWidget, _AbstractWidget);\n\n  _createClass(GradingConfigurationWidget, [{\n    key: \"getDefaultConfig\",\n    value: function getDefaultConfig() {\n      return {\n        signalNameSpace: 'gradingConfiguration'\n      };\n    }\n  }]);\n\n  function GradingConfigurationWidget(element) {\n    _classCallCheck(this, GradingConfigurationWidget);\n\n    var _this = _possibleConstructorReturn(this, (GradingConfigurationWidget.__proto__ || Object.getPrototypeOf(GradingConfigurationWidget)).call(this, element));\n\n    if (_this.config.signalNameSpace == null) {\n      throw new Error('The signalNameSpace config is required.');\n    }\n    _this._name = \"devilry.GradingConfigurationWidget.\" + _this.config.signalNameSpace;\n    _this._signalHandler = new _SignalHandlerSingleton2.default();\n    _this.logger = new _LoggerSingleton2.default().getLogger('devilry.GradingConfigurationWidget');\n    _this._onPluginIdRadioChange = _this._onPluginIdRadioChange.bind(_this);\n    _this._onPointsToGradeMapperRadioChange = _this._onPointsToGradeMapperRadioChange.bind(_this);\n    _this._onPassingGradeMinPointsChange = _this._onPassingGradeMinPointsChange.bind(_this);\n    _this._onAddCustomTableRow = _this._onAddCustomTableRow.bind(_this);\n    _this._onSetupCustomTableAtoFExample = _this._onSetupCustomTableAtoFExample.bind(_this);\n    _this._onCustomTableValueChangeSignal = _this._onCustomTableValueChangeSignal.bind(_this);\n\n    _this.pluginIdElements = _this._getPluginIdElements();\n    _this.passingGradeMinPointsWrapperElement = document.getElementById('div_id_passing_grade_min_points');\n    _this.passingGradeMinPointsInputElement = document.getElementById('id_passing_grade_min_points');\n    _this.maxPointsLabelElement = _this.element.querySelector('#div_id_max_points label');\n    _this.maxPointsHelpTextElement = document.getElementById('hint_id_max_points');\n    _this.maxPointsInputElement = document.getElementById('id_max_points');\n    _this.pointsToGradeMapperElements = _this._getPointsToGradeMapperElements();\n    _this.customTableWrapperElement = document.getElementById('id_custom_table_wrapper');\n    _this.customTableAddRowButton = document.getElementById('id_custom_table_add_row_button');\n    _this.customTableSetuAtoFExampleButton = document.getElementById('id_custom_table_setup_atof_example_button');\n    _this.pointToGradeMapJsonElement = document.getElementById('id_point_to_grade_map_json');\n\n    _this._state = {};\n    _this._initializeSignalHandlers();\n    return _this;\n  }\n\n  _createClass(GradingConfigurationWidget, [{\n    key: \"useAfterInitializeAllWidgets\",\n    value: function useAfterInitializeAllWidgets() {\n      return true;\n    }\n  }, {\n    key: \"afterInitializeAllWidgets\",\n    value: function afterInitializeAllWidgets() {\n      var initialPluginId = this.element.querySelector('#div_id_grading_system_plugin_id input[checked]').value;\n      var initialPointsToGradeMapper = this.element.querySelector('#div_id_points_to_grade_mapper input[checked]').value;\n      var initialPointToGradeMapString = this.pointToGradeMapJsonElement.value;\n      var initialPassingGradeMinPoints = parseInt(this.passingGradeMinPointsInputElement.value);\n      if (isNaN(initialPassingGradeMinPoints)) {\n        initialPassingGradeMinPoints = null;\n      }\n      var initialMaxPoints = parseInt(this.maxPointsInputElement.value);\n      if (isNaN(initialMaxPoints)) {\n        initialMaxPoints = null;\n      }\n\n      var initialPointToGradeMap = [];\n      if (initialPointToGradeMapString != undefined && initialPointToGradeMapString != null && initialPointToGradeMapString != '') {\n        initialPointToGradeMap = JSON.parse(initialPointToGradeMapString);\n      }\n      if (initialPointToGradeMap.length == 0 || initialPointToGradeMap[0][0] != 0) {\n        initialPointToGradeMap = [[0, '']];\n      }\n      this._setState({\n        // grading_system_plugin_id: 'devilry_gradingsystemplugin_points',\n        // points_to_grade_mapper: 'custom-table',\n        // point_to_grade_map: this._getCustomTableAtoFExampleConfig()\n        grading_system_plugin_id: initialPluginId,\n        points_to_grade_mapper: initialPointsToGradeMapper,\n        point_to_grade_map: initialPointToGradeMap,\n        passing_grade_min_points: initialPassingGradeMinPoints,\n        max_points: initialMaxPoints\n      }, true);\n      this._addEventListeners();\n    }\n  }, {\n    key: \"_initializeSignalHandlers\",\n    value: function _initializeSignalHandlers() {\n      this._signalHandler.addReceiver(this.config.signalNameSpace + \".CustomTableValueChange\", this._name, this._onCustomTableValueChangeSignal);\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(statePatch) {\n      var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var oldState = Object.assign({}, this._state);\n      this._state = Object.assign({}, this._state, statePatch);\n      // console.log('statePatch', statePatch);\n      // console.log('oldState', oldState);\n      // console.log('newState', this._state);\n\n      if (initial) {\n        this.pluginIdElements[this._state.grading_system_plugin_id].input.checked = true;\n        this.pointsToGradeMapperElements[this._state.points_to_grade_mapper].input.checked = true;\n        this._signalHandler.send(this.config.signalNameSpace + \".SetCustomTableRows\", {\n          valueList: this._state.point_to_grade_map,\n          sendValueChangeSignal: false\n        });\n      }\n      if (this._state.grading_system_plugin_id == 'devilry_gradingsystemplugin_approved' && this._state.points_to_grade_mapper == 'custom-table') {\n        this._state.points_to_grade_mapper = 'passed-failed';\n      }\n\n      if (this._state.grading_system_plugin_id != oldState.grading_system_plugin_id) {\n        this._updateUiForPlugin();\n      }\n      if (this._state.points_to_grade_mapper != oldState.points_to_grade_mapper) {\n        this._updateUiForPointsToGradeMapper();\n      }\n      if (this._state.point_to_grade_map != oldState.point_to_grade_map) {\n        this.pointToGradeMapJsonElement.value = JSON.stringify(this._state.point_to_grade_map);\n        this._updateUiForPointsToGradeMapper();\n      }\n    }\n  }, {\n    key: \"_updateUiForPlugin\",\n    value: function _updateUiForPlugin() {\n      var pluginId = this._state.grading_system_plugin_id;\n      if (pluginId == 'devilry_gradingsystemplugin_approved') {\n        this._updateUiForApprovedPlugin();\n      } else if (pluginId == 'devilry_gradingsystemplugin_points') {\n        this._updateUiForPointsPlugin();\n      } else {\n        throw new Error(\"Unsupported grading_system_plugin: \\\"\" + pluginId + \"\\\"\");\n      }\n    }\n  }, {\n    key: \"_updateUiForApprovedPlugin\",\n    value: function _updateUiForApprovedPlugin() {\n      this.passingGradeMinPointsWrapperElement.style.display = 'none';\n      this._hidePointsToGradeMapperCustomTableChoice();\n      var pluginConfig = this.config['devilry_gradingsystemplugin_approved'];\n      this._updateUiLabels(pluginConfig);\n    }\n  }, {\n    key: \"_updateUiForPointsPlugin\",\n    value: function _updateUiForPointsPlugin() {\n      this.passingGradeMinPointsWrapperElement.style.display = 'block';\n      this._showPointsToGradeMapperCustomTableChoice();\n      var pluginConfig = this.config['devilry_gradingsystemplugin_points'];\n      this._updateUiLabels(pluginConfig);\n    }\n  }, {\n    key: \"_renderPassingGradeMinPointsField\",\n    value: function _renderPassingGradeMinPointsField() {\n      var parentElement = this.passingGradeMinPointsInputElement.parentElement;\n      parentElement.removeChild(this.passingGradeMinPointsInputElement);\n      var fieldHtml = '';\n      if (this._state.points_to_grade_mapper == 'custom-table') {\n        fieldHtml = this._getPassingGradeMinPointsCustomTableSelectFieldHtml();\n      } else {\n        fieldHtml = this._getPassingGradeMinPointsInputFieldHtml();\n      }\n      var parser = new _HtmlParser2.default(fieldHtml);\n      var selectElement = parser.firstRootElement;\n      this.passingGradeMinPointsInputElement = selectElement;\n      parentElement.insertBefore(selectElement, parentElement.children[0]);\n      selectElement.addEventListener('change', this._onPassingGradeMinPointsChange);\n    }\n  }, {\n    key: \"_getPassingGradeMinPointsCustomTableSelectFieldHtml\",\n    value: function _getPassingGradeMinPointsCustomTableSelectFieldHtml() {\n      var options = '<option value=\"\"></option>';\n      var hasSelectedOption = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._state.point_to_grade_map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var pointToGrade = _step.value;\n\n          var points = pointToGrade[0];\n          var grade = pointToGrade[1];\n          var selected = '';\n          if (points == this._state.passing_grade_min_points && !hasSelectedOption) {\n            selected = 'selected';\n            hasSelectedOption = true;\n          }\n          options += \"<option value=\\\"\" + points + \"\\\" \" + selected + \">\" + points + \" (\" + grade + \")</option>\";\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return \"<select name=\\\"passing_grade_min_points\\\" class=\\\"form-control\\\">\" + options + \"</select>\";\n    }\n  }, {\n    key: \"_getPassingGradeMinPointsInputFieldHtml\",\n    value: function _getPassingGradeMinPointsInputFieldHtml() {\n      var value = this._state.passing_grade_min_points;\n      if (value == null) {\n        value = '';\n      }\n      return \"<input type=\\\"number\\\" name=\\\"passing_grade_min_points\\\" \\n                   value=\\\"\" + value + \"\\\"\\n                   min=\\\"0\\\" step=\\\"1\\\"\\n                   class=\\\"form-control\\\"/>\";\n    }\n  }, {\n    key: \"_updateUiForPointsToGradeMapper\",\n    value: function _updateUiForPointsToGradeMapper() {\n      var mapper = this._state.points_to_grade_mapper;\n      if (mapper == 'custom-table') {\n        this.customTableWrapperElement.style.display = 'block';\n      } else {\n        this.customTableWrapperElement.style.display = 'none';\n      }\n      this._renderPassingGradeMinPointsField();\n    }\n  }, {\n    key: \"_getPluginIdElements\",\n    value: function _getPluginIdElements() {\n      var inputElements = Array.from(this.element.querySelectorAll('#div_id_grading_system_plugin_id input[type=\"radio\"]'));\n      var pluginIdElements = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = inputElements[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var inputElement = _step2.value;\n\n          pluginIdElements[inputElement.value] = {\n            input: inputElement\n          };\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return pluginIdElements;\n    }\n  }, {\n    key: \"_getPointsToGradeMapperElements\",\n    value: function _getPointsToGradeMapperElements() {\n      var inputElements = Array.from(this.element.querySelectorAll('#div_id_points_to_grade_mapper input[type=\"radio\"]'));\n      var pointsToGradeMapperElements = {};\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = inputElements[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var inputElement = _step3.value;\n\n          pointsToGradeMapperElements[inputElement.value] = {\n            input: inputElement,\n            wrapper: inputElement.parentElement.parentElement\n          };\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return pointsToGradeMapperElements;\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = Object.keys(this.pluginIdElements)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var value = _step4.value;\n\n          var inputElement = this.pluginIdElements[value].input;\n          inputElement.addEventListener('change', this._onPluginIdRadioChange);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = Object.keys(this.pointsToGradeMapperElements)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _value = _step5.value;\n\n          var _inputElement = this.pointsToGradeMapperElements[_value].input;\n          _inputElement.addEventListener('change', this._onPointsToGradeMapperRadioChange);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.customTableAddRowButton.addEventListener('click', this._onAddCustomTableRow);\n      this.customTableSetuAtoFExampleButton.addEventListener('click', this._onSetupCustomTableAtoFExample);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"_hidePointsToGradeMapperCustomTableChoice\",\n    value: function _hidePointsToGradeMapperCustomTableChoice() {\n      this.pointsToGradeMapperElements['custom-table'].wrapper.style.display = 'none';\n      if (this.pointsToGradeMapperElements['custom-table'].input.checked) {\n        this.pointsToGradeMapperElements['passed-failed'].input.checked = true;\n      }\n    }\n  }, {\n    key: \"_showPointsToGradeMapperCustomTableChoice\",\n    value: function _showPointsToGradeMapperCustomTableChoice() {\n      this.pointsToGradeMapperElements['custom-table'].wrapper.style.display = 'block';\n    }\n  }, {\n    key: \"_updateUiLabels\",\n    value: function _updateUiLabels(pluginConfig) {\n      this.maxPointsLabelElement.innerHTML = pluginConfig['max_points_label'] || '';\n      if (pluginConfig['max_points_help_text'] == '') {\n        this.maxPointsHelpTextElement.style.display = 'none';\n      } else {\n        this.maxPointsHelpTextElement.style.display = 'block';\n        this.maxPointsHelpTextElement.innerHTML = pluginConfig['max_points_help_text'] || '';\n      }\n    }\n  }, {\n    key: \"_onPluginIdRadioChange\",\n    value: function _onPluginIdRadioChange(event) {\n      var pluginId = event.target.value;\n      this._setState({\n        grading_system_plugin_id: pluginId\n      });\n    }\n  }, {\n    key: \"_onPointsToGradeMapperRadioChange\",\n    value: function _onPointsToGradeMapperRadioChange(event) {\n      var value = event.target.value;\n      this._setState({\n        points_to_grade_mapper: value\n      });\n    }\n  }, {\n    key: \"_onAddCustomTableRow\",\n    value: function _onAddCustomTableRow(event) {\n      event.preventDefault();\n      this._signalHandler.send(this.config.signalNameSpace + \".AddCustomTableRow\", {\n        grade: '',\n        points: ''\n      });\n    }\n  }, {\n    key: \"_getCustomTableAtoFExampleConfig\",\n    value: function _getCustomTableAtoFExampleConfig() {\n      return [[0, 'F'], [25, 'D'], [50, 'C'], [75, 'B'], [90, 'A']];\n    }\n  }, {\n    key: \"_onSetupCustomTableAtoFExample\",\n    value: function _onSetupCustomTableAtoFExample(event) {\n      event.preventDefault();\n      if (window.confirm('Are you sure you want to setup the A-F example? Clears the table and inserts new rows.')) {\n        this._signalHandler.send(this.config.signalNameSpace + \".SetCustomTableRows\", {\n          valueList: this._getCustomTableAtoFExampleConfig(),\n          sendValueChangeSignal: true\n        });\n      }\n    }\n  }, {\n    key: \"_onCustomTableValueChangeSignal\",\n    value: function _onCustomTableValueChangeSignal(receivedSignalInfo) {\n      var valueList = receivedSignalInfo.data;\n      this._setState({\n        point_to_grade_map: valueList\n      });\n    }\n  }, {\n    key: \"_onPassingGradeMinPointsChange\",\n    value: function _onPassingGradeMinPointsChange(event) {\n      var value = parseInt(event.target.value);\n      if (isNaN(value)) {\n        value = null;\n      }\n      this._setState({\n        passing_grade_min_points: value\n      });\n    }\n  }]);\n\n  return GradingConfigurationWidget;\n}(_AbstractWidget3.default);\n\nexports.default = GradingConfigurationWidget;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 23 */
/*!*********************************************!*\
  !*** ./~/ievv_jsbase/lib/dom/HtmlParser.js ***!
  \*********************************************/
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * HTML parser.\n *\n * Takes a HTML string, creates a temporary DOM document,\n * sets the HTML as innerHTML of the body of the temporary\n * document, and provides methods for extracting elements\n * from the temporary document.\n *\n * @example <caption>Parse a single html element and get the Element</caption>\n * let htmlParser = new HtmlParser('<div>Test</div>');\n * let divElement = htmlParser.firstRootElement;\n *\n * @example <caption>Parse multiple html elements</caption>\n * let htmlParser = new HtmlParser('<div>Test</div><p>Test 2</p>');\n * let elements = htmlParser.rootElements;\n *\n * @example <caption>Parse multiple html elements and query them</caption>\n * let htmlParser = new HtmlParser('<div>Test</div><p>Test 2</p>');\n * let elements = htmlParser.rootElements;\n *\n * @example <caption>Parse multiple html elements and query them</caption>\n * let htmlParser = new HtmlParser('<p>Test P 1</p><div>Test DIV</div><p>Test P 2</p>');\n * let divElement = htmlParser.querySelector('div');\n * let pElements = htmlParser.querySelectorAll('p');\n *\n * @example <caption>Parse a full HTML document</caption>\n * let htmlParser = new HtmlParser('<html><body><p>Test</p></body></html>');\n * let pElement = htmlParser.firstRootElement;\n */\nvar HtmlParser = function () {\n    /**\n     *\n     * @param {string} htmlString The HTML string to parse.\n     */\n    function HtmlParser(htmlString) {\n        _classCallCheck(this, HtmlParser);\n\n        this._tempDocumentBody = this._parseHtml(htmlString);\n    }\n\n    _createClass(HtmlParser, [{\n        key: \"_parseHtml\",\n        value: function _parseHtml(htmlString) {\n            var tempDocument = document.implementation.createHTMLDocument();\n            tempDocument.body.innerHTML = htmlString;\n            return tempDocument.body;\n        }\n\n        /**\n         * Get the root elements of the parsed document.\n         *\n         * @returns {HTMLCollection}\n         */\n\n    }, {\n        key: \"querySelector\",\n\n\n        /**\n         * Query the body element of the parsed document\n         * using Element.querySelector.\n         *\n         * @param {string} query The query.\n         * @returns {null|Element}\n         */\n        value: function querySelector(query) {\n            return this._tempDocumentBody.querySelector(query);\n        }\n\n        /**\n         * Query the body element of the parsed document\n         * using Element.querySelectorAll.\n         *\n         * @param {string} query The query.\n         * @returns {NodeList}\n         */\n\n    }, {\n        key: \"querySelectorAll\",\n        value: function querySelectorAll(query) {\n            return Array.from(this._tempDocumentBody.querySelectorAll(query));\n        }\n    }, {\n        key: \"rootElements\",\n        get: function get() {\n            return this._tempDocumentBody.children;\n        }\n\n        /**\n         * Get the first root element of the parsed document.\n         *\n         * @returns {null|Element}\n         */\n\n    }, {\n        key: \"firstRootElement\",\n        get: function get() {\n            return this.rootElements[0];\n        }\n    }]);\n\n    return HtmlParser;\n}();\n\nexports.default = HtmlParser;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2lldnZfanNiYXNlL2xpYi9kb20vSHRtbFBhcnNlci5qcz80OGVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8qKlxuICogSFRNTCBwYXJzZXIuXG4gKlxuICogVGFrZXMgYSBIVE1MIHN0cmluZywgY3JlYXRlcyBhIHRlbXBvcmFyeSBET00gZG9jdW1lbnQsXG4gKiBzZXRzIHRoZSBIVE1MIGFzIGlubmVySFRNTCBvZiB0aGUgYm9keSBvZiB0aGUgdGVtcG9yYXJ5XG4gKiBkb2N1bWVudCwgYW5kIHByb3ZpZGVzIG1ldGhvZHMgZm9yIGV4dHJhY3RpbmcgZWxlbWVudHNcbiAqIGZyb20gdGhlIHRlbXBvcmFyeSBkb2N1bWVudC5cbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5QYXJzZSBhIHNpbmdsZSBodG1sIGVsZW1lbnQgYW5kIGdldCB0aGUgRWxlbWVudDwvY2FwdGlvbj5cbiAqIGxldCBodG1sUGFyc2VyID0gbmV3IEh0bWxQYXJzZXIoJzxkaXY+VGVzdDwvZGl2PicpO1xuICogbGV0IGRpdkVsZW1lbnQgPSBodG1sUGFyc2VyLmZpcnN0Um9vdEVsZW1lbnQ7XG4gKlxuICogQGV4YW1wbGUgPGNhcHRpb24+UGFyc2UgbXVsdGlwbGUgaHRtbCBlbGVtZW50czwvY2FwdGlvbj5cbiAqIGxldCBodG1sUGFyc2VyID0gbmV3IEh0bWxQYXJzZXIoJzxkaXY+VGVzdDwvZGl2PjxwPlRlc3QgMjwvcD4nKTtcbiAqIGxldCBlbGVtZW50cyA9IGh0bWxQYXJzZXIucm9vdEVsZW1lbnRzO1xuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPlBhcnNlIG11bHRpcGxlIGh0bWwgZWxlbWVudHMgYW5kIHF1ZXJ5IHRoZW08L2NhcHRpb24+XG4gKiBsZXQgaHRtbFBhcnNlciA9IG5ldyBIdG1sUGFyc2VyKCc8ZGl2PlRlc3Q8L2Rpdj48cD5UZXN0IDI8L3A+Jyk7XG4gKiBsZXQgZWxlbWVudHMgPSBodG1sUGFyc2VyLnJvb3RFbGVtZW50cztcbiAqXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5QYXJzZSBtdWx0aXBsZSBodG1sIGVsZW1lbnRzIGFuZCBxdWVyeSB0aGVtPC9jYXB0aW9uPlxuICogbGV0IGh0bWxQYXJzZXIgPSBuZXcgSHRtbFBhcnNlcignPHA+VGVzdCBQIDE8L3A+PGRpdj5UZXN0IERJVjwvZGl2PjxwPlRlc3QgUCAyPC9wPicpO1xuICogbGV0IGRpdkVsZW1lbnQgPSBodG1sUGFyc2VyLnF1ZXJ5U2VsZWN0b3IoJ2RpdicpO1xuICogbGV0IHBFbGVtZW50cyA9IGh0bWxQYXJzZXIucXVlcnlTZWxlY3RvckFsbCgncCcpO1xuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPlBhcnNlIGEgZnVsbCBIVE1MIGRvY3VtZW50PC9jYXB0aW9uPlxuICogbGV0IGh0bWxQYXJzZXIgPSBuZXcgSHRtbFBhcnNlcignPGh0bWw+PGJvZHk+PHA+VGVzdDwvcD48L2JvZHk+PC9odG1sPicpO1xuICogbGV0IHBFbGVtZW50ID0gaHRtbFBhcnNlci5maXJzdFJvb3RFbGVtZW50O1xuICovXG52YXIgSHRtbFBhcnNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBodG1sU3RyaW5nIFRoZSBIVE1MIHN0cmluZyB0byBwYXJzZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBIdG1sUGFyc2VyKGh0bWxTdHJpbmcpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEh0bWxQYXJzZXIpO1xuXG4gICAgICAgIHRoaXMuX3RlbXBEb2N1bWVudEJvZHkgPSB0aGlzLl9wYXJzZUh0bWwoaHRtbFN0cmluZyk7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKEh0bWxQYXJzZXIsIFt7XG4gICAgICAgIGtleTogXCJfcGFyc2VIdG1sXCIsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBfcGFyc2VIdG1sKGh0bWxTdHJpbmcpIHtcbiAgICAgICAgICAgIHZhciB0ZW1wRG9jdW1lbnQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoKTtcbiAgICAgICAgICAgIHRlbXBEb2N1bWVudC5ib2R5LmlubmVySFRNTCA9IGh0bWxTdHJpbmc7XG4gICAgICAgICAgICByZXR1cm4gdGVtcERvY3VtZW50LmJvZHk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0IHRoZSByb290IGVsZW1lbnRzIG9mIHRoZSBwYXJzZWQgZG9jdW1lbnQuXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHtIVE1MQ29sbGVjdGlvbn1cbiAgICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJxdWVyeVNlbGVjdG9yXCIsXG5cblxuICAgICAgICAvKipcbiAgICAgICAgICogUXVlcnkgdGhlIGJvZHkgZWxlbWVudCBvZiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAqIHVzaW5nIEVsZW1lbnQucXVlcnlTZWxlY3Rvci5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHF1ZXJ5IFRoZSBxdWVyeS5cbiAgICAgICAgICogQHJldHVybnMge251bGx8RWxlbWVudH1cbiAgICAgICAgICovXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBxdWVyeVNlbGVjdG9yKHF1ZXJ5KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdGVtcERvY3VtZW50Qm9keS5xdWVyeVNlbGVjdG9yKHF1ZXJ5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBRdWVyeSB0aGUgYm9keSBlbGVtZW50IG9mIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgICAgICogdXNpbmcgRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gcXVlcnkgVGhlIHF1ZXJ5LlxuICAgICAgICAgKiBAcmV0dXJucyB7Tm9kZUxpc3R9XG4gICAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAgICBrZXk6IFwicXVlcnlTZWxlY3RvckFsbFwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcXVlcnlTZWxlY3RvckFsbChxdWVyeSkge1xuICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5fdGVtcERvY3VtZW50Qm9keS5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogXCJyb290RWxlbWVudHNcIixcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdGVtcERvY3VtZW50Qm9keS5jaGlsZHJlbjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXQgdGhlIGZpcnN0IHJvb3QgZWxlbWVudCBvZiB0aGUgcGFyc2VkIGRvY3VtZW50LlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcmV0dXJucyB7bnVsbHxFbGVtZW50fVxuICAgICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcImZpcnN0Um9vdEVsZW1lbnRcIixcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yb290RWxlbWVudHNbMF07XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gSHRtbFBhcnNlcjtcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gSHRtbFBhcnNlcjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vaWV2dl9qc2Jhc2UvbGliL2RvbS9IdG1sUGFyc2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 24 */
/*!*****************************************************************************!*\
  !*** ./scripts/javascript/widgets/GradingConfigurationCustomTableWidget.js ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AbstractWidget2 = __webpack_require__(/*! ievv_jsbase/lib/widget/AbstractWidget */ 2);\n\nvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\nvar _HtmlParser = __webpack_require__(/*! ievv_jsbase/lib/dom/HtmlParser */ 23);\n\nvar _HtmlParser2 = _interopRequireDefault(_HtmlParser);\n\nvar _SignalHandlerSingleton = __webpack_require__(/*! ievv_jsbase/lib/SignalHandlerSingleton */ 14);\n\nvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\nvar _LoggerSingleton = __webpack_require__(/*! ievv_jsbase/lib/log/LoggerSingleton */ 16);\n\nvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GradingConfigurationCustomTableWidget = function (_AbstractWidget) {\n  _inherits(GradingConfigurationCustomTableWidget, _AbstractWidget);\n\n  _createClass(GradingConfigurationCustomTableWidget, [{\n    key: \"getDefaultConfig\",\n    value: function getDefaultConfig() {\n      return {\n        signalNameSpace: 'gradingConfiguration'\n      };\n    }\n  }]);\n\n  function GradingConfigurationCustomTableWidget(element) {\n    _classCallCheck(this, GradingConfigurationCustomTableWidget);\n\n    var _this = _possibleConstructorReturn(this, (GradingConfigurationCustomTableWidget.__proto__ || Object.getPrototypeOf(GradingConfigurationCustomTableWidget)).call(this, element));\n\n    if (_this.config.signalNameSpace == null) {\n      throw new Error('The signalNameSpace config is required.');\n    }\n    _this._name = \"devilry.GradingConfigurationCustomTableWidget.\" + _this.config.signalNameSpace;\n    _this.logger = new _LoggerSingleton2.default().getLogger('devilry.GradingConfigurationCustomTableWidget');\n    _this._onRemoveRow = _this._onRemoveRow.bind(_this);\n    _this._onGradeInputChange = _this._onGradeInputChange.bind(_this);\n    _this._onPointInputChange = _this._onPointInputChange.bind(_this);\n    _this._onAddRowSignal = _this._onAddRowSignal.bind(_this);\n    _this._onSetRowsSignal = _this._onSetRowsSignal.bind(_this);\n    _this._signalHandler = new _SignalHandlerSingleton2.default();\n    _this._initializeSignalHandlers();\n    return _this;\n  }\n\n  _createClass(GradingConfigurationCustomTableWidget, [{\n    key: \"_initializeSignalHandlers\",\n    value: function _initializeSignalHandlers() {\n      this._signalHandler.addReceiver(this.config.signalNameSpace + \".AddCustomTableRow\", this._name, this._onAddRowSignal);\n      this._signalHandler.addReceiver(this.config.signalNameSpace + \".SetCustomTableRows\", this._name, this._onSetRowsSignal);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._signalHandler.removeAllSignalsFromReceiver(this._name);\n    }\n  }, {\n    key: \"_getRowChildElements\",\n    value: function _getRowChildElements(rowElement) {\n      var childElements = {\n        gradeInput: rowElement.children[0].children[0],\n        pointInput: rowElement.children[1].children[0]\n      };\n      if (rowElement.children.length > 2) {\n        childElements['removeButton'] = rowElement.children[2].children[0];\n      }\n      return childElements;\n    }\n  }, {\n    key: \"_getPointsFromRowElement\",\n    value: function _getPointsFromRowElement(rowElement) {\n      var points = parseInt(rowElement.children[1].children[0].value, 10);\n      if (isNaN(points)) {\n        return null;\n      }\n      return points;\n    }\n  }, {\n    key: \"_getGradeFromRowElement\",\n    value: function _getGradeFromRowElement(rowElement) {\n      return rowElement.children[0].children[0].value;\n    }\n  }, {\n    key: \"_moveToCorrectPlace\",\n    value: function _moveToCorrectPlace(rowElement) {\n      var points = this._getPointsFromRowElement(rowElement);\n      if (points != null) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = Array.from(this.element.children)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var currentRowElement = _step.value;\n\n            if (rowElement == currentRowElement) {\n              continue;\n            }\n            var currentPoints = this._getPointsFromRowElement(currentRowElement);\n            if (currentPoints == null || points < currentPoints) {\n              this.element.insertBefore(rowElement, currentRowElement);\n              return;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      this.element.appendChild(rowElement);\n    }\n  }, {\n    key: \"_addRow\",\n    value: function _addRow(grade, minimumPoints) {\n      var translatedRemoveText = window.gettext('remove');\n      var parser = new _HtmlParser2.default(\"\\n      <div class=\\\"devilry-tabulardata-list__row\\\">\\n        <div class=\\\"devilry-tabulardata-list__cell\\\">\\n          <input class=\\\"textinput textInput form-control form-control\\\"\\n                 maxlength=\\\"12\\\"\\n                 value=\\\"\" + grade + \"\\\"\\n                 type=\\\"text\\\">\\n        </div>\\n        <div class=\\\"devilry-tabulardata-list__cell\\\">\\n          <input class=\\\"numberinput form-control form-control\\\"\\n                 value=\\\"\" + minimumPoints + \"\\\"\\n                 type=\\\"number\\\"\\n                 min=\\\"1\\\" step=\\\"1\\\">\\n        </div>\\n        <div class=\\\"devilry-tabulardata-list__cell\\\">\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\">\\n              \" + translatedRemoveText + \"\\n          </button>\\n        </div>\\n      </div>\\n    \");\n      var rowElement = parser.firstRootElement;\n      this.element.appendChild(rowElement);\n      var childElements = this._getRowChildElements(rowElement);\n      childElements.pointInput.addEventListener('change', this._onPointInputChange);\n      childElements.gradeInput.addEventListener('change', this._onGradeInputChange);\n      if (childElements.removeButton) {\n        childElements.removeButton.addEventListener('click', this._onRemoveRow);\n      }\n      if (this.element.children[0] == rowElement) {\n        childElements.removeButton.parentElement.removeChild(childElements.removeButton);\n        childElements.pointInput.removeAttribute('min');\n        childElements.pointInput.disabled = true;\n        childElements.pointInput.value = 0;\n      }\n      return rowElement;\n    }\n  }, {\n    key: \"_removeRow\",\n    value: function _removeRow(rowElement) {\n      var childElements = this._getRowChildElements(rowElement);\n      if (childElements.removeButton) {\n        childElements.removeButton.removeEventListener('click', this._onRemoveRow);\n      }\n      rowElement.parentElement.removeChild(rowElement);\n      this._sendValueChangeSignal();\n    }\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = Array.from(this.element.children)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var rowElement = _step2.value;\n\n          this._removeRow(rowElement);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_buildTable\",\n    value: function _buildTable(valueList) {\n      this._clear();\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = valueList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var valueObject = _step3.value;\n\n          this._addRow(valueObject[1], valueObject[0]);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getCurrentValueList\",\n    value: function _getCurrentValueList() {\n      var values = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = Array.from(this.element.children)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var rowElement = _step4.value;\n\n          var points = this._getPointsFromRowElement(rowElement);\n          var grade = this._getGradeFromRowElement(rowElement) || '';\n          grade = grade.trim();\n          if (points != null && grade != '') {\n            values.push([points, grade]);\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_sendValueChangeSignal\",\n    value: function _sendValueChangeSignal() {\n      this._signalHandler.send(this.config.signalNameSpace + \".CustomTableValueChange\", this._getCurrentValueList());\n    }\n  }, {\n    key: \"_onGradeInputChange\",\n    value: function _onGradeInputChange(event) {\n      var value = event.target.value;\n      this._sendValueChangeSignal();\n    }\n  }, {\n    key: \"_onPointInputChange\",\n    value: function _onPointInputChange(event) {\n      var pointInputElement = event.target;\n      var rowElement = pointInputElement.parentElement.parentElement;\n      this._moveToCorrectPlace(rowElement);\n      this._sendValueChangeSignal();\n    }\n  }, {\n    key: \"_onSetRowsSignal\",\n    value: function _onSetRowsSignal(receivedSignalInfo) {\n      var valueList = receivedSignalInfo.data.valueList;\n      var sendValueChangeSignal = receivedSignalInfo.data.sendValueChangeSignal;\n      this._buildTable(valueList);\n      if (sendValueChangeSignal) {\n        this._sendValueChangeSignal();\n      }\n    }\n  }, {\n    key: \"_onAddRowSignal\",\n    value: function _onAddRowSignal(receivedSignalInfo) {\n      var rowElement = this._addRow(receivedSignalInfo.data.grade, receivedSignalInfo.data.points);\n      this._getRowChildElements(rowElement).gradeInput.focus();\n    }\n  }, {\n    key: \"_onRemoveRow\",\n    value: function _onRemoveRow(event) {\n      event.preventDefault();\n      var removeButton = event.target;\n      var rowElement = removeButton.parentElement.parentElement;\n      this._removeRow(rowElement);\n    }\n  }]);\n\n  return GradingConfigurationCustomTableWidget;\n}(_AbstractWidget3.default);\n\nexports.default = GradingConfigurationCustomTableWidget;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 25 */
/*!*************************************************************!*\
  !*** ./~/ievv_jsbase/lib/widget/WidgetRegistrySingleton.js ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ElementIsNotInitializedAsWidget = exports.InvalidWidgetAliasError = exports.ElementIsNotWidgetError = exports.ElementHasNoWidgetInstanceIdError = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = __webpack_require__(/*! ../makeCustomError */ 9);\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The instance of the {@link WidgetRegistrySingleton}.\n */\nvar _instance = null;\n\n/**\n * Exception thrown when an element where we expect the\n * ``data-ievv-jsbase-widget-instanceid`` attribute does\n * not have this attribute.\n *\n * @type {Error}\n */\nvar ElementHasNoWidgetInstanceIdError = exports.ElementHasNoWidgetInstanceIdError = (0, _makeCustomError2.default)('ElementHasNoWidgetInstanceIdError');\n\n/**\n * Exception thrown when an element that we expect to have\n * the ``data-ievv-jsbase-widget`` attribute does not have\n * this attribute.\n *\n * @type {Error}\n */\nvar ElementIsNotWidgetError = exports.ElementIsNotWidgetError = (0, _makeCustomError2.default)('ElementIsNotWidgetError');\n\n/**\n * Exception thrown when an element has a\n * ``data-ievv-jsbase-widget`` with a value that\n * is not an alias registered in the {@link WidgetRegistrySingleton}.\n *\n * @type {Error}\n */\nvar InvalidWidgetAliasError = exports.InvalidWidgetAliasError = (0, _makeCustomError2.default)('InvalidWidgetAliasError');\n\n/**\n * Exception thrown when an element with the\n * ``data-ievv-jsbase-widget-instanceid=<widgetInstanceId>`` attribute is not in\n * the {@link WidgetRegistrySingleton} with ``<widgetInstanceId>``.\n *\n * @type {Error}\n */\nvar ElementIsNotInitializedAsWidget = exports.ElementIsNotInitializedAsWidget = (0, _makeCustomError2.default)('ElementIsNotInitializedAsWidget');\n\n/**\n * A very lightweight widget system.\n *\n * Basic example below - see {@link AbstractWidget} for more examples.\n *\n * @example <caption>Create a very simple widget</caption>\n * export default class OpenMenuWidget extends AbstractWidget {\n *     constructor(element) {\n *          super(element);\n *          this._onClickBound = (...args) => {\n *              this._onClick(...args);\n *          };\n *          this.element.addEventListener('click', this._onClickBound);\n *     }\n *\n *     _onClick = (e) => {\n *          e.preventDefault();\n *          console.log('I should have opened the menu here');\n *     }\n *\n *     destroy() {\n *          this.element.removeEventListener('click', this._onClickBound);\n *     }\n * }\n *\n * @example <caption>Use the widget</caption>\n * <button data-ievv-jsbase-widget=\"open-menu-button\" type=\"button\">\n *     Open menu\n * </button>\n *\n * @example <caption>Register and load widgets</caption>\n * // Somewhere that is called after all the widgets are rendered\n * // - typically at the end of the <body>\n * import WidgetRegistrySingleton from 'ievv_jsbase/widget/WidgetRegistrySingleton';\n * import OpenMenuWidget from 'path/to/OpenMenuWidget';\n * const widgetRegistry = new WidgetRegistrySingleton();\n * widgetRegistry.registerWidgetClass('open-menu-button', OpenMenuWidget);\n * widgetRegistry.initializeAllWidgetsWithinElement(document.body);\n *\n */\n\nvar WidgetRegistrySingleton = function () {\n    function WidgetRegistrySingleton() {\n        _classCallCheck(this, WidgetRegistrySingleton);\n\n        if (!_instance) {\n            _instance = this;\n            this._initialize();\n        }\n        return _instance;\n    }\n\n    _createClass(WidgetRegistrySingleton, [{\n        key: '_initialize',\n        value: function _initialize() {\n            this._widgetAttribute = 'data-ievv-jsbase-widget';\n            this._widgetInstanceIdAttribute = 'data-ievv-jsbase-widget-instanceid';\n            this._widgetClassMap = new Map();\n            this._widgetInstanceMap = new Map();\n            this._widgetInstanceCounter = 0;\n        }\n    }, {\n        key: 'clear',\n        value: function clear() {\n            // TODO: Call destroyAllWidgetsWithinDocumentBody()\n            this._widgetClassMap.clear();\n            this._widgetInstanceMap.clear();\n            this._widgetInstanceCounter = 0;\n        }\n\n        /**\n         * Register a widget class in the registry.\n         *\n         * @param {string} alias The alias for the widget. This is the string that\n         *      is used as the attribute value with the ``data-ievv-jsbase-widget``\n         *      DOM element attribute.\n         * @param {AbstractWidget} WidgetClass The widget class.\n         */\n\n    }, {\n        key: 'registerWidgetClass',\n        value: function registerWidgetClass(alias, WidgetClass) {\n            this._widgetClassMap.set(alias, WidgetClass);\n        }\n\n        /**\n         * Remove widget class from registry.\n         *\n         * @param alias The alias that the widget class was registered with\n         *      by using {@link WidgetRegistrySingleton#registerWidgetClass}.\n         */\n\n    }, {\n        key: 'removeWidgetClass',\n        value: function removeWidgetClass(alias) {\n            this._widgetClassMap.delete(alias);\n        }\n\n        /**\n         * Initialize the provided element as a widget.\n         *\n         * @param {Element} element The DOM element to initalize as a widget.\n         *\n         * @throws {ElementIsNotWidgetError} If the element does not have\n         *      the ``data-ievv-jsbase-widget`` attribute.\n         * @throws {InvalidWidgetAliasError} If the widget alias is not in this registry.\n         */\n\n    }, {\n        key: 'initializeWidget',\n        value: function initializeWidget(element) {\n            var alias = element.getAttribute(this._widgetAttribute);\n            if (!alias) {\n                throw new ElementIsNotWidgetError('The\\n\\n' + element.outerHTML + '\\n\\nelement has no or empty' + (this._widgetAttribute + ' attribute.'));\n            }\n            if (!this._widgetClassMap.has(alias)) {\n                throw new InvalidWidgetAliasError('No WidgetClass registered with the \"' + alias + '\" alias.');\n            }\n            var WidgetClass = this._widgetClassMap.get(alias);\n            this._widgetInstanceCounter++;\n            var widgetInstanceId = this._widgetInstanceCounter.toString();\n            var widget = new WidgetClass(element, widgetInstanceId);\n            this._widgetInstanceMap.set(widgetInstanceId, widget);\n            element.setAttribute(this._widgetInstanceIdAttribute, widgetInstanceId);\n            return widget;\n        }\n    }, {\n        key: '_getAllWidgetElementsWithinElement',\n        value: function _getAllWidgetElementsWithinElement(element) {\n            return Array.from(element.querySelectorAll('[' + this._widgetAttribute + ']'));\n        }\n\n        /**\n         * Initialize all widgets within the provided element.\n         *\n         * @param {Element} element A DOM element.\n         */\n\n    }, {\n        key: 'initializeAllWidgetsWithinElement',\n        value: function initializeAllWidgetsWithinElement(element) {\n            var afterInitializeAllWidgets = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._getAllWidgetElementsWithinElement(element)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var widgetElement = _step.value;\n\n                    var widget = this.initializeWidget(widgetElement);\n                    if (widget.useAfterInitializeAllWidgets()) {\n                        afterInitializeAllWidgets.push(widget);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = afterInitializeAllWidgets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _widget = _step2.value;\n\n                    _widget.afterInitializeAllWidgets();\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Get the value of the ``data-ievv-jsbase-widget-instanceid`` attribute\n         * of the provided element.\n         *\n         * @param {Element} element A DOM element.\n         * @returns {null|string}\n         */\n\n    }, {\n        key: 'getWidgetInstanceIdFromElement',\n        value: function getWidgetInstanceIdFromElement(element) {\n            return element.getAttribute(this._widgetInstanceIdAttribute);\n        }\n\n        /**\n         * Get a widget instance by its widget instance id.\n         *\n         * @param widgetInstanceId A widget instance id.\n         * @returns {AbstractWidget} A widget instance or ``null``.\n         */\n\n    }, {\n        key: 'getWidgetInstanceByInstanceId',\n        value: function getWidgetInstanceByInstanceId(widgetInstanceId) {\n            return this._widgetInstanceMap.get(widgetInstanceId);\n        }\n    }, {\n        key: 'getWidgetInstanceFromElement',\n        value: function getWidgetInstanceFromElement(element) {\n            var widgetInstanceId = this.getWidgetInstanceIdFromElement(element);\n            if (widgetInstanceId) {\n                var widgetInstance = this.getWidgetInstanceByInstanceId(widgetInstanceId);\n                if (widgetInstance) {\n                    return widgetInstance;\n                } else {\n                    throw new ElementIsNotInitializedAsWidget('Element\\n\\n' + element.outerHTML + '\\n\\nhas the ' + (this._widgetInstanceIdAttribute + ' attribute, but the id is ') + 'not in the widget registry.');\n                }\n            } else {\n                throw new ElementHasNoWidgetInstanceIdError('Element\\n\\n' + element.outerHTML + '\\n\\nhas no or empty ' + (this._widgetInstanceIdAttribute + ' attribute.'));\n            }\n        }\n\n        /**\n         * Destroy the widget on the provided element.\n         *\n         * @param {Element} element A DOM element that has been initialized by\n         *      {@link WidgetRegistrySingleton#initializeWidget}.\n         *\n         * @throws {ElementHasNoWidgetInstanceIdError} If the element has\n         *      no ``data-ievv-jsbase-widget-instanceid`` attribute or the\n         *      attribute value is empty. This normally means that\n         *      the element is not a widget, or that the widget\n         *      is not initialized.\n         * @throws {ElementIsNotInitializedAsWidget} If the element\n         *      has the ``data-ievv-jsbase-widget-instanceid`` attribute\n         *      but the value of the attribute is not a valid widget instance\n         *      id. This should not happen unless you manipulate the\n         *      attribute manually or use the private members of this registry.\n         */\n\n    }, {\n        key: 'destroyWidget',\n        value: function destroyWidget(element) {\n            var widgetInstanceId = this.getWidgetInstanceIdFromElement(element);\n            if (widgetInstanceId) {\n                var widgetInstance = this.getWidgetInstanceByInstanceId(widgetInstanceId);\n                if (widgetInstance) {\n                    widgetInstance.destroy();\n                    this._widgetInstanceMap.delete(widgetInstanceId);\n                    element.removeAttribute(this._widgetInstanceIdAttribute);\n                } else {\n                    throw new ElementIsNotInitializedAsWidget('Element\\n\\n' + element.outerHTML + '\\n\\nhas the ' + (this._widgetInstanceIdAttribute + ' attribute, but the id is ') + 'not in the widget registry.');\n                }\n            } else {\n                throw new ElementHasNoWidgetInstanceIdError('Element\\n\\n' + element.outerHTML + '\\n\\nhas no or empty ' + (this._widgetInstanceIdAttribute + ' attribute.'));\n            }\n        }\n    }, {\n        key: '_getAllInstanciatedWidgetElementsWithinElement',\n        value: function _getAllInstanciatedWidgetElementsWithinElement(element) {\n            return Array.from(element.querySelectorAll('[' + this._widgetInstanceIdAttribute + ']'));\n        }\n\n        /**\n         * Destroy all widgets within the provided element.\n         * Only destroys widgets on elements that is a child of the element.\n         *\n         * @param {Element} element The DOM Element.\n         */\n\n    }, {\n        key: 'destroyAllWidgetsWithinElement',\n        value: function destroyAllWidgetsWithinElement(element) {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._getAllInstanciatedWidgetElementsWithinElement(element)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var widgetElement = _step3.value;\n\n                    this.destroyWidget(widgetElement);\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n        }\n    }]);\n\n    return WidgetRegistrySingleton;\n}();\n\nexports.default = WidgetRegistrySingleton;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 26 */
/*!***************************************************!*\
  !*** ./scripts/javascript/utils/i18nFallbacks.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\n/*\nFallback implementations for the Django i18n translation catalog\nfunctions.\n\nSee:\nhttps://docs.djangoproject.com/en/2.0/topics/i18n/translation/\n\nWe only add the translation functions to ``window`` if they\nare not already there. This means that this can be included\nboth before and after loading the Django i18n javascript catalog.\n*/\n\nif (!window.gettext) {\n  window.gettext = function (msgid) {\n    return msgid;\n  };\n  if (process.env.NODE_ENV !== 'test') {\n    console.warn('window.gettext is not defined. Patching window.gettext and related ' + 'functions with noop fallbacks. ' + 'Make sure you import/include a full gettext translation system like ' + 'the Django JavascriptCatalog view before ievv_jsbase or any javascript using ' + 'ievv_jsbase to get translations.');\n  }\n}\n\nif (!window.pluralidx) {\n  window.pluralidx = function (count) {\n    return count === 1 ? 0 : 1;\n  };\n}\n\nif (!window.ngettext) {\n  window.ngettext = function (singular, plural, count) {\n    return count === 1 ? singular : plural;\n  };\n}\n\nif (!window.gettext_noop) {\n  window.gettext_noop = function (msgid) {\n    return msgid;\n  };\n}\n\nif (!window.pgettext) {\n  window.pgettext = function (context, msgid) {\n    return msgid;\n  };\n}\n\nif (!window.npgettext) {\n  window.npgettext = function (context, singular, plural, count) {\n    return count === 1 ? singular : plural;\n  };\n}\n\nif (!window.interpolate) {\n  window.interpolate = function (fmt, obj, named) {\n    if (named) {\n      return fmt.replace(/%\\(\\w+\\)s/g, function (match) {\n        return String(obj[match.slice(2, -2)]);\n      });\n    } else {\n      return fmt.replace(/%s/g, function (match) {\n        return String(obj.shift());\n      });\n    }\n  };\n}\n\nif (!window.get_format) {\n  window.get_format = function (format_type) {\n    return format_type;\n  };\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../~/process/browser.js */ 27)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc2NyaXB0cy9qYXZhc2NyaXB0L3V0aWxzL2kxOG5GYWxsYmFja3MuanM/MDZkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuRmFsbGJhY2sgaW1wbGVtZW50YXRpb25zIGZvciB0aGUgRGphbmdvIGkxOG4gdHJhbnNsYXRpb24gY2F0YWxvZ1xuZnVuY3Rpb25zLlxuXG5TZWU6XG5odHRwczovL2RvY3MuZGphbmdvcHJvamVjdC5jb20vZW4vMi4wL3RvcGljcy9pMThuL3RyYW5zbGF0aW9uL1xuXG5XZSBvbmx5IGFkZCB0aGUgdHJhbnNsYXRpb24gZnVuY3Rpb25zIHRvIGBgd2luZG93YGAgaWYgdGhleVxuYXJlIG5vdCBhbHJlYWR5IHRoZXJlLiBUaGlzIG1lYW5zIHRoYXQgdGhpcyBjYW4gYmUgaW5jbHVkZWRcbmJvdGggYmVmb3JlIGFuZCBhZnRlciBsb2FkaW5nIHRoZSBEamFuZ28gaTE4biBqYXZhc2NyaXB0IGNhdGFsb2cuXG4qL1xuXG5pZiAoIXdpbmRvdy5nZXR0ZXh0KSB7XG4gIHdpbmRvdy5nZXR0ZXh0ID0gZnVuY3Rpb24gKG1zZ2lkKSB7XG4gICAgcmV0dXJuIG1zZ2lkXG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCcpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnd2luZG93LmdldHRleHQgaXMgbm90IGRlZmluZWQuIFBhdGNoaW5nIHdpbmRvdy5nZXR0ZXh0IGFuZCByZWxhdGVkICcgK1xuICAgICAgJ2Z1bmN0aW9ucyB3aXRoIG5vb3AgZmFsbGJhY2tzLiAnICtcbiAgICAgICdNYWtlIHN1cmUgeW91IGltcG9ydC9pbmNsdWRlIGEgZnVsbCBnZXR0ZXh0IHRyYW5zbGF0aW9uIHN5c3RlbSBsaWtlICcgK1xuICAgICAgJ3RoZSBEamFuZ28gSmF2YXNjcmlwdENhdGFsb2cgdmlldyBiZWZvcmUgaWV2dl9qc2Jhc2Ugb3IgYW55IGphdmFzY3JpcHQgdXNpbmcgJyArXG4gICAgICAnaWV2dl9qc2Jhc2UgdG8gZ2V0IHRyYW5zbGF0aW9ucy4nXG4gICAgKVxuICB9XG59XG5cbmlmICghd2luZG93LnBsdXJhbGlkeCkge1xuICB3aW5kb3cucGx1cmFsaWR4ID0gZnVuY3Rpb24gKGNvdW50KSB7XG4gICAgcmV0dXJuIChjb3VudCA9PT0gMSkgPyAwIDogMVxuICB9XG59XG5cbmlmICghd2luZG93Lm5nZXR0ZXh0KSB7XG4gIHdpbmRvdy5uZ2V0dGV4dCA9IGZ1bmN0aW9uIChzaW5ndWxhciwgcGx1cmFsLCBjb3VudCkge1xuICAgIHJldHVybiAoY291bnQgPT09IDEpID8gc2luZ3VsYXIgOiBwbHVyYWxcbiAgfVxufVxuXG5pZiAoIXdpbmRvdy5nZXR0ZXh0X25vb3ApIHtcbiAgd2luZG93LmdldHRleHRfbm9vcCA9IGZ1bmN0aW9uIChtc2dpZCkge1xuICAgIHJldHVybiBtc2dpZFxuICB9XG59XG5cbmlmICghd2luZG93LnBnZXR0ZXh0KSB7XG4gIHdpbmRvdy5wZ2V0dGV4dCA9IGZ1bmN0aW9uIChjb250ZXh0LCBtc2dpZCkge1xuICAgIHJldHVybiBtc2dpZFxuICB9XG59XG5cbmlmICghd2luZG93Lm5wZ2V0dGV4dCkge1xuICB3aW5kb3cubnBnZXR0ZXh0ID0gZnVuY3Rpb24gKGNvbnRleHQsIHNpbmd1bGFyLCBwbHVyYWwsIGNvdW50KSB7XG4gICAgcmV0dXJuIChjb3VudCA9PT0gMSkgPyBzaW5ndWxhciA6IHBsdXJhbFxuICB9XG59XG5cbmlmICghd2luZG93LmludGVycG9sYXRlKSB7XG4gIHdpbmRvdy5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uIChmbXQsIG9iaiwgbmFtZWQpIHtcbiAgICBpZiAobmFtZWQpIHtcbiAgICAgIHJldHVybiBmbXQucmVwbGFjZSgvJVxcKFxcdytcXClzL2csIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgICByZXR1cm4gU3RyaW5nKG9ialttYXRjaC5zbGljZSgyLCAtMildKVxuICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZtdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhvYmouc2hpZnQoKSlcbiAgICAgIH0pXG4gICAgfVxuICB9XG59XG5cbmlmICghd2luZG93LmdldF9mb3JtYXQpIHtcbiAgd2luZG93LmdldF9mb3JtYXQgPSBmdW5jdGlvbiAoZm9ybWF0X3R5cGUpIHtcbiAgICByZXR1cm4gZm9ybWF0X3R5cGVcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNjcmlwdHMvamF2YXNjcmlwdC91dGlscy9pMThuRmFsbGJhY2tzLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7QUFZQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 27 */
/*!******************************!*\
  !*** ./~/process/browser.js ***!
  \******************************/
/***/ function(module, exports) {

	eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);