{"version":3,"sources":["webpack:///devilry_all.js","webpack:///webpack/bootstrap a6242a06bf90d5a43325","webpack:///./scripts/javascript/devilry_all.js","webpack:///./~/ievv_jsbase/lib/SignalHandlerSingleton.js","webpack:///./~/ievv_jsbase/lib/widget/AbstractWidget.js","webpack:///./~/ievv_jsbase/lib/log/LoggerSingleton.js","webpack:///./~/ievv_jsbase/lib/log/loglevel.js","webpack:///./~/ievv_jsbase/lib/makeCustomError.js","webpack:///./~/ievv_jsbase/lib/dom/HtmlParser.js","webpack:///./~/ievv_jsbase/lib/http/HttpJsonRequest.js","webpack:///./~/ievv_jsbase/lib/http/HttpResponse.js","webpack:///./~/ievv_jsbase/lib/utils/typeDetect.js","webpack:///./scripts/javascript/utils/i18nFallbacks.js","webpack:///./scripts/javascript/widgets/DownloadCompressedArchiveDownloadLinkWidget.js","webpack:///./scripts/javascript/widgets/DownloadCompressedArchiveStartButtonWidget.js","webpack:///./scripts/javascript/widgets/DownloadCompressedArchiveWidget.js","webpack:///./scripts/javascript/widgets/GradingConfigurationCustomTableWidget.js","webpack:///./scripts/javascript/widgets/GradingConfigurationWidget.js","webpack:///./~/ievv_jsbase/lib/http/HttpCookies.js","webpack:///./~/ievv_jsbase/lib/http/HttpDjangoJsonRequest.js","webpack:///./~/ievv_jsbase/lib/http/HttpJsonResponse.js","webpack:///./~/ievv_jsbase/lib/http/HttpRequest.js","webpack:///./~/ievv_jsbase/lib/http/QueryString.js","webpack:///./~/ievv_jsbase/lib/http/UrlParser.js","webpack:///./~/ievv_jsbase/lib/log/AbstractLogger.js","webpack:///./~/ievv_jsbase/lib/log/Logger.js","webpack:///./~/ievv_jsbase/lib/utils/ObjectManager.js","webpack:///./~/ievv_jsbase/lib/utils/PrettyFormat.js","webpack:///./~/ievv_jsbase/lib/widget/WidgetRegistrySingleton.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_onDomReady","widgetRegistry","initializeAllWidgetsWithinElement","document","body","_DownloadCompressedArchiveWidget","_DownloadCompressedArchiveWidget2","_DownloadCompressedArchiveStartButtonWidget","_DownloadCompressedArchiveStartButtonWidget2","_DownloadCompressedArchiveDownloadLinkWidget","_DownloadCompressedArchiveDownloadLinkWidget2","_GradingConfigurationWidget","_GradingConfigurationWidget2","_GradingConfigurationCustomTableWidget","_GradingConfigurationCustomTableWidget2","_LoggerSingleton","_LoggerSingleton2","_loglevel","_loglevel2","_WidgetRegistrySingleton","_WidgetRegistrySingleton2","logger","setDefaultLogLevel","INFO","registerWidgetClass","readyState","addEventListener","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","SentSignalInfo","ReceivedSignalInfo","DuplicateReceiverNameForSignal","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_makeCustomError","_makeCustomError2","_PrettyFormat","_PrettyFormat2","data","signalName","receiverName","this","toString","getPrettyFormattedData","_SignalReceiver","signal","name","callback","_this","setTimeout","triggeredReceiverNames","push","receivers","join","_SignalReceivers","receiverMap","Map","has","set","delete","size","info","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","receiver","trigger","_addReceiverName","err","return","_instance","SignalHandlerSingleton","_signalMap","_receiverMap","clear","get","add","Set","addReceiver","removeReceiver","receiverCount","receiverSignalSet","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","hasReceiver","infoCallback","send","_ObjectManager","_ObjectManager2","AbstractWidget","element","widgetInstanceId","attributeName","hasAttribute","rawConfig","getAttribute","config","JSON","parse","_config","parsedConfig","_parseConfig","mergeAndClone","getDefaultConfig","_Logger","_Logger2","LoggerSingleton","_loggerMap","reset","_logLevel","WARNING","logLevel","validateLogLevel","loggerNames","Array","from","keys","sort","getTextualNameForLogLevel","getDefaultLogLevel","loggerInfoString","getTextualNameForDefaultLogLevel","getLoggerCount","getLoggerNameArray","loggerName","getLogger","getDebugInfoString","LogLevels","_prettyLogLevelNames","DEBUG","ERROR","SILENT","RangeError","LOGLEVEL","makeCustomError","extendsError","Error","CustomError","message","properties","last_part","stack","match","assign","setPrototypeOf","create","constructor","HtmlParser","htmlString","_tempDocumentBody","_parseHtml","tempDocument","implementation","createHTMLDocument","innerHTML","query","querySelector","querySelectorAll","children","rootElements","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","__proto__","_get","object","property","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_HttpJsonResponse","_HttpJsonResponse2","_HttpRequest2","_HttpRequest3","JsonHttpRequest","_HttpRequest","apply","arguments","stringify","request","method","setRequestHeader","HttpResponseError","HttpResponse","status","connectionRefused","getAllResponseHeaders","response","responseHeaderToString","getPrettyfiedBody","responseText","typeDetect","typeOf","_typeof","isArray","window","gettext","msgid","console","warn","pluralidx","count","ngettext","singular","plural","gettext_noop","pgettext","context","npgettext","interpolate","fmt","named","replace","String","slice","shift","get_format","format_type","_AbstractWidget2","_AbstractWidget3","_SignalHandlerSingleton","_SignalHandlerSingleton2","DownloadCompressedArchiveDownloadLinkWidget","_AbstractWidget","_onFinishedSignal","bind","signalHandler","signalNameSpace","receivedSignalInfo","log","setAttribute","download_link","removeAllSignalsFromReceiver","DownloadCompressedArchiveStartButtonWidget","_onClick","event","preventDefault","removeEventListener","_HttpDjangoJsonRequest","_HttpDjangoJsonRequest2","_HttpJsonRequest","_HttpJsonRequest2","DownloadCompressedArchiveWidget","cssClassPrefix","pollCount","statuses","_onStartSignal","processingStartedTime","_requestStatusUpdate","classList","remove","_this2","isLoading","apiurl","then","_handleApiResponse","catch","error","debug","bodydata","style","display","_this3","_updateCssClassesFromStatus","_pollDelayMilliseconds","_handleFinishedStatus","_handleNoFilesStatus","_this4","Date","post","_HtmlParser","_HtmlParser2","GradingConfigurationCustomTableWidget","_name","_onRemoveRow","_onGradeInputChange","_onPointInputChange","_onAddRowSignal","_onSetRowsSignal","_signalHandler","_initializeSignalHandlers","rowElement","childElements","gradeInput","pointInput","points","parseInt","isNaN","_getPointsFromRowElement","currentRowElement","currentPoints","insertBefore","appendChild","grade","minimumPoints","translatedRemoveText","parser","firstRootElement","_getRowChildElements","removeButton","parentElement","removeChild","removeAttribute","disabled","_sendValueChangeSignal","_removeRow","valueList","_clear","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","valueObject","_addRow","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_getGradeFromRowElement","trim","_getCurrentValueList","pointInputElement","_moveToCorrectPlace","sendValueChangeSignal","_buildTable","focus","GradingConfigurationWidget","_onPluginIdRadioChange","_onPointsToGradeMapperRadioChange","_onPassingGradeMinPointsChange","_onAddCustomTableRow","_onSetupCustomTableAtoFExample","_onCustomTableValueChangeSignal","pluginIdElements","_getPluginIdElements","passingGradeMinPointsWrapperElement","getElementById","passingGradeMinPointsInputElement","maxPointsLabelElement","maxPointsHelpTextElement","maxPointsInputElement","pointsToGradeMapperElements","_getPointsToGradeMapperElements","customTableWrapperElement","customTableAddRowButton","customTableSetuAtoFExampleButton","pointToGradeMapJsonElement","_state","initialPluginId","initialPointsToGradeMapper","initialPointToGradeMapString","initialPassingGradeMinPoints","initialMaxPoints","initialPointToGradeMap","_setState","grading_system_plugin_id","points_to_grade_mapper","point_to_grade_map","passing_grade_min_points","max_points","_addEventListeners","statePatch","initial","oldState","input","checked","_updateUiForPlugin","_updateUiForPointsToGradeMapper","pluginId","_updateUiForApprovedPlugin","_updateUiForPointsPlugin","_hidePointsToGradeMapperCustomTableChoice","pluginConfig","_updateUiLabels","_showPointsToGradeMapperCustomTableChoice","fieldHtml","_getPassingGradeMinPointsCustomTableSelectFieldHtml","_getPassingGradeMinPointsInputFieldHtml","selectElement","options","hasSelectedOption","pointToGrade","selected","mapper","_renderPassingGradeMinPointsField","inputElements","inputElement","wrapper","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","confirm","_getCustomTableAtoFExampleConfig","HttpCookieNotFoundError","HttpCookies","rawCookies","cookie","cookies","__parse","cookiesArray","split","cookieArray","cookieName","fallback","_HttpJsonRequest3","_HttpCookies","_HttpCookies2","HttpDjangoJsonRequest","_ref","_len","args","_key","concat","_cookies","shouldAddCsrfToken","csrftoken","getStrict","_HttpResponse2","_HttpResponse3","HttpJsonResponse","_HttpResponse","prettyBody","SyntaxError","isConnectionRefused","__parseResponseTextAsJson","_UrlParser","HttpRequest","url","_treatRedirectResponseAsError","XMLHttpRequest","_urlParser","setUrl","UrlParser","treatRedirectResponseAsError","toUpperCase","Promise","resolve","reject","open","urlParser","buildUrl","setDefaultRequestHeaders","onload","_onComplete","onerror","makeRequestBody","header","makeResponse","isSuccess","isRedirect","toError","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","QueryString","querystring","_queryStringMap","_parseQueryString","querystringItem","splitPair","decodeURIComponent","append","splitQueryString","_parseQueryStringItem","iterable","_setKeyToEmptyArray","_addToKey","setIterable","valueArray","falback","encodeURIComponent","urlEncodedArray","_step3$value","_encodeKeyValue","_QueryString","_QueryString2","urlSplit","_baseUrl","_parsedBaseUrl","_parseBaseUrl","queryString","setQueryString","domainAndPath","domain","path","parsedBaseUrl","scheme","remaining","_splitDomainAndPath","substring","_domainAndPath","isEmpty","urlencode","queryStringObject","AbstractLogger","getLogLevel","_noOutput","_AbstractLogger2","_AbstractLogger3","Logger","_AbstractLogger","loggerSingleton","_loggerSingleton","_typeDetect","_typeDetect2","ObjectManager","givenObject","emptyObject","emptyString","checkValue","_len2","_key2","_hasOwnValue","_len3","_key3","_len4","_key4","_len5","_key5","fallbackValue","objectToBeValidated","_len6","_key6","validate","arg","_len7","_key7","validatedValue","validateOrFallback","errorMessage","_len8","_key8","validateOrCallback","mergedValues","overrides","detectedType","_recursiveMerge","overrideValuesInGiven","originalObject","overrideObject","_merge","PrettyFormat","_obj","str","indent","indentLevel","repeat","map","sortedKeys","flatIterable","prefix","suffix","output","itemSuffix","index","item","prettyItem","_prettyFormat","_indentString","keyValueSeparator","prettyKey","prettyValue","fn","typeString","_prettyFormatFlatIterable","_prettyFormatMap","_prettyFormatFunction","_objectToMap","ElementIsNotInitializedAsWidget","InvalidWidgetAliasError","ElementIsNotWidgetError","ElementHasNoWidgetInstanceIdError","WidgetRegistrySingleton","_initialize","_widgetAttribute","_widgetInstanceIdAttribute","_widgetClassMap","_widgetInstanceMap","_widgetInstanceCounter","alias","WidgetClass","outerHTML","widget","afterInitializeAllWidgets","_getAllWidgetElementsWithinElement","widgetElement","initializeWidget","useAfterInitializeAllWidgets","_widget","getWidgetInstanceIdFromElement","widgetInstance","getWidgetInstanceByInstanceId","destroy","_getAllInstanciatedWidgetElementsWithinElement","destroyWidget"],"mappings":"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","file":"devilry_all.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _DownloadCompressedArchiveWidget = __webpack_require__(13);\n\t\n\tvar _DownloadCompressedArchiveWidget2 = _interopRequireDefault(_DownloadCompressedArchiveWidget);\n\t\n\tvar _DownloadCompressedArchiveStartButtonWidget = __webpack_require__(12);\n\t\n\tvar _DownloadCompressedArchiveStartButtonWidget2 = _interopRequireDefault(_DownloadCompressedArchiveStartButtonWidget);\n\t\n\tvar _DownloadCompressedArchiveDownloadLinkWidget = __webpack_require__(11);\n\t\n\tvar _DownloadCompressedArchiveDownloadLinkWidget2 = _interopRequireDefault(_DownloadCompressedArchiveDownloadLinkWidget);\n\t\n\tvar _GradingConfigurationWidget = __webpack_require__(15);\n\t\n\tvar _GradingConfigurationWidget2 = _interopRequireDefault(_GradingConfigurationWidget);\n\t\n\tvar _GradingConfigurationCustomTableWidget = __webpack_require__(14);\n\t\n\tvar _GradingConfigurationCustomTableWidget2 = _interopRequireDefault(_GradingConfigurationCustomTableWidget);\n\t\n\tvar _LoggerSingleton = __webpack_require__(3);\n\t\n\tvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\t\n\tvar _loglevel = __webpack_require__(4);\n\t\n\tvar _loglevel2 = _interopRequireDefault(_loglevel);\n\t\n\tvar _WidgetRegistrySingleton = __webpack_require__(26);\n\t\n\tvar _WidgetRegistrySingleton2 = _interopRequireDefault(_WidgetRegistrySingleton);\n\t\n\t__webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar logger = new _LoggerSingleton2.default();\n\tlogger.setDefaultLogLevel(_loglevel2.default.INFO);\n\t\n\tvar widgetRegistry = new _WidgetRegistrySingleton2.default();\n\twidgetRegistry.registerWidgetClass('devilry-download-compressed-archive', _DownloadCompressedArchiveWidget2.default);\n\twidgetRegistry.registerWidgetClass('devilry-download-compressed-archive-startbutton', _DownloadCompressedArchiveStartButtonWidget2.default);\n\twidgetRegistry.registerWidgetClass('devilry-download-compressed-archive-downloadlink', _DownloadCompressedArchiveDownloadLinkWidget2.default);\n\twidgetRegistry.registerWidgetClass('devilry-grading-configuration', _GradingConfigurationWidget2.default);\n\twidgetRegistry.registerWidgetClass('devilry-grading-configuration-custom-table', _GradingConfigurationCustomTableWidget2.default);\n\t\n\tfunction _onDomReady() {\n\t  // Initialize all widgets in document.body\n\t  widgetRegistry.initializeAllWidgetsWithinElement(document.body);\n\t}\n\t\n\tif (document.readyState != 'loading') {\n\t  _onDomReady();\n\t} else {\n\t  document.addEventListener('DOMContentLoaded', function () {\n\t    _onDomReady();\n\t  });\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SentSignalInfo = exports.ReceivedSignalInfo = exports.DuplicateReceiverNameForSignal = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _makeCustomError = __webpack_require__(5);\n\t\n\tvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\t\n\tvar _PrettyFormat = __webpack_require__(25);\n\t\n\tvar _PrettyFormat2 = _interopRequireDefault(_PrettyFormat);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Exception raised by {@link HttpCookies#getStrict} when the cookie is not found.\n\t *\n\t * @type {Error}\n\t */\n\tvar DuplicateReceiverNameForSignal = exports.DuplicateReceiverNameForSignal = (0, _makeCustomError2.default)('DuplicateReceiverNameForSignal');\n\t\n\t/**\n\t * Represents information about the received signal.\n\t *\n\t * An object of this class is sent to the ``callback``\n\t * of all signal receivers.\n\t *\n\t * The data sent by the signal is available in\n\t * {@link ReceivedSignalInfo.data}.\n\t */\n\t\n\tvar ReceivedSignalInfo = exports.ReceivedSignalInfo = function () {\n\t  function ReceivedSignalInfo(data, signalName, receiverName) {\n\t    _classCallCheck(this, ReceivedSignalInfo);\n\t\n\t    /**\n\t     * The data sent by {@link SignalHandlerSingleton#send}.\n\t     */\n\t    this.data = data;\n\t\n\t    /**\n\t     * The signal name.\n\t     *\n\t     * @type {string}\n\t     */\n\t    this.signalName = signalName;\n\t\n\t    /**\n\t     * The receiver name.\n\t     *\n\t     * @type {string}\n\t     */\n\t    this.receiverName = receiverName;\n\t  }\n\t\n\t  /**\n\t   * Get a string with information about the received signal.\n\t   * Includes signal name and receiver name.\n\t   *\n\t   * @returns {string}\n\t   */\n\t\n\t\n\t  _createClass(ReceivedSignalInfo, [{\n\t    key: \"toString\",\n\t    value: function toString() {\n\t      return \"ReceivedSignalInfo: signalName=\\\"\" + this.signalName + \"\\\" receiverName=\\\"\" + this.receiverName + \"\\\"\";\n\t    }\n\t\n\t    /**\n\t     * Get the data pretty formatted as a string.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: \"getPrettyFormattedData\",\n\t    value: function getPrettyFormattedData() {\n\t      return new _PrettyFormat2.default(this.data).toString(2);\n\t    }\n\t\n\t    /**\n\t     * Get a string with debug information about the received signal.\n\t     * Includes signal name, receiver name, and pretty formatted data.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: \"toDebugString\",\n\t    value: function toDebugString() {\n\t      return this.toString + \" data=\" + this.getPrettyFormattedData();\n\t    }\n\t  }]);\n\t\n\t  return ReceivedSignalInfo;\n\t}();\n\t\n\t/**\n\t * Private class used by {@link _SignalReceivers} to represent\n\t * a single receiver listening for a single signal.\n\t */\n\t\n\t\n\tvar _SignalReceiver = function () {\n\t  function _SignalReceiver(signal, name, callback) {\n\t    _classCallCheck(this, _SignalReceiver);\n\t\n\t    this.signal = signal;\n\t    this.name = name;\n\t    this.callback = callback;\n\t  }\n\t\n\t  /**\n\t   * Asynchronously trigger the receiver callback.\n\t   * @param data The signal data (the data argument provided for\n\t   *    {@link SignalHandlerSingleton#send}.\n\t   */\n\t\n\t\n\t  _createClass(_SignalReceiver, [{\n\t    key: \"trigger\",\n\t    value: function trigger(data) {\n\t      var _this = this;\n\t\n\t      setTimeout(function () {\n\t        _this.callback(new ReceivedSignalInfo(data, _this.signal.name, _this.name));\n\t      }, 0);\n\t    }\n\t  }]);\n\t\n\t  return _SignalReceiver;\n\t}();\n\t\n\t/**\n\t * Object containing debugging information about a sent\n\t * signal.\n\t */\n\t\n\t\n\tvar SentSignalInfo = exports.SentSignalInfo = function () {\n\t  function SentSignalInfo(signalName) {\n\t    _classCallCheck(this, SentSignalInfo);\n\t\n\t    /**\n\t     * The signal name.\n\t     *\n\t     * @type {string}\n\t     */\n\t    this.signalName = signalName;\n\t\n\t    /**\n\t     * Array of triggered receiver names.\n\t     *\n\t     * @type {Array}\n\t     */\n\t    this.triggeredReceiverNames = [];\n\t  }\n\t\n\t  _createClass(SentSignalInfo, [{\n\t    key: \"_addReceiverName\",\n\t    value: function _addReceiverName(receiverName) {\n\t      this.triggeredReceiverNames.push(receiverName);\n\t    }\n\t\n\t    /**\n\t     * Get a string representation of the sent signal info.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: \"toString\",\n\t    value: function toString() {\n\t      var receivers = this.triggeredReceiverNames.join(', ');\n\t      if (receivers === '') {\n\t        receivers = 'NO RECEIVERS';\n\t      }\n\t      return \"Signal: \" + this.signalName + \" was sent to: \" + receivers;\n\t    }\n\t  }]);\n\t\n\t  return SentSignalInfo;\n\t}();\n\t\n\t/**\n\t * Private class used by {@link SignalHandlerSingleton}\n\t * to represent all receivers for a single signal.\n\t */\n\t\n\t\n\tvar _SignalReceivers = function () {\n\t  function _SignalReceivers(name) {\n\t    _classCallCheck(this, _SignalReceivers);\n\t\n\t    this.name = name;\n\t    this.receiverMap = new Map();\n\t  }\n\t\n\t  /**\n\t   * Add a receiver.\n\t   *\n\t   * @throw DuplicateReceiverNameForSignal If the receiver is already registered for the signal.\n\t   */\n\t\n\t\n\t  _createClass(_SignalReceivers, [{\n\t    key: \"addReceiver\",\n\t    value: function addReceiver(receiverName, callback) {\n\t      if (this.receiverMap.has(receiverName)) {\n\t        throw new DuplicateReceiverNameForSignal(\"The \\\"\" + receiverName + \"\\\" receiver is already registered for the \\\"\" + this.name + \"\\\" signal\");\n\t      }\n\t      this.receiverMap.set(receiverName, new _SignalReceiver(this, receiverName, callback));\n\t    }\n\t\n\t    /**\n\t     * Remove a receiver.\n\t     *\n\t     * If the receiver is not registered for the signal,\n\t     * nothing happens.\n\t     */\n\t\n\t  }, {\n\t    key: \"removeReceiver\",\n\t    value: function removeReceiver(receiverName) {\n\t      if (this.receiverMap.has(receiverName)) {\n\t        this.receiverMap.delete(receiverName);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Check if we have a specific receiver for this signal.\n\t     */\n\t\n\t  }, {\n\t    key: \"hasReceiver\",\n\t    value: function hasReceiver(receiverName) {\n\t      return this.receiverMap.has(receiverName);\n\t    }\n\t\n\t    /**\n\t     * Get the number of receivers registered for the signal.\n\t     */\n\t\n\t  }, {\n\t    key: \"receiverCount\",\n\t    value: function receiverCount() {\n\t      return this.receiverMap.size;\n\t    }\n\t\n\t    /**\n\t     * Send the signal.\n\t     *\n\t     * @param data The data sent with the signal. Forwarded to\n\t     *      the signal receiver callback.\n\t     * @param {SentSignalInfo} info If this is provided, we add the\n\t     *      name of all receivers the signal was sent to.\n\t     */\n\t\n\t  }, {\n\t    key: \"send\",\n\t    value: function send(data, info) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = this.receiverMap.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var receiver = _step.value;\n\t\n\t          receiver.trigger(data);\n\t          if (info) {\n\t            info._addReceiverName(receiver.name);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return _SignalReceivers;\n\t}();\n\t\n\t/**\n\t * The instance of the {@link SignalHandlerSingleton}.\n\t */\n\t\n\t\n\tvar _instance = null;\n\t\n\t/**\n\t * Signal handler singleton for global communication.\n\t *\n\t * @example <caption>Basic example</caption>\n\t * let signalHandler = new SignalHandlerSingleton();\n\t * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MyReceiver', (receivedSignalInfo) => {\n\t *     console.log('Signal received. Data:', receivedSignalInfo.data);\n\t * });\n\t * signalHandler.send('myapp.mysignal', {'the': 'data'});\n\t *\n\t *\n\t * @example <caption>Recommended signal and receiver naming</caption>\n\t *\n\t * // In myapp/menu/MenuComponent.js\n\t * class MenuComponent {\n\t *     constructor(menuName) {\n\t *         this.menuName = menuName;\n\t *         let signalHandler = new SignalHandlerSingleton();\n\t *         signalHandler.addReceiver(\n\t *             `toggleMenu#${this.menuName}`,\n\t *             'myapp.menu.MenuComponent',\n\t *             (receivedSignalInfo) => {\n\t *                  this.toggle();\n\t *             }\n\t *         );\n\t *     }\n\t *     toggle() {\n\t *         // Toggle the menu\n\t *     }\n\t * }\n\t *\n\t * // In myotherapp/widgets/MenuToggle.js\n\t * class MenuToggle {\n\t *     constructor(menuName) {\n\t *         this.menuName = menuName;\n\t *     }\n\t *     toggle() {\n\t *         let signalHandler = new SignalHandlerSingleton();\n\t *         signalHandler.send(`toggleMenu#${this.menuName}`);\n\t *     }\n\t * }\n\t *\n\t * @example <caption>Multiple receivers</caption>\n\t * let signalHandler = new SignalHandlerSingleton();\n\t * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MyFirstReceiver', (receivedSignalInfo) => {\n\t *     console.log('Signal received by receiver 1!');\n\t * });\n\t * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MySecondReceiver', (receivedSignalInfo) => {\n\t *     console.log('Signal received by receiver 1!');\n\t * });\n\t * signalHandler.send('myapp.mysignal', {'the': 'data'});\n\t *\n\t *\n\t * @example <caption>Debugging</caption>\n\t * let signalHandler = new SignalHandlerSingleton();\n\t * signalHandler.addReceiver('mysignal', 'MyReceiver', (receivedSignalInfo) => {\n\t *     console.log('received signal:', receivedSignalInfo.toString());\n\t * });\n\t * signalHandler.send('myapp.mysignal', {'the': 'data'}, (sentSignalInfo) => {\n\t *     console.log('sent signal info:', sentSignalInfo.toString());\n\t * });\n\t *\n\t */\n\t\n\tvar SignalHandlerSingleton = function () {\n\t  function SignalHandlerSingleton() {\n\t    _classCallCheck(this, SignalHandlerSingleton);\n\t\n\t    if (!_instance) {\n\t      _instance = this;\n\t      this._signalMap = new Map();\n\t      this._receiverMap = new Map();\n\t    }\n\t    return _instance;\n\t  }\n\t\n\t  /**\n\t   * Remove all receivers for all signals.\n\t   *\n\t   * Useful for debugging and tests, but should not be\n\t   * used for production code.\n\t   */\n\t\n\t\n\t  _createClass(SignalHandlerSingleton, [{\n\t    key: \"clearAllReceiversForAllSignals\",\n\t    value: function clearAllReceiversForAllSignals() {\n\t      this._signalMap.clear();\n\t    }\n\t\n\t    /**\n\t     * Add a receiver for a specific signal.\n\t     *\n\t     * @param {string} signalName The name of the signal.\n\t     *      Typically something like ``toggleMenu`` or ``myapp.toggleMenu``.\n\t     *\n\t     *      What if we have multiple objects listening for this ``toggleMenu``\n\t     *      signal, and we only want to toggle a specific menu? You need\n\t     *      to ensure the signalName is unique for each menu. We recommend\n\t     *      that you do this by adding ``#<context>``. For example\n\t     *      ``toggleMenu#mainmenu``. This is shown in one of the examples\n\t     *      above.\n\t     * @param {string} receiverName The name of the receiver.\n\t     *      Must be unique for the signal.\n\t     *      We recommend that you use a very explicit name for your signals.\n\t     *      It should normally be the full path to the method or function receiving\n\t     *      the signal. So if you have a class named ``myapp/menu/MenuComponent.js``\n\t     *      that receives a signal to toggle the menu, the receiverName should be\n\t     *      ``myapp.menu.MenuComponent``.\n\t     * @param callback The callback to call when the signal is sent.\n\t     *      The callback is called with a single argument - a\n\t     *      {@link ReceivedSignalInfo} object.\n\t     */\n\t\n\t  }, {\n\t    key: \"addReceiver\",\n\t    value: function addReceiver(signalName, receiverName, callback) {\n\t      if (typeof callback === 'undefined') {\n\t        throw new TypeError('The callback argument for addReceiver() is required.');\n\t      }\n\t      if (!this._signalMap.has(signalName)) {\n\t        this._signalMap.set(signalName, new _SignalReceivers(signalName));\n\t      }\n\t      if (this._receiverMap.has(receiverName)) {\n\t        this._receiverMap.get(receiverName).add(signalName);\n\t      } else {\n\t        this._receiverMap.set(receiverName, new Set([signalName]));\n\t      }\n\t      var signal = this._signalMap.get(signalName);\n\t      signal.addReceiver(receiverName, callback);\n\t    }\n\t\n\t    /**\n\t     * Remove a receiver for a signal added with {@link SignalHandlerSingleton#addReceiver}.\n\t     *\n\t     * @param {string} signalName The name of the signal.\n\t     * @param {string} receiverName The name of the receiver.\n\t     */\n\t\n\t  }, {\n\t    key: \"removeReceiver\",\n\t    value: function removeReceiver(signalName, receiverName) {\n\t      if (this._signalMap.has(signalName)) {\n\t        var signal = this._signalMap.get(signalName);\n\t        signal.removeReceiver(receiverName);\n\t        if (signal.receiverCount() == 0) {\n\t          this._signalMap.delete(signalName);\n\t        }\n\t        var receiverSignalSet = this._receiverMap.get(receiverName);\n\t        if (receiverSignalSet != undefined) {\n\t          if (receiverSignalSet.has(signalName)) {\n\t            receiverSignalSet.delete(signalName);\n\t          }\n\t          if (receiverSignalSet.size == 0) {\n\t            this._receiverMap.delete(receiverName);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Remove all signals registered for a receiver.\n\t     *\n\t     * @param {string} receiverName The name of the receiver.\n\t     */\n\t\n\t  }, {\n\t    key: \"removeAllSignalsFromReceiver\",\n\t    value: function removeAllSignalsFromReceiver(receiverName) {\n\t      if (this._receiverMap.has(receiverName)) {\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t          for (var _iterator2 = this._receiverMap.get(receiverName)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var signalName = _step2.value;\n\t\n\t            this.removeReceiver(signalName, receiverName);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t              _iterator2.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError2) {\n\t              throw _iteratorError2;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Check if a signal has a specific receiver.\n\t     *\n\t     * @param {string} signalName The name of the signal.\n\t     * @param {string} receiverName The name of the receiver.\n\t     */\n\t\n\t  }, {\n\t    key: \"hasReceiver\",\n\t    value: function hasReceiver(signalName, receiverName) {\n\t      if (this._signalMap.has(signalName)) {\n\t        var signal = this._signalMap.get(signalName);\n\t        return signal.hasReceiver(receiverName);\n\t      } else {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Remove all receivers for a specific signal.\n\t     *\n\t     * @param {string} signalName The name of the signal to remove.\n\t     */\n\t\n\t  }, {\n\t    key: \"clearAllReceiversForSignal\",\n\t    value: function clearAllReceiversForSignal(signalName) {\n\t      if (this._signalMap.has(signalName)) {\n\t        this._signalMap.delete(signalName);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Send a signal.\n\t     *\n\t     * @param {string} signalName The name of the signal to send.\n\t     * @param data Data to send to the callback of all receivers registered\n\t     *      for the signal.\n\t     * @param infoCallback An optional callback that receives information\n\t     *      about the signal. Useful for debugging what actually received\n\t     *      the signal. The ``infoCallback`` is called with a single\n\t     *      argument - a {@link SentSignalInfo} object.\n\t     */\n\t\n\t  }, {\n\t    key: \"send\",\n\t    value: function send(signalName, data, infoCallback) {\n\t      var info = null;\n\t      if (infoCallback) {\n\t        info = new SentSignalInfo(signalName);\n\t      }\n\t      if (this._signalMap.has(signalName)) {\n\t        var signal = this._signalMap.get(signalName);\n\t        signal.send(data, info);\n\t      }\n\t      if (infoCallback) {\n\t        infoCallback(info);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return SignalHandlerSingleton;\n\t}();\n\t\n\texports.default = SignalHandlerSingleton;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _ObjectManager = __webpack_require__(24);\n\t\n\tvar _ObjectManager2 = _interopRequireDefault(_ObjectManager);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Base class for widgets for {@link WidgetRegistrySingleton}.\n\t *\n\t * @example <caption>Create a very simple widget</caption>\n\t * export default class OpenMenuWidget extends AbstractWidget {\n\t *     constructor(element, widgetInstanceId) {\n\t *          super(element, widgetInstanceId);\n\t *          this._onClickBound = (...args) => {\n\t *              this._onClick(...args);\n\t *          };\n\t *          this.element.addEventListener('click', this._onClickBound);\n\t *     }\n\t *\n\t *     _onClick = (e) => {\n\t *          e.preventDefault();\n\t *          console.log('I should have opened the menu here');\n\t *     }\n\t *\n\t *     destroy() {\n\t *          this.element.removeEventListener('click', this._onClickBound);\n\t *     }\n\t * }\n\t *\n\t * @example <caption>Use the widget</caption>\n\t * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\">\n\t *     Open menu\n\t * </button>\n\t *\n\t * @example <caption>A widget with configuration input</caption>\n\t * export default class OpenMenuWidget extends AbstractWidget {\n\t *     constructor(element) {\n\t *          super(element);\n\t *          this._onClickBound = (...args) => {\n\t *              this._onClick(...args);\n\t *          };\n\t *          this.element.addEventListener('click', this._onClickBound);\n\t *     }\n\t *\n\t *     getDefaultConfig() {\n\t *          return {\n\t *              'menuId': 'id_main_menu';\n\t *          }\n\t *     }\n\t *\n\t *     _onClick = (e) => {\n\t *          e.preventDefault();\n\t *          console.log(`I should have opened the menu with id=\"${this.config.menuId}\" here`);\n\t *     }\n\t *\n\t *     destroy() {\n\t *          this.element.removeEventListener('click', this._onClickBound);\n\t *     }\n\t * }\n\t *\n\t * @example <caption>Use the widget with config</caption>\n\t * <!-- Using the default config -->\n\t * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\">\n\t *     Open the main menu\n\t * </button>\n\t * <!-- Override the menuId config -->\n\t * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\"\n\t *          data-ievv-jsbase-widget-config='{\"menuId\": \"id_the_other_menu\"}'>\n\t *     Open the other menu\n\t * </button>\n\t */\n\tvar AbstractWidget = function () {\n\t\n\t    /**\n\t     * @param {Element} element The element to load the widget in.\n\t     * @param {string} widgetInstanceId The unique ID of this widget instance\n\t     *  in the widget registry.\n\t     */\n\t    function AbstractWidget(element, widgetInstanceId) {\n\t        _classCallCheck(this, AbstractWidget);\n\t\n\t        this.element = element;\n\t        this.widgetInstanceId = widgetInstanceId;\n\t    }\n\t\n\t    /**\n\t     * Get the default config.\n\t     *\n\t     * Any config supplied via the ``data-ievv-jsbase-widget-config``\n\t     * attribute is merged into this object.\n\t     *\n\t     * @returns {Object}\n\t     */\n\t\n\t\n\t    _createClass(AbstractWidget, [{\n\t        key: 'getDefaultConfig',\n\t        value: function getDefaultConfig() {\n\t            return {};\n\t        }\n\t    }, {\n\t        key: '_parseConfig',\n\t        value: function _parseConfig() {\n\t            var attributeName = 'data-ievv-jsbase-widget-config';\n\t            if (this.element.hasAttribute(attributeName)) {\n\t                var rawConfig = this.element.getAttribute(attributeName);\n\t                var config = JSON.parse(rawConfig);\n\t                return config;\n\t            }\n\t            return {};\n\t        }\n\t\n\t        /**\n\t         * Get the config.\n\t         *\n\t         * JSON decodes any config supplied via the ``data-ievv-jsbase-widget-config``\n\t         * attribute of the Element and {@link AbstractWidget#getDefaultConfig}\n\t         * into a config object. The result of this is cached, so multiple calls\n\t         * to this property will only result in the config object being created\n\t         * once.\n\t         *\n\t         * @throws {SyntaxError} If the ``data-ievv-jsbase-widget-config`` attribute\n\t         *      does not contain valid JSON data.\n\t         *      Not thrown if the element does not have a\n\t         *      ``data-ievv-jsbase-widget-config`` attribute.\n\t         *\n\t         * @returns {Object} The config object. This will be an empty object\n\t         *      if we have no {@link AbstractWidget#getDefaultConfig} and\n\t         *      no config is supplied via the ``data-ievv-jsbase-widget-config``\n\t         *      attribute of the Element.\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t\n\t\n\t        /**\n\t         * Destroy the widget.\n\t         *\n\t         * You should override this in subclasses if your\n\t         * widget sets up something that will work incorrectly\n\t         * if the widget disappears or is re-created (such as event\n\t         * listeners and signals).\n\t         */\n\t        value: function destroy() {}\n\t\n\t        /**\n\t         * If you override {@link AbstractWidget#afterInitializeAllWidgets},\n\t         * you must override this to return ``true``.\n\t         *\n\t         * @returns {boolean} Should return ``true`` if you want the widget registry\n\t         *   to call {@link AbstractWidget#afterInitializeAllWidgets}.\n\t         */\n\t\n\t    }, {\n\t        key: 'useAfterInitializeAllWidgets',\n\t        value: function useAfterInitializeAllWidgets() {\n\t            return false;\n\t        }\n\t\n\t        /**\n\t         * Called after all the widgets within the element that\n\t         * {@link WidgetRegistrySingleton#initializeAllWidgetsWithinElement}\n\t         * was called with is initialized.\n\t         *\n\t         * For performance reasons, this is only called if\n\t         * {@link AbstractWidget#useAfterInitializeAllWidgets} returns\n\t         * ``true``, so you must also override that method if you override\n\t         * this method.\n\t         *\n\t         * This is useful if you need to do something after other\n\t         * widgets have finished initializing, which may be the case\n\t         * for loosely coupled widgets.\n\t         *\n\t         * Does nothing by default.\n\t         */\n\t\n\t    }, {\n\t        key: 'afterInitializeAllWidgets',\n\t        value: function afterInitializeAllWidgets() {}\n\t    }, {\n\t        key: 'config',\n\t        get: function get() {\n\t            if (typeof this._config === 'undefined') {\n\t                var parsedConfig = this._parseConfig();\n\t                this._config = _ObjectManager2.default.mergeAndClone(this.getDefaultConfig(), parsedConfig);\n\t            }\n\t            return this._config;\n\t        }\n\t    }]);\n\t\n\t    return AbstractWidget;\n\t}();\n\t\n\texports.default = AbstractWidget;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Logger = __webpack_require__(23);\n\t\n\tvar _Logger2 = _interopRequireDefault(_Logger);\n\t\n\tvar _loglevel = __webpack_require__(4);\n\t\n\tvar _loglevel2 = _interopRequireDefault(_loglevel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _instance = null;\n\t\n\t/**\n\t * A logging system.\n\t *\n\t * @example <caption>Create and use a logger</caption>\n\t * import LoggerSingleton from 'ievv_jsbase/log/LoggerSingleton';\n\t * let mylogger = new LoggerSingleton().loggerSingleton.getLogger('myproject.MyClass');\n\t * mylogger.debug('Hello debug world');\n\t * mylogger.info('Hello info world');\n\t * mylogger.warning('Hello warning world');\n\t * mylogger.error('Hello error world');\n\t *\n\t * @example <caption>Set a default loglevel for all loggers</caption>\n\t * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n\t * new LoggerSingleton().setDefaultLogLevel(LOGLEVEL.DEBUG);\n\t *\n\t * @example <caption>Set a custom loglevel for a single logger</caption>\n\t * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n\t * new LoggerSingleton().getLogger('mylogger').setLoglevel(LOGLEVEL.DEBUG);\n\t */\n\t\n\tvar LoggerSingleton = function () {\n\t    /**\n\t     * Get an instance of the singleton.\n\t     *\n\t     * The first time this is called, we create a new instance.\n\t     * For all subsequent calls, we return the instance that was\n\t     * created on the first call.\n\t     */\n\t    function LoggerSingleton() {\n\t        _classCallCheck(this, LoggerSingleton);\n\t\n\t        if (!_instance) {\n\t            _instance = this;\n\t        }\n\t        this._loggerMap = new Map();\n\t        this.reset();\n\t        return _instance;\n\t    }\n\t\n\t    /**\n\t     * Get the number of loggers registered using\n\t     * {@link getLogger}.\n\t     *\n\t     * @returns {number} The number of loggers.\n\t     */\n\t\n\t\n\t    _createClass(LoggerSingleton, [{\n\t        key: \"getLoggerCount\",\n\t        value: function getLoggerCount() {\n\t            return this._loggerMap.size;\n\t        }\n\t\n\t        /**\n\t         * Reset to default log level, and clear all\n\t         * custom loggers.\n\t         */\n\t\n\t    }, {\n\t        key: \"reset\",\n\t        value: function reset() {\n\t            this._logLevel = _loglevel2.default.WARNING;\n\t            this._loggerMap.clear();\n\t        }\n\t\n\t        /**\n\t         * Get the default log level.\n\t         *\n\t         * Defaults to {@link LogLevels#WARNING} if not overridden\n\t         * with {@LoggerSingleton#setDefaultLogLevel}.\n\t         *\n\t         * @returns {int} One of the loglevels defined in {@link LogLevels}\n\t         */\n\t\n\t    }, {\n\t        key: \"getDefaultLogLevel\",\n\t        value: function getDefaultLogLevel() {\n\t            return this._logLevel;\n\t        }\n\t\n\t        /**\n\t         * Set the default loglevel.\n\t         *\n\t         * All loggers use this by default unless\n\t         * you override their loglevel.\n\t         *\n\t         * @example <caption>Override loglevel of a specific logger</caption>\n\t         * import LoggerSingleton from 'ievv_jsbase/log/LoggerSingleton';\n\t         * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n\t         * let loggerSingleton = new LoggerSingleton();\n\t         * loggerSingleton.getLogger('mylogger').setLogLevel(LOGLEVEL.DEBUG);\n\t         *\n\t         * @param logLevel The log level. Must be one of the loglevels\n\t         *      defined in {@link LogLevels}.\n\t         * @throws {RangeError} if {@link LogLevels#validateLogLevel} fails.\n\t         */\n\t\n\t    }, {\n\t        key: \"setDefaultLogLevel\",\n\t        value: function setDefaultLogLevel(logLevel) {\n\t            _loglevel2.default.validateLogLevel(logLevel);\n\t            this._logLevel = logLevel;\n\t        }\n\t\n\t        /**\n\t         * Get a logger.\n\t         *\n\t         * @param {string} name A name for the logger. Should be a unique name,\n\t         *      so typically the full import path of the class/function using\n\t         *      the logger.\n\t         * @returns {Logger}\n\t         */\n\t\n\t    }, {\n\t        key: \"getLogger\",\n\t        value: function getLogger(name) {\n\t            if (!this._loggerMap.has(name)) {\n\t                this._loggerMap.set(name, new _Logger2.default(name, this));\n\t            }\n\t            return this._loggerMap.get(name);\n\t        }\n\t\n\t        /**\n\t         * Get the names of all the registered loggers.\n\t         *\n\t         * @returns {Array} Sorted array with the same of the loggers.\n\t         */\n\t\n\t    }, {\n\t        key: \"getLoggerNameArray\",\n\t        value: function getLoggerNameArray() {\n\t            var loggerNames = Array.from(this._loggerMap.keys());\n\t            loggerNames.sort();\n\t            return loggerNames;\n\t        }\n\t\n\t        /**\n\t         * Get textual name for the default log level.\n\t         *\n\t         * Intended for debugging. The format of the string may change.\n\t         *\n\t         * @returns {string}\n\t         */\n\t\n\t    }, {\n\t        key: \"getTextualNameForDefaultLogLevel\",\n\t        value: function getTextualNameForDefaultLogLevel() {\n\t            return _loglevel2.default.getTextualNameForLogLevel(this.getDefaultLogLevel());\n\t        }\n\t\n\t        /**\n\t         * Get a string that summarize information about all the\n\t         * loggers. The string has a list of loglevels with\n\t         * their loglevel. Perfect for debugging.\n\t         *\n\t         * Intended for debugging. The format of the string may change.\n\t         *\n\t         * @returns {string}\n\t         */\n\t\n\t    }, {\n\t        key: \"getDebugInfoString\",\n\t        value: function getDebugInfoString() {\n\t            var loggerInfoString = \"Default logLevel: \" + (this.getTextualNameForDefaultLogLevel() + \"\\n\") + \"Loggers:\\n\";\n\t            if (this.getLoggerCount() === 0) {\n\t                loggerInfoString += '(no loggers)\\n';\n\t            } else {\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = this.getLoggerNameArray()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var loggerName = _step.value;\n\t\n\t                        var logger = this.getLogger(loggerName);\n\t                        loggerInfoString += \" - \" + logger.getDebugInfoString() + \"\\n\";\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return loggerInfoString;\n\t        }\n\t    }]);\n\t\n\t    return LoggerSingleton;\n\t}();\n\t\n\texports.default = LoggerSingleton;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Defines valid log levels.\n\t *\n\t * Not used directly, but instead via the LOGLEVEL\n\t * constant exported as default by this module.\n\t *\n\t * @example\n\t * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n\t * console.log('The debug loglevel is:', LOGLEVEL.DEBUG);\n\t * LOGLEVEL.validateLogLevel(10);\n\t */\n\tvar LogLevels = exports.LogLevels = function () {\n\t    function LogLevels() {\n\t        _classCallCheck(this, LogLevels);\n\t\n\t        this._prettyLogLevelNames = {};\n\t        this._prettyLogLevelNames[this.DEBUG] = 'DEBUG';\n\t        this._prettyLogLevelNames[this.INFO] = 'INFO';\n\t        this._prettyLogLevelNames[this.WARNING] = 'WARNING';\n\t        this._prettyLogLevelNames[this.ERROR] = 'ERROR';\n\t        this._prettyLogLevelNames[this.SILENT] = 'SILENT';\n\t    }\n\t\n\t    /**\n\t     * Get the number for log level DEBUG.\n\t     * @returns {number}\n\t     */\n\t\n\t\n\t    _createClass(LogLevels, [{\n\t        key: 'validateLogLevel',\n\t\n\t\n\t        /**\n\t         * Validate a log level.\n\t         *\n\t         * Should be used by all functions/methods that set a log level.\n\t         *\n\t         * @param logLevel The loglevel.\n\t         * @throws {RangeError} If ``logLevel`` is not one\n\t         *   of:\n\t         *\n\t         *   - {@link LogLevels#DEBUG}\n\t         *   - {@link LogLevels#INFO}\n\t         *   - {@link LogLevels#WARNING}\n\t         *   - {@link LogLevels#ERROR}\n\t         *   - {@link LogLevels#SILENT}\n\t         */\n\t        value: function validateLogLevel(logLevel) {\n\t            if (logLevel > this.DEBUG || logLevel < this.SILENT) {\n\t                throw new RangeError('Invalid log level: ' + logLevel + ', must be between ' + (this.SILENT + ' (SILENT) and ' + this.DEBUG + ' (DEBUG)'));\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get the textual name for a log level.\n\t         *\n\t         * @param {number} logLevel The log level to get a textual name for.\n\t         * @returns {string}\n\t         *\n\t         * @example\n\t         * const infoText = LOGLEVEL.getTextualNameForLogLevel(LOGLEVEL.INFO);\n\t         * // infoText === 'INFO'\n\t         */\n\t\n\t    }, {\n\t        key: 'getTextualNameForLogLevel',\n\t        value: function getTextualNameForLogLevel(logLevel) {\n\t            return this._prettyLogLevelNames[logLevel];\n\t        }\n\t    }, {\n\t        key: 'DEBUG',\n\t        get: function get() {\n\t            return 4;\n\t        }\n\t\n\t        /**\n\t         * Get the number for log level INFO.\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'INFO',\n\t        get: function get() {\n\t            return 3;\n\t        }\n\t\n\t        /**\n\t         * Get the number for log level WARNING.\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'WARNING',\n\t        get: function get() {\n\t            return 2;\n\t        }\n\t\n\t        /**\n\t         * Get the number for log level ERROR.\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'ERROR',\n\t        get: function get() {\n\t            return 1;\n\t        }\n\t\n\t        /**\n\t         * Get the number for log level SILENT.\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'SILENT',\n\t        get: function get() {\n\t            return 0;\n\t        }\n\t    }]);\n\t\n\t    return LogLevels;\n\t}();\n\t\n\tvar LOGLEVEL = new LogLevels();\n\texports.default = LOGLEVEL;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = makeCustomError;\n\t/**\n\t * Make a custom error \"class\".\n\t *\n\t * Makes an old style prototype based error class.\n\t *\n\t * @example <caption>Typical usage</caption>\n\t * // In myerrors.js\n\t * export let MyCustomError = makeCustomError('MyCustomError');\n\t *\n\t * // Using the error\n\t * import {MyCustomError} from './myerrors';\n\t * throw new MyCustomError('The message');\n\t *\n\t * @example <caption>Throwing the error - complete example</caption>\n\t * try {\n\t *     throw new MyCustomError('The message', {\n\t *          code: 'stuff_happened',\n\t *          details: {\n\t *              size: 10\n\t *          }\n\t *     });\n\t * } catch(e) {\n\t *     if(e instanceof MyCustomError) {\n\t *         console.error(`${e.toString()} -- Code: ${e.code}. Size: ${e.details.size}`);\n\t *     }\n\t * }\n\t *\n\t * @example <caption>Define an error that extends Error</caption>\n\t * let NotFoundError = makeCustomError('NotFoundError');\n\t * // error instanceof NotFoundError === true\n\t * // error instanceof Error === true\n\t *\n\t * @example <caption>Define an error that extends a built in error</caption>\n\t * let MyValueError = makeCustomError('MyValueError', TypeError);\n\t * let error = new MyValueError();\n\t * // error instanceof MyValueError === true\n\t * // error instanceof TypeError === true\n\t * // error instanceof Error === true\n\t *\n\t * @example <caption>Define an error that extends another custom error</caption>\n\t * let MySuperError = makeCustomError('MySuperError', TypeError);\n\t * let MySubError = makeCustomError('MySubError', MySuperError);\n\t * let error = new MySubError();\n\t * // error instanceof MySubError === true\n\t * // error instanceof MySuperError === true\n\t * // error instanceof TypeError === true\n\t * // error instanceof Error === true\n\t *\n\t * @param {string} name The name of the error class.\n\t * @param {Error} extendsError An optional Error to extend.\n\t *      Defaults to {@link Error}. Can be a built in error\n\t *      or a custom error created by this function.\n\t * @returns {Error} The created error class.\n\t */\n\tfunction makeCustomError(name, extendsError) {\n\t    extendsError = extendsError || Error;\n\t    var CustomError = function CustomError(message, properties) {\n\t        this.message = message;\n\t        var last_part = new extendsError().stack.match(/[^\\s]+$/);\n\t        this.stack = this.name + \" at \" + last_part;\n\t        if (typeof properties !== 'undefined') {\n\t            Object.assign(this, properties);\n\t        }\n\t    };\n\t    Object.setPrototypeOf(CustomError, extendsError);\n\t    CustomError.prototype = Object.create(extendsError.prototype);\n\t    CustomError.prototype.constructor = CustomError;\n\t    CustomError.prototype.message = \"\";\n\t    CustomError.prototype.name = name;\n\t    return CustomError;\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * HTML parser.\n\t *\n\t * Takes a HTML string, creates a temporary DOM document,\n\t * sets the HTML as innerHTML of the body of the temporary\n\t * document, and provides methods for extracting elements\n\t * from the temporary document.\n\t *\n\t * @example <caption>Parse a single html element and get the Element</caption>\n\t * let htmlParser = new HtmlParser('<div>Test</div>');\n\t * let divElement = htmlParser.firstRootElement;\n\t *\n\t * @example <caption>Parse multiple html elements</caption>\n\t * let htmlParser = new HtmlParser('<div>Test</div><p>Test 2</p>');\n\t * let elements = htmlParser.rootElements;\n\t *\n\t * @example <caption>Parse multiple html elements and query them</caption>\n\t * let htmlParser = new HtmlParser('<div>Test</div><p>Test 2</p>');\n\t * let elements = htmlParser.rootElements;\n\t *\n\t * @example <caption>Parse multiple html elements and query them</caption>\n\t * let htmlParser = new HtmlParser('<p>Test P 1</p><div>Test DIV</div><p>Test P 2</p>');\n\t * let divElement = htmlParser.querySelector('div');\n\t * let pElements = htmlParser.querySelectorAll('p');\n\t *\n\t * @example <caption>Parse a full HTML document</caption>\n\t * let htmlParser = new HtmlParser('<html><body><p>Test</p></body></html>');\n\t * let pElement = htmlParser.firstRootElement;\n\t */\n\tvar HtmlParser = function () {\n\t    /**\n\t     *\n\t     * @param {string} htmlString The HTML string to parse.\n\t     */\n\t    function HtmlParser(htmlString) {\n\t        _classCallCheck(this, HtmlParser);\n\t\n\t        this._tempDocumentBody = this._parseHtml(htmlString);\n\t    }\n\t\n\t    _createClass(HtmlParser, [{\n\t        key: \"_parseHtml\",\n\t        value: function _parseHtml(htmlString) {\n\t            var tempDocument = document.implementation.createHTMLDocument();\n\t            tempDocument.body.innerHTML = htmlString;\n\t            return tempDocument.body;\n\t        }\n\t\n\t        /**\n\t         * Get the root elements of the parsed document.\n\t         *\n\t         * @returns {HTMLCollection}\n\t         */\n\t\n\t    }, {\n\t        key: \"querySelector\",\n\t\n\t\n\t        /**\n\t         * Query the body element of the parsed document\n\t         * using Element.querySelector.\n\t         *\n\t         * @param {string} query The query.\n\t         * @returns {null|Element}\n\t         */\n\t        value: function querySelector(query) {\n\t            return this._tempDocumentBody.querySelector(query);\n\t        }\n\t\n\t        /**\n\t         * Query the body element of the parsed document\n\t         * using Element.querySelectorAll.\n\t         *\n\t         * @param {string} query The query.\n\t         * @returns {NodeList}\n\t         */\n\t\n\t    }, {\n\t        key: \"querySelectorAll\",\n\t        value: function querySelectorAll(query) {\n\t            return Array.from(this._tempDocumentBody.querySelectorAll(query));\n\t        }\n\t    }, {\n\t        key: \"rootElements\",\n\t        get: function get() {\n\t            return this._tempDocumentBody.children;\n\t        }\n\t\n\t        /**\n\t         * Get the first root element of the parsed document.\n\t         *\n\t         * @returns {null|Element}\n\t         */\n\t\n\t    }, {\n\t        key: \"firstRootElement\",\n\t        get: function get() {\n\t            return this.rootElements[0];\n\t        }\n\t    }]);\n\t\n\t    return HtmlParser;\n\t}();\n\t\n\texports.default = HtmlParser;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _HttpJsonResponse = __webpack_require__(18);\n\t\n\tvar _HttpJsonResponse2 = _interopRequireDefault(_HttpJsonResponse);\n\t\n\tvar _HttpRequest2 = __webpack_require__(19);\n\t\n\tvar _HttpRequest3 = _interopRequireDefault(_HttpRequest2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Extends HttpRequest with transparent JSON request/response handling.\n\t */\n\tvar JsonHttpRequest = function (_HttpRequest) {\n\t  _inherits(JsonHttpRequest, _HttpRequest);\n\t\n\t  function JsonHttpRequest() {\n\t    _classCallCheck(this, JsonHttpRequest);\n\t\n\t    return _possibleConstructorReturn(this, (JsonHttpRequest.__proto__ || Object.getPrototypeOf(JsonHttpRequest)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(JsonHttpRequest, [{\n\t    key: \"makeRequestBody\",\n\t\n\t    /**\n\t     * Overridden to automatically convert request data to JSON.\n\t     */\n\t    value: function makeRequestBody(data) {\n\t      return JSON.stringify(data);\n\t    }\n\t\n\t    /**\n\t     * Overridden to return the response as a\n\t     * {@link HttpJsonResponse} instead if a HttpResponse.\n\t     *\n\t     * @returns {HttpJsonResponse}\n\t     */\n\t\n\t  }, {\n\t    key: \"makeResponse\",\n\t    value: function makeResponse() {\n\t      return new _HttpJsonResponse2.default(this.request);\n\t    }\n\t\n\t    /**\n\t     * Overridden to ensure we send the correct content-type header for\n\t     * json requests.\n\t     */\n\t\n\t  }, {\n\t    key: \"setDefaultRequestHeaders\",\n\t    value: function setDefaultRequestHeaders(method) {\n\t      _get(JsonHttpRequest.prototype.__proto__ || Object.getPrototypeOf(JsonHttpRequest.prototype), \"setDefaultRequestHeaders\", this).call(this, method);\n\t      this.setRequestHeader('Accept', 'application/json');\n\t      this.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n\t    }\n\t  }]);\n\t\n\t  return JsonHttpRequest;\n\t}(_HttpRequest3.default);\n\t\n\texports.default = JsonHttpRequest;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.HttpResponseError = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _makeCustomError = __webpack_require__(5);\n\t\n\tvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Error class created by {@link HttpResponse#toError}.\n\t *\n\t * @type {Error}\n\t */\n\tvar HttpResponseError = exports.HttpResponseError = (0, _makeCustomError2.default)('HttpResponseError');\n\t\n\t/**\n\t * HTTP response.\n\t *\n\t * Wraps a XMLHttpRequest to make it easier to get\n\t * information about the response from the server.\n\t */\n\t\n\tvar HttpResponse = function () {\n\t    /**\n\t     *\n\t     * @param request A XMLHttpRequest object.\n\t     */\n\t    function HttpResponse(request) {\n\t        _classCallCheck(this, HttpResponse);\n\t\n\t        this.request = request;\n\t    }\n\t\n\t    /**\n\t     * Returns ``true`` if {@link HttpResponse#status} is\n\t     * 200 or larger and less than 300.\n\t     */\n\t\n\t\n\t    _createClass(HttpResponse, [{\n\t        key: \"isSuccess\",\n\t        value: function isSuccess() {\n\t            return this.status >= 200 && this.status < 300;\n\t        }\n\t\n\t        /**\n\t         * Returns ``true`` if {@link HttpResponse#status} is\n\t         * 300 or larger and less than 400.\n\t         */\n\t\n\t    }, {\n\t        key: \"isRedirect\",\n\t        value: function isRedirect() {\n\t            return this.status >= 300 && this.status < 400;\n\t        }\n\t\n\t        /**\n\t         * Returns ``true`` if {@link HttpResponse#status} is\n\t         * 400 or larger and less than 500.\n\t         */\n\t\n\t    }, {\n\t        key: \"isClientError\",\n\t        value: function isClientError() {\n\t            return this.status >= 400 && this.status < 500;\n\t        }\n\t\n\t        /**\n\t         * Returns ``true`` if {@link HttpResponse#status} is\n\t         * 500 or larger.\n\t         */\n\t\n\t    }, {\n\t        key: \"isServerError\",\n\t        value: function isServerError() {\n\t            return this.status >= 500;\n\t        }\n\t\n\t        /**\n\t         * Returns ``true`` if {@link HttpResponse#status} is 0.\n\t         * Assuming the XMLHttpRequest was actually sent, this\n\t         * means that the connection was refused.\n\t         */\n\t\n\t    }, {\n\t        key: \"isConnectionRefused\",\n\t        value: function isConnectionRefused() {\n\t            return this.status === 0;\n\t        }\n\t\n\t        /**\n\t         * Get the status code of the response (the status attribute of the XMLHttpRequest).\n\t         */\n\t\n\t    }, {\n\t        key: \"responseHeaderToString\",\n\t\n\t\n\t        /**\n\t         * Get the response header as string.\n\t         */\n\t        value: function responseHeaderToString() {\n\t            if (this.connectionRefused) {\n\t                return \"ERROR: Connection refused\";\n\t            } else {\n\t                return \"HTTP \" + this.status + \"\\n\" + this.request.getAllResponseHeaders();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Create a {@link HttpResponseError} from this HttpResponse.\n\t         *\n\t         * @returns {HttpResponseError} An HttpResponseError with this HttpResponse\n\t         *      as the ``response`` property.\n\t         */\n\t\n\t    }, {\n\t        key: \"toError\",\n\t        value: function toError() {\n\t            return new HttpResponseError(this.toString(), {\n\t                response: this\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Get {@link HttpResponse#body} pretty formatted.\n\t         *\n\t         * By default, this just returns {@link HttpResponse#body}\n\t         * but subclasses can override this to prettify the body\n\t         * if they know the output format of the body.\n\t         */\n\t\n\t    }, {\n\t        key: \"getPrettyfiedBody\",\n\t        value: function getPrettyfiedBody() {\n\t            return this.body;\n\t        }\n\t\n\t        /**\n\t         * Format as a string suitable for debugging.\n\t         */\n\t\n\t    }, {\n\t        key: \"toString\",\n\t        value: function toString() {\n\t            return this.responseHeaderToString() + \"\\n\\n\" + this.getPrettyfiedBody();\n\t        }\n\t    }, {\n\t        key: \"status\",\n\t        get: function get() {\n\t            return this.request.status;\n\t        }\n\t\n\t        /**\n\t         * Get the response body (the responseText attribute of the XMLHttpRequest).\n\t         */\n\t\n\t    }, {\n\t        key: \"body\",\n\t        get: function get() {\n\t            return this.request.responseText;\n\t        }\n\t    }]);\n\t\n\t    return HttpResponse;\n\t}();\n\t\n\texports.default = HttpResponse;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.default = typeDetect;\n\t/**\n\t * Detect the type of an object and return the\n\t * result as a string.\n\t *\n\t * Handles the following types:\n\t *\n\t * - null  (returned as ``\"null\"``).\n\t * - undefined  (returned as ``\"undefined\"``).\n\t * - Number  (returned as ``\"number\"``).\n\t * - Boolean  (returned as ``\"boolean\"``).\n\t * - String  (returned as ``\"string\"``).\n\t * - Array  (returned as ``\"array\"``).\n\t * - Map  (returned as ``\"map\"``).\n\t * - Set  (returned as ``\"set\"``).\n\t * - Function  (returned as ``\"function\"``).\n\t * - Object  (returned as ``\"object\"``).\n\t *\n\t * We do not handle classes - they are returned as ``\"function\"``.\n\t * We could handle classes, but for Babel classes that will require\n\t * a fairly expensive and error prone regex.\n\t *\n\t * @param obj An object to detect the type for.\n\t * @returns {string}\n\t */\n\tfunction typeDetect(obj) {\n\t    if (obj === null) {\n\t        return 'null';\n\t    }\n\t    var typeOf = typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n\t    if (typeOf === 'undefined') {\n\t        return 'undefined';\n\t    }\n\t    if (typeOf === 'number') {\n\t        return 'number';\n\t    }\n\t    if (typeOf === 'boolean') {\n\t        return 'boolean';\n\t    }\n\t    if (typeOf === 'string') {\n\t        return 'string';\n\t    }\n\t    if (typeOf === 'function') {\n\t        return 'function';\n\t    }\n\t    if (Array.isArray(obj)) {\n\t        return 'array';\n\t    }\n\t    if (obj instanceof Map) {\n\t        return 'map';\n\t    }\n\t    if (obj instanceof Set) {\n\t        return 'set';\n\t    }\n\t    return 'object';\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\tFallback implementations for the Django i18n translation catalog\n\tfunctions.\n\t\n\tSee:\n\thttps://docs.djangoproject.com/en/2.0/topics/i18n/translation/\n\t\n\tWe only add the translation functions to ``window`` if they\n\tare not already there. This means that this can be included\n\tboth before and after loading the Django i18n javascript catalog.\n\t*/\n\t\n\tif (!window.gettext) {\n\t  window.gettext = function (msgid) {\n\t    return msgid;\n\t  };\n\t  if (true) {\n\t    console.warn('window.gettext is not defined. Patching window.gettext and related ' + 'functions with noop fallbacks. ' + 'Make sure you import/include a full gettext translation system like ' + 'the Django JavascriptCatalog view before ievv_jsbase or any javascript using ' + 'ievv_jsbase to get translations.');\n\t  }\n\t}\n\t\n\tif (!window.pluralidx) {\n\t  window.pluralidx = function (count) {\n\t    return count === 1 ? 0 : 1;\n\t  };\n\t}\n\t\n\tif (!window.ngettext) {\n\t  window.ngettext = function (singular, plural, count) {\n\t    return count === 1 ? singular : plural;\n\t  };\n\t}\n\t\n\tif (!window.gettext_noop) {\n\t  window.gettext_noop = function (msgid) {\n\t    return msgid;\n\t  };\n\t}\n\t\n\tif (!window.pgettext) {\n\t  window.pgettext = function (context, msgid) {\n\t    return msgid;\n\t  };\n\t}\n\t\n\tif (!window.npgettext) {\n\t  window.npgettext = function (context, singular, plural, count) {\n\t    return count === 1 ? singular : plural;\n\t  };\n\t}\n\t\n\tif (!window.interpolate) {\n\t  window.interpolate = function (fmt, obj, named) {\n\t    if (named) {\n\t      return fmt.replace(/%\\(\\w+\\)s/g, function (match) {\n\t        return String(obj[match.slice(2, -2)]);\n\t      });\n\t    } else {\n\t      return fmt.replace(/%s/g, function (match) {\n\t        return String(obj.shift());\n\t      });\n\t    }\n\t  };\n\t}\n\t\n\tif (!window.get_format) {\n\t  window.get_format = function (format_type) {\n\t    return format_type;\n\t  };\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _AbstractWidget2 = __webpack_require__(2);\n\t\n\tvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\t\n\tvar _SignalHandlerSingleton = __webpack_require__(1);\n\t\n\tvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DownloadCompressedArchiveDownloadLinkWidget = function (_AbstractWidget) {\n\t  _inherits(DownloadCompressedArchiveDownloadLinkWidget, _AbstractWidget);\n\t\n\t  function DownloadCompressedArchiveDownloadLinkWidget(element) {\n\t    _classCallCheck(this, DownloadCompressedArchiveDownloadLinkWidget);\n\t\n\t    var _this = _possibleConstructorReturn(this, (DownloadCompressedArchiveDownloadLinkWidget.__proto__ || Object.getPrototypeOf(DownloadCompressedArchiveDownloadLinkWidget)).call(this, element));\n\t\n\t    _this._onFinishedSignal = _this._onFinishedSignal.bind(_this);\n\t    _this.signalHandler = new _SignalHandlerSingleton2.default();\n\t    _this.signalHandler.addReceiver(_this.config.signalNameSpace + \".Finished\", _this.config.signalNameSpace + \".DownloadLinkReceiver\", _this._onFinishedSignal);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(DownloadCompressedArchiveDownloadLinkWidget, [{\n\t    key: \"_onFinishedSignal\",\n\t    value: function _onFinishedSignal(receivedSignalInfo) {\n\t      console.log('FINISHED', receivedSignalInfo.data);\n\t      this.element.setAttribute('href', receivedSignalInfo.data.download_link);\n\t    }\n\t  }, {\n\t    key: \"destroy\",\n\t    value: function destroy() {\n\t      this.signalHandler.removeAllSignalsFromReceiver(this.config.signalNameSpace + \".DownloadLinkReceiver\");\n\t    }\n\t  }]);\n\t\n\t  return DownloadCompressedArchiveDownloadLinkWidget;\n\t}(_AbstractWidget3.default);\n\t\n\texports.default = DownloadCompressedArchiveDownloadLinkWidget;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _AbstractWidget2 = __webpack_require__(2);\n\t\n\tvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\t\n\tvar _SignalHandlerSingleton = __webpack_require__(1);\n\t\n\tvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DownloadCompressedArchiveStartButtonWidget = function (_AbstractWidget) {\n\t  _inherits(DownloadCompressedArchiveStartButtonWidget, _AbstractWidget);\n\t\n\t  function DownloadCompressedArchiveStartButtonWidget(element) {\n\t    _classCallCheck(this, DownloadCompressedArchiveStartButtonWidget);\n\t\n\t    var _this = _possibleConstructorReturn(this, (DownloadCompressedArchiveStartButtonWidget.__proto__ || Object.getPrototypeOf(DownloadCompressedArchiveStartButtonWidget)).call(this, element));\n\t\n\t    _this._onClick = _this._onClick.bind(_this);\n\t    _this.signalHandler = new _SignalHandlerSingleton2.default();\n\t    _this.element.addEventListener('click', _this._onClick);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(DownloadCompressedArchiveStartButtonWidget, [{\n\t    key: \"_onClick\",\n\t    value: function _onClick(event) {\n\t      event.preventDefault();\n\t      this.signalHandler.send(this.config.signalNameSpace + \".Start\");\n\t    }\n\t  }, {\n\t    key: \"destroy\",\n\t    value: function destroy() {\n\t      this.element.removeEventListener('click', this._onClick);\n\t    }\n\t  }]);\n\t\n\t  return DownloadCompressedArchiveStartButtonWidget;\n\t}(_AbstractWidget3.default);\n\t\n\texports.default = DownloadCompressedArchiveStartButtonWidget;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _AbstractWidget2 = __webpack_require__(2);\n\t\n\tvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\t\n\tvar _HttpDjangoJsonRequest = __webpack_require__(17);\n\t\n\tvar _HttpDjangoJsonRequest2 = _interopRequireDefault(_HttpDjangoJsonRequest);\n\t\n\tvar _HttpJsonRequest = __webpack_require__(7);\n\t\n\tvar _HttpJsonRequest2 = _interopRequireDefault(_HttpJsonRequest);\n\t\n\tvar _SignalHandlerSingleton = __webpack_require__(1);\n\t\n\tvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\t\n\tvar _LoggerSingleton = __webpack_require__(3);\n\t\n\tvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DownloadCompressedArchiveWidget = function (_AbstractWidget) {\n\t  _inherits(DownloadCompressedArchiveWidget, _AbstractWidget);\n\t\n\t  function DownloadCompressedArchiveWidget(element) {\n\t    _classCallCheck(this, DownloadCompressedArchiveWidget);\n\t\n\t    var _this = _possibleConstructorReturn(this, (DownloadCompressedArchiveWidget.__proto__ || Object.getPrototypeOf(DownloadCompressedArchiveWidget)).call(this, element));\n\t\n\t    _this.status = null;\n\t    _this.cssClassPrefix = 'devilry-batchprocessed-download';\n\t    _this.pollCount = 0;\n\t    _this.statuses = ['none', 'not-created', 'not-started', 'running', 'finished'];\n\t    _this._onStartSignal = _this._onStartSignal.bind(_this);\n\t    _this.logger = new _LoggerSingleton2.default().getLogger('devilry.DownloadCompressedArchiveWidget');\n\t    _this.signalHandler = new _SignalHandlerSingleton2.default();\n\t    _this.processingStartedTime = null;\n\t    _this.signalHandler.addReceiver(_this.config.signalNameSpace + \".Start\", _this.config.signalNameSpace + \".MainReceiver\", _this._onStartSignal);\n\t\n\t    _this._requestStatusUpdate();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(DownloadCompressedArchiveWidget, [{\n\t    key: \"_updateCssClassesFromStatus\",\n\t    value: function _updateCssClassesFromStatus() {\n\t      this.element.classList.remove(this.cssClassPrefix + \"--finished-within-same-session\");\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = this.statuses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var status = _step.value;\n\t\n\t          this.element.classList.remove(this.cssClassPrefix + \"--\" + status);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      this.element.classList.add(this.cssClassPrefix + \"--\" + this.status);\n\t      if (this.status == 'finished' && this.processingStartedTime != null) {\n\t        this.element.classList.add(this.cssClassPrefix + \"--finished-within-same-session\");\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_requestStatusUpdate\",\n\t    value: function _requestStatusUpdate() {\n\t      var _this2 = this;\n\t\n\t      if (this.isLoading) {\n\t        return;\n\t      }\n\t      new _HttpJsonRequest2.default(this.config.apiurl).get().then(function (response) {\n\t        _this2._handleApiResponse(response, 'GET');\n\t      }).catch(function (error) {\n\t        throw error;\n\t      });\n\t    }\n\t  }, {\n\t    key: \"_handleFinishedStatus\",\n\t    value: function _handleFinishedStatus(response) {\n\t      this.logger.debug('Download finished processing', response.bodydata);\n\t      this.element.setAttribute('href', response.bodydata.download_link);\n\t      this.signalHandler.send(this.config.signalNameSpace + \".Finished\", response.bodydata);\n\t    }\n\t  }, {\n\t    key: \"_handleNoFilesStatus\",\n\t    value: function _handleNoFilesStatus() {\n\t      this.element.style.display = 'none';\n\t    }\n\t  }, {\n\t    key: \"_handleApiResponse\",\n\t    value: function _handleApiResponse(response, method) {\n\t      var _this3 = this;\n\t\n\t      this.pollCount++;\n\t      this.logger.debug(method + \" \" + this.config.apiurl + \":\", response.bodydata);\n\t      this.status = response.bodydata.status;\n\t      this._updateCssClassesFromStatus();\n\t      if (this.status == 'not-created') {\n\t        return; // Do nothing - wait for someone to click the button and start the processing\n\t      }\n\t      if (this.status == 'not-started' || this.status == 'running') {\n\t        window.setTimeout(function () {\n\t          _this3._requestStatusUpdate();\n\t        }, this._pollDelayMilliseconds);\n\t      } else if (this.status == 'finished') {\n\t        this._handleFinishedStatus(response);\n\t      } else if (this.status == 'no-files') {\n\t        this._handleNoFilesStatus(response);\n\t      } else {\n\t        throw new Error(\"Invalid status: \" + this.status);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_onStartSignal\",\n\t    value: function _onStartSignal() {\n\t      var _this4 = this;\n\t\n\t      this.logger.debug('Start signal received');\n\t      if (this.status == 'finished') {\n\t        return;\n\t      }\n\t      this.processingStartedTime = new Date();\n\t      new _HttpDjangoJsonRequest2.default(this.config.apiurl).post().then(function (response) {\n\t        _this4._handleApiResponse(response, 'POST');\n\t      }).catch(function (error) {\n\t        throw error;\n\t      });\n\t    }\n\t  }, {\n\t    key: \"destroy\",\n\t    value: function destroy() {\n\t      this.signalHandler.removeAllSignalsFromReceiver(this.config.signalNameSpace + \".MainReceiver\");\n\t    }\n\t  }, {\n\t    key: \"_pollDelayMilliseconds\",\n\t    get: function get() {\n\t      if (this.pollCount < 3) {\n\t        return 700;\n\t      } else if (this.pollCount < 10) {\n\t        return 2000;\n\t      } else {\n\t        return 5000;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return DownloadCompressedArchiveWidget;\n\t}(_AbstractWidget3.default);\n\t\n\texports.default = DownloadCompressedArchiveWidget;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _AbstractWidget2 = __webpack_require__(2);\n\t\n\tvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\t\n\tvar _HtmlParser = __webpack_require__(6);\n\t\n\tvar _HtmlParser2 = _interopRequireDefault(_HtmlParser);\n\t\n\tvar _SignalHandlerSingleton = __webpack_require__(1);\n\t\n\tvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\t\n\tvar _LoggerSingleton = __webpack_require__(3);\n\t\n\tvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar GradingConfigurationCustomTableWidget = function (_AbstractWidget) {\n\t  _inherits(GradingConfigurationCustomTableWidget, _AbstractWidget);\n\t\n\t  _createClass(GradingConfigurationCustomTableWidget, [{\n\t    key: \"getDefaultConfig\",\n\t    value: function getDefaultConfig() {\n\t      return {\n\t        signalNameSpace: 'gradingConfiguration'\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function GradingConfigurationCustomTableWidget(element) {\n\t    _classCallCheck(this, GradingConfigurationCustomTableWidget);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GradingConfigurationCustomTableWidget.__proto__ || Object.getPrototypeOf(GradingConfigurationCustomTableWidget)).call(this, element));\n\t\n\t    if (_this.config.signalNameSpace == null) {\n\t      throw new Error('The signalNameSpace config is required.');\n\t    }\n\t    _this._name = \"devilry.GradingConfigurationCustomTableWidget.\" + _this.config.signalNameSpace;\n\t    _this.logger = new _LoggerSingleton2.default().getLogger('devilry.GradingConfigurationCustomTableWidget');\n\t    _this._onRemoveRow = _this._onRemoveRow.bind(_this);\n\t    _this._onGradeInputChange = _this._onGradeInputChange.bind(_this);\n\t    _this._onPointInputChange = _this._onPointInputChange.bind(_this);\n\t    _this._onAddRowSignal = _this._onAddRowSignal.bind(_this);\n\t    _this._onSetRowsSignal = _this._onSetRowsSignal.bind(_this);\n\t    _this._signalHandler = new _SignalHandlerSingleton2.default();\n\t    _this._initializeSignalHandlers();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GradingConfigurationCustomTableWidget, [{\n\t    key: \"_initializeSignalHandlers\",\n\t    value: function _initializeSignalHandlers() {\n\t      this._signalHandler.addReceiver(this.config.signalNameSpace + \".AddCustomTableRow\", this._name, this._onAddRowSignal);\n\t      this._signalHandler.addReceiver(this.config.signalNameSpace + \".SetCustomTableRows\", this._name, this._onSetRowsSignal);\n\t    }\n\t  }, {\n\t    key: \"destroy\",\n\t    value: function destroy() {\n\t      this._signalHandler.removeAllSignalsFromReceiver(this._name);\n\t    }\n\t  }, {\n\t    key: \"_getRowChildElements\",\n\t    value: function _getRowChildElements(rowElement) {\n\t      var childElements = {\n\t        gradeInput: rowElement.children[0].children[0],\n\t        pointInput: rowElement.children[1].children[0]\n\t      };\n\t      if (rowElement.children.length > 2) {\n\t        childElements['removeButton'] = rowElement.children[2].children[0];\n\t      }\n\t      return childElements;\n\t    }\n\t  }, {\n\t    key: \"_getPointsFromRowElement\",\n\t    value: function _getPointsFromRowElement(rowElement) {\n\t      var points = parseInt(rowElement.children[1].children[0].value, 10);\n\t      if (isNaN(points)) {\n\t        return null;\n\t      }\n\t      return points;\n\t    }\n\t  }, {\n\t    key: \"_getGradeFromRowElement\",\n\t    value: function _getGradeFromRowElement(rowElement) {\n\t      return rowElement.children[0].children[0].value;\n\t    }\n\t  }, {\n\t    key: \"_moveToCorrectPlace\",\n\t    value: function _moveToCorrectPlace(rowElement) {\n\t      var points = this._getPointsFromRowElement(rowElement);\n\t      if (points != null) {\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t          for (var _iterator = Array.from(this.element.children)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var currentRowElement = _step.value;\n\t\n\t            if (rowElement == currentRowElement) {\n\t              continue;\n\t            }\n\t            var currentPoints = this._getPointsFromRowElement(currentRowElement);\n\t            if (currentPoints == null || points < currentPoints) {\n\t              this.element.insertBefore(rowElement, currentRowElement);\n\t              return;\n\t            }\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t              _iterator.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      this.element.appendChild(rowElement);\n\t    }\n\t  }, {\n\t    key: \"_addRow\",\n\t    value: function _addRow(grade, minimumPoints) {\n\t      var translatedRemoveText = window.gettext('remove');\n\t      var parser = new _HtmlParser2.default(\"\\n      <div class=\\\"devilry-tabulardata-list__row\\\">\\n        <div class=\\\"devilry-tabulardata-list__cell\\\">\\n          <input class=\\\"textinput textInput form-control form-control\\\"\\n                 maxlength=\\\"12\\\"\\n                 value=\\\"\" + grade + \"\\\"\\n                 type=\\\"text\\\">\\n        </div>\\n        <div class=\\\"devilry-tabulardata-list__cell\\\">\\n          <input class=\\\"numberinput form-control form-control\\\"\\n                 value=\\\"\" + minimumPoints + \"\\\"\\n                 type=\\\"number\\\"\\n                 min=\\\"1\\\" step=\\\"1\\\">\\n        </div>\\n        <div class=\\\"devilry-tabulardata-list__cell\\\">\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\">\\n              \" + translatedRemoveText + \"\\n          </button>\\n        </div>\\n      </div>\\n    \");\n\t      var rowElement = parser.firstRootElement;\n\t      this.element.appendChild(rowElement);\n\t      var childElements = this._getRowChildElements(rowElement);\n\t      childElements.pointInput.addEventListener('change', this._onPointInputChange);\n\t      childElements.gradeInput.addEventListener('change', this._onGradeInputChange);\n\t      if (childElements.removeButton) {\n\t        childElements.removeButton.addEventListener('click', this._onRemoveRow);\n\t      }\n\t      if (this.element.children[0] == rowElement) {\n\t        childElements.removeButton.parentElement.removeChild(childElements.removeButton);\n\t        childElements.pointInput.removeAttribute('min');\n\t        childElements.pointInput.disabled = true;\n\t        childElements.pointInput.value = 0;\n\t      }\n\t      return rowElement;\n\t    }\n\t  }, {\n\t    key: \"_removeRow\",\n\t    value: function _removeRow(rowElement) {\n\t      var childElements = this._getRowChildElements(rowElement);\n\t      if (childElements.removeButton) {\n\t        childElements.removeButton.removeEventListener('click', this._onRemoveRow);\n\t      }\n\t      rowElement.parentElement.removeChild(rowElement);\n\t      this._sendValueChangeSignal();\n\t    }\n\t  }, {\n\t    key: \"_clear\",\n\t    value: function _clear() {\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\t\n\t      try {\n\t        for (var _iterator2 = Array.from(this.element.children)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var rowElement = _step2.value;\n\t\n\t          this._removeRow(rowElement);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_buildTable\",\n\t    value: function _buildTable(valueList) {\n\t      this._clear();\n\t      var _iteratorNormalCompletion3 = true;\n\t      var _didIteratorError3 = false;\n\t      var _iteratorError3 = undefined;\n\t\n\t      try {\n\t        for (var _iterator3 = valueList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t          var valueObject = _step3.value;\n\t\n\t          this._addRow(valueObject[1], valueObject[0]);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t            _iterator3.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError3) {\n\t            throw _iteratorError3;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_getCurrentValueList\",\n\t    value: function _getCurrentValueList() {\n\t      var values = [];\n\t      var _iteratorNormalCompletion4 = true;\n\t      var _didIteratorError4 = false;\n\t      var _iteratorError4 = undefined;\n\t\n\t      try {\n\t        for (var _iterator4 = Array.from(this.element.children)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t          var rowElement = _step4.value;\n\t\n\t          var points = this._getPointsFromRowElement(rowElement);\n\t          var grade = this._getGradeFromRowElement(rowElement) || '';\n\t          grade = grade.trim();\n\t          if (points != null && grade != '') {\n\t            values.push([points, grade]);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t            _iterator4.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t          }\n\t        }\n\t      }\n\t\n\t      return values;\n\t    }\n\t  }, {\n\t    key: \"_sendValueChangeSignal\",\n\t    value: function _sendValueChangeSignal() {\n\t      this._signalHandler.send(this.config.signalNameSpace + \".CustomTableValueChange\", this._getCurrentValueList());\n\t    }\n\t  }, {\n\t    key: \"_onGradeInputChange\",\n\t    value: function _onGradeInputChange(event) {\n\t      var value = event.target.value;\n\t      this._sendValueChangeSignal();\n\t    }\n\t  }, {\n\t    key: \"_onPointInputChange\",\n\t    value: function _onPointInputChange(event) {\n\t      var pointInputElement = event.target;\n\t      var rowElement = pointInputElement.parentElement.parentElement;\n\t      this._moveToCorrectPlace(rowElement);\n\t      this._sendValueChangeSignal();\n\t    }\n\t  }, {\n\t    key: \"_onSetRowsSignal\",\n\t    value: function _onSetRowsSignal(receivedSignalInfo) {\n\t      var valueList = receivedSignalInfo.data.valueList;\n\t      var sendValueChangeSignal = receivedSignalInfo.data.sendValueChangeSignal;\n\t      this._buildTable(valueList);\n\t      if (sendValueChangeSignal) {\n\t        this._sendValueChangeSignal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_onAddRowSignal\",\n\t    value: function _onAddRowSignal(receivedSignalInfo) {\n\t      var rowElement = this._addRow(receivedSignalInfo.data.grade, receivedSignalInfo.data.points);\n\t      this._getRowChildElements(rowElement).gradeInput.focus();\n\t    }\n\t  }, {\n\t    key: \"_onRemoveRow\",\n\t    value: function _onRemoveRow(event) {\n\t      event.preventDefault();\n\t      var removeButton = event.target;\n\t      var rowElement = removeButton.parentElement.parentElement;\n\t      this._removeRow(rowElement);\n\t    }\n\t  }]);\n\t\n\t  return GradingConfigurationCustomTableWidget;\n\t}(_AbstractWidget3.default);\n\t\n\texports.default = GradingConfigurationCustomTableWidget;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _AbstractWidget2 = __webpack_require__(2);\n\t\n\tvar _AbstractWidget3 = _interopRequireDefault(_AbstractWidget2);\n\t\n\tvar _HtmlParser = __webpack_require__(6);\n\t\n\tvar _HtmlParser2 = _interopRequireDefault(_HtmlParser);\n\t\n\tvar _SignalHandlerSingleton = __webpack_require__(1);\n\t\n\tvar _SignalHandlerSingleton2 = _interopRequireDefault(_SignalHandlerSingleton);\n\t\n\tvar _LoggerSingleton = __webpack_require__(3);\n\t\n\tvar _LoggerSingleton2 = _interopRequireDefault(_LoggerSingleton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar GradingConfigurationWidget = function (_AbstractWidget) {\n\t  _inherits(GradingConfigurationWidget, _AbstractWidget);\n\t\n\t  _createClass(GradingConfigurationWidget, [{\n\t    key: \"getDefaultConfig\",\n\t    value: function getDefaultConfig() {\n\t      return {\n\t        signalNameSpace: 'gradingConfiguration'\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function GradingConfigurationWidget(element) {\n\t    _classCallCheck(this, GradingConfigurationWidget);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GradingConfigurationWidget.__proto__ || Object.getPrototypeOf(GradingConfigurationWidget)).call(this, element));\n\t\n\t    if (_this.config.signalNameSpace == null) {\n\t      throw new Error('The signalNameSpace config is required.');\n\t    }\n\t    _this._name = \"devilry.GradingConfigurationWidget.\" + _this.config.signalNameSpace;\n\t    _this._signalHandler = new _SignalHandlerSingleton2.default();\n\t    _this.logger = new _LoggerSingleton2.default().getLogger('devilry.GradingConfigurationWidget');\n\t    _this._onPluginIdRadioChange = _this._onPluginIdRadioChange.bind(_this);\n\t    _this._onPointsToGradeMapperRadioChange = _this._onPointsToGradeMapperRadioChange.bind(_this);\n\t    _this._onPassingGradeMinPointsChange = _this._onPassingGradeMinPointsChange.bind(_this);\n\t    _this._onAddCustomTableRow = _this._onAddCustomTableRow.bind(_this);\n\t    _this._onSetupCustomTableAtoFExample = _this._onSetupCustomTableAtoFExample.bind(_this);\n\t    _this._onCustomTableValueChangeSignal = _this._onCustomTableValueChangeSignal.bind(_this);\n\t\n\t    _this.pluginIdElements = _this._getPluginIdElements();\n\t    _this.passingGradeMinPointsWrapperElement = document.getElementById('div_id_passing_grade_min_points');\n\t    _this.passingGradeMinPointsInputElement = document.getElementById('id_passing_grade_min_points');\n\t    _this.maxPointsLabelElement = _this.element.querySelector('#div_id_max_points label');\n\t    _this.maxPointsHelpTextElement = document.getElementById('hint_id_max_points');\n\t    _this.maxPointsInputElement = document.getElementById('id_max_points');\n\t    _this.pointsToGradeMapperElements = _this._getPointsToGradeMapperElements();\n\t    _this.customTableWrapperElement = document.getElementById('id_custom_table_wrapper');\n\t    _this.customTableAddRowButton = document.getElementById('id_custom_table_add_row_button');\n\t    _this.customTableSetuAtoFExampleButton = document.getElementById('id_custom_table_setup_atof_example_button');\n\t    _this.pointToGradeMapJsonElement = document.getElementById('id_point_to_grade_map_json');\n\t\n\t    _this._state = {};\n\t    _this._initializeSignalHandlers();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GradingConfigurationWidget, [{\n\t    key: \"useAfterInitializeAllWidgets\",\n\t    value: function useAfterInitializeAllWidgets() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: \"afterInitializeAllWidgets\",\n\t    value: function afterInitializeAllWidgets() {\n\t      var initialPluginId = this.element.querySelector('#div_id_grading_system_plugin_id input[checked]').value;\n\t      var initialPointsToGradeMapper = this.element.querySelector('#div_id_points_to_grade_mapper input[checked]').value;\n\t      var initialPointToGradeMapString = this.pointToGradeMapJsonElement.value;\n\t      var initialPassingGradeMinPoints = parseInt(this.passingGradeMinPointsInputElement.value);\n\t      if (isNaN(initialPassingGradeMinPoints)) {\n\t        initialPassingGradeMinPoints = null;\n\t      }\n\t      var initialMaxPoints = parseInt(this.maxPointsInputElement.value);\n\t      if (isNaN(initialMaxPoints)) {\n\t        initialMaxPoints = null;\n\t      }\n\t\n\t      var initialPointToGradeMap = [];\n\t      if (initialPointToGradeMapString != undefined && initialPointToGradeMapString != null && initialPointToGradeMapString != '') {\n\t        initialPointToGradeMap = JSON.parse(initialPointToGradeMapString);\n\t      }\n\t      if (initialPointToGradeMap.length == 0 || initialPointToGradeMap[0][0] != 0) {\n\t        initialPointToGradeMap = [[0, '']];\n\t      }\n\t      this._setState({\n\t        // grading_system_plugin_id: 'devilry_gradingsystemplugin_points',\n\t        // points_to_grade_mapper: 'custom-table',\n\t        // point_to_grade_map: this._getCustomTableAtoFExampleConfig()\n\t        grading_system_plugin_id: initialPluginId,\n\t        points_to_grade_mapper: initialPointsToGradeMapper,\n\t        point_to_grade_map: initialPointToGradeMap,\n\t        passing_grade_min_points: initialPassingGradeMinPoints,\n\t        max_points: initialMaxPoints\n\t      }, true);\n\t      this._addEventListeners();\n\t    }\n\t  }, {\n\t    key: \"_initializeSignalHandlers\",\n\t    value: function _initializeSignalHandlers() {\n\t      this._signalHandler.addReceiver(this.config.signalNameSpace + \".CustomTableValueChange\", this._name, this._onCustomTableValueChangeSignal);\n\t    }\n\t  }, {\n\t    key: \"_setState\",\n\t    value: function _setState(statePatch) {\n\t      var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t      var oldState = Object.assign({}, this._state);\n\t      this._state = Object.assign({}, this._state, statePatch);\n\t      // console.log('statePatch', statePatch);\n\t      // console.log('oldState', oldState);\n\t      // console.log('newState', this._state);\n\t\n\t      if (initial) {\n\t        this.pluginIdElements[this._state.grading_system_plugin_id].input.checked = true;\n\t        this.pointsToGradeMapperElements[this._state.points_to_grade_mapper].input.checked = true;\n\t        this._signalHandler.send(this.config.signalNameSpace + \".SetCustomTableRows\", {\n\t          valueList: this._state.point_to_grade_map,\n\t          sendValueChangeSignal: false\n\t        });\n\t      }\n\t      if (this._state.grading_system_plugin_id == 'devilry_gradingsystemplugin_approved' && this._state.points_to_grade_mapper == 'custom-table') {\n\t        this._state.points_to_grade_mapper = 'passed-failed';\n\t      }\n\t\n\t      if (this._state.grading_system_plugin_id != oldState.grading_system_plugin_id) {\n\t        this._updateUiForPlugin();\n\t      }\n\t      if (this._state.points_to_grade_mapper != oldState.points_to_grade_mapper) {\n\t        this._updateUiForPointsToGradeMapper();\n\t      }\n\t      if (this._state.point_to_grade_map != oldState.point_to_grade_map) {\n\t        this.pointToGradeMapJsonElement.value = JSON.stringify(this._state.point_to_grade_map);\n\t        this._updateUiForPointsToGradeMapper();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_updateUiForPlugin\",\n\t    value: function _updateUiForPlugin() {\n\t      var pluginId = this._state.grading_system_plugin_id;\n\t      if (pluginId == 'devilry_gradingsystemplugin_approved') {\n\t        this._updateUiForApprovedPlugin();\n\t      } else if (pluginId == 'devilry_gradingsystemplugin_points') {\n\t        this._updateUiForPointsPlugin();\n\t      } else {\n\t        throw new Error(\"Unsupported grading_system_plugin: \\\"\" + pluginId + \"\\\"\");\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_updateUiForApprovedPlugin\",\n\t    value: function _updateUiForApprovedPlugin() {\n\t      this.passingGradeMinPointsWrapperElement.style.display = 'none';\n\t      this._hidePointsToGradeMapperCustomTableChoice();\n\t      var pluginConfig = this.config['devilry_gradingsystemplugin_approved'];\n\t      this._updateUiLabels(pluginConfig);\n\t    }\n\t  }, {\n\t    key: \"_updateUiForPointsPlugin\",\n\t    value: function _updateUiForPointsPlugin() {\n\t      this.passingGradeMinPointsWrapperElement.style.display = 'block';\n\t      this._showPointsToGradeMapperCustomTableChoice();\n\t      var pluginConfig = this.config['devilry_gradingsystemplugin_points'];\n\t      this._updateUiLabels(pluginConfig);\n\t    }\n\t  }, {\n\t    key: \"_renderPassingGradeMinPointsField\",\n\t    value: function _renderPassingGradeMinPointsField() {\n\t      var parentElement = this.passingGradeMinPointsInputElement.parentElement;\n\t      parentElement.removeChild(this.passingGradeMinPointsInputElement);\n\t      var fieldHtml = '';\n\t      if (this._state.points_to_grade_mapper == 'custom-table') {\n\t        fieldHtml = this._getPassingGradeMinPointsCustomTableSelectFieldHtml();\n\t      } else {\n\t        fieldHtml = this._getPassingGradeMinPointsInputFieldHtml();\n\t      }\n\t      var parser = new _HtmlParser2.default(fieldHtml);\n\t      var selectElement = parser.firstRootElement;\n\t      this.passingGradeMinPointsInputElement = selectElement;\n\t      parentElement.insertBefore(selectElement, parentElement.children[0]);\n\t      selectElement.addEventListener('change', this._onPassingGradeMinPointsChange);\n\t    }\n\t  }, {\n\t    key: \"_getPassingGradeMinPointsCustomTableSelectFieldHtml\",\n\t    value: function _getPassingGradeMinPointsCustomTableSelectFieldHtml() {\n\t      var options = '<option value=\"\"></option>';\n\t      var hasSelectedOption = false;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = this._state.point_to_grade_map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var pointToGrade = _step.value;\n\t\n\t          var points = pointToGrade[0];\n\t          var grade = pointToGrade[1];\n\t          var selected = '';\n\t          if (points == this._state.passing_grade_min_points && !hasSelectedOption) {\n\t            selected = 'selected';\n\t            hasSelectedOption = true;\n\t          }\n\t          options += \"<option value=\\\"\" + points + \"\\\" \" + selected + \">\" + points + \" (\" + grade + \")</option>\";\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return \"<select name=\\\"passing_grade_min_points\\\" class=\\\"form-control\\\">\" + options + \"</select>\";\n\t    }\n\t  }, {\n\t    key: \"_getPassingGradeMinPointsInputFieldHtml\",\n\t    value: function _getPassingGradeMinPointsInputFieldHtml() {\n\t      var value = this._state.passing_grade_min_points;\n\t      if (value == null) {\n\t        value = '';\n\t      }\n\t      return \"<input type=\\\"number\\\" name=\\\"passing_grade_min_points\\\" \\n                   value=\\\"\" + value + \"\\\"\\n                   min=\\\"0\\\" step=\\\"1\\\"\\n                   class=\\\"form-control\\\"/>\";\n\t    }\n\t  }, {\n\t    key: \"_updateUiForPointsToGradeMapper\",\n\t    value: function _updateUiForPointsToGradeMapper() {\n\t      var mapper = this._state.points_to_grade_mapper;\n\t      if (mapper == 'custom-table') {\n\t        this.customTableWrapperElement.style.display = 'block';\n\t      } else {\n\t        this.customTableWrapperElement.style.display = 'none';\n\t      }\n\t      this._renderPassingGradeMinPointsField();\n\t    }\n\t  }, {\n\t    key: \"_getPluginIdElements\",\n\t    value: function _getPluginIdElements() {\n\t      var inputElements = Array.from(this.element.querySelectorAll('#div_id_grading_system_plugin_id input[type=\"radio\"]'));\n\t      var pluginIdElements = {};\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\t\n\t      try {\n\t        for (var _iterator2 = inputElements[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var inputElement = _step2.value;\n\t\n\t          pluginIdElements[inputElement.value] = {\n\t            input: inputElement\n\t          };\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t\n\t      return pluginIdElements;\n\t    }\n\t  }, {\n\t    key: \"_getPointsToGradeMapperElements\",\n\t    value: function _getPointsToGradeMapperElements() {\n\t      var inputElements = Array.from(this.element.querySelectorAll('#div_id_points_to_grade_mapper input[type=\"radio\"]'));\n\t      var pointsToGradeMapperElements = {};\n\t      var _iteratorNormalCompletion3 = true;\n\t      var _didIteratorError3 = false;\n\t      var _iteratorError3 = undefined;\n\t\n\t      try {\n\t        for (var _iterator3 = inputElements[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t          var inputElement = _step3.value;\n\t\n\t          pointsToGradeMapperElements[inputElement.value] = {\n\t            input: inputElement,\n\t            wrapper: inputElement.parentElement.parentElement\n\t          };\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t            _iterator3.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError3) {\n\t            throw _iteratorError3;\n\t          }\n\t        }\n\t      }\n\t\n\t      return pointsToGradeMapperElements;\n\t    }\n\t  }, {\n\t    key: \"_addEventListeners\",\n\t    value: function _addEventListeners() {\n\t      var _iteratorNormalCompletion4 = true;\n\t      var _didIteratorError4 = false;\n\t      var _iteratorError4 = undefined;\n\t\n\t      try {\n\t        for (var _iterator4 = Object.keys(this.pluginIdElements)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t          var value = _step4.value;\n\t\n\t          var inputElement = this.pluginIdElements[value].input;\n\t          inputElement.addEventListener('change', this._onPluginIdRadioChange);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t            _iterator4.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t          }\n\t        }\n\t      }\n\t\n\t      var _iteratorNormalCompletion5 = true;\n\t      var _didIteratorError5 = false;\n\t      var _iteratorError5 = undefined;\n\t\n\t      try {\n\t        for (var _iterator5 = Object.keys(this.pointsToGradeMapperElements)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t          var _value = _step5.value;\n\t\n\t          var _inputElement = this.pointsToGradeMapperElements[_value].input;\n\t          _inputElement.addEventListener('change', this._onPointsToGradeMapperRadioChange);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t            _iterator5.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError5) {\n\t            throw _iteratorError5;\n\t          }\n\t        }\n\t      }\n\t\n\t      this.customTableAddRowButton.addEventListener('click', this._onAddCustomTableRow);\n\t      this.customTableSetuAtoFExampleButton.addEventListener('click', this._onSetupCustomTableAtoFExample);\n\t    }\n\t  }, {\n\t    key: \"destroy\",\n\t    value: function destroy() {}\n\t  }, {\n\t    key: \"_hidePointsToGradeMapperCustomTableChoice\",\n\t    value: function _hidePointsToGradeMapperCustomTableChoice() {\n\t      this.pointsToGradeMapperElements['custom-table'].wrapper.style.display = 'none';\n\t      if (this.pointsToGradeMapperElements['custom-table'].input.checked) {\n\t        this.pointsToGradeMapperElements['passed-failed'].input.checked = true;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_showPointsToGradeMapperCustomTableChoice\",\n\t    value: function _showPointsToGradeMapperCustomTableChoice() {\n\t      this.pointsToGradeMapperElements['custom-table'].wrapper.style.display = 'block';\n\t    }\n\t  }, {\n\t    key: \"_updateUiLabels\",\n\t    value: function _updateUiLabels(pluginConfig) {\n\t      this.maxPointsLabelElement.innerHTML = pluginConfig['max_points_label'] || '';\n\t      if (pluginConfig['max_points_help_text'] == '') {\n\t        this.maxPointsHelpTextElement.style.display = 'none';\n\t      } else {\n\t        this.maxPointsHelpTextElement.style.display = 'block';\n\t        this.maxPointsHelpTextElement.innerHTML = pluginConfig['max_points_help_text'] || '';\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_onPluginIdRadioChange\",\n\t    value: function _onPluginIdRadioChange(event) {\n\t      var pluginId = event.target.value;\n\t      this._setState({\n\t        grading_system_plugin_id: pluginId\n\t      });\n\t    }\n\t  }, {\n\t    key: \"_onPointsToGradeMapperRadioChange\",\n\t    value: function _onPointsToGradeMapperRadioChange(event) {\n\t      var value = event.target.value;\n\t      this._setState({\n\t        points_to_grade_mapper: value\n\t      });\n\t    }\n\t  }, {\n\t    key: \"_onAddCustomTableRow\",\n\t    value: function _onAddCustomTableRow(event) {\n\t      event.preventDefault();\n\t      this._signalHandler.send(this.config.signalNameSpace + \".AddCustomTableRow\", {\n\t        grade: '',\n\t        points: ''\n\t      });\n\t    }\n\t  }, {\n\t    key: \"_getCustomTableAtoFExampleConfig\",\n\t    value: function _getCustomTableAtoFExampleConfig() {\n\t      return [[0, 'F'], [25, 'D'], [50, 'C'], [75, 'B'], [90, 'A']];\n\t    }\n\t  }, {\n\t    key: \"_onSetupCustomTableAtoFExample\",\n\t    value: function _onSetupCustomTableAtoFExample(event) {\n\t      event.preventDefault();\n\t      if (window.confirm('Are you sure you want to setup the A-F example? Clears the table and inserts new rows.')) {\n\t        this._signalHandler.send(this.config.signalNameSpace + \".SetCustomTableRows\", {\n\t          valueList: this._getCustomTableAtoFExampleConfig(),\n\t          sendValueChangeSignal: true\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: \"_onCustomTableValueChangeSignal\",\n\t    value: function _onCustomTableValueChangeSignal(receivedSignalInfo) {\n\t      var valueList = receivedSignalInfo.data;\n\t      this._setState({\n\t        point_to_grade_map: valueList\n\t      });\n\t    }\n\t  }, {\n\t    key: \"_onPassingGradeMinPointsChange\",\n\t    value: function _onPassingGradeMinPointsChange(event) {\n\t      var value = parseInt(event.target.value);\n\t      if (isNaN(value)) {\n\t        value = null;\n\t      }\n\t      this._setState({\n\t        passing_grade_min_points: value\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return GradingConfigurationWidget;\n\t}(_AbstractWidget3.default);\n\t\n\texports.default = GradingConfigurationWidget;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.HttpCookieNotFoundError = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _makeCustomError = __webpack_require__(5);\n\t\n\tvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Exception raised by {@link HttpCookies#getStrict} when the cookie is not found.\n\t *\n\t * @type {Error}\n\t */\n\tvar HttpCookieNotFoundError = exports.HttpCookieNotFoundError = (0, _makeCustomError2.default)('HttpCookieNotFoundError');\n\t\n\t/**\n\t * Makes working with ``document.cookie`` easy.\n\t *\n\t * @example <caption>Get a cookie named \"name\"</caption>\n\t * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n\t * let cookies = HttpCookies();\n\t * let name = cookies.get('name');\n\t *\n\t * @example <caption>Get a cookie named \"pageurl\", with a fallback</caption>\n\t * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n\t * let cookies = HttpCookies();\n\t * let name = cookies.get('pageurl', 'http://example.com');\n\t *\n\t * @example <caption>Get a cookie named \"name\" in strict mode</caption>\n\t * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n\t * import {HttpCookieNotFoundError} from 'ievv_jsbase/http/HttpCookies';\n\t * let cookies = HttpCookies();\n\t * try {\n\t *     let name = cookies.getStrict('name');\n\t * } catch(e) {\n\t *     if(e instanceof HttpCookieNotFoundError) {\n\t *         console.error('Cookie not found', e);\n\t *     } else {\n\t *         throw e;\n\t *     }\n\t * }\n\t */\n\t\n\tvar HttpCookies = function () {\n\t    /**\n\t     * @param {string} rawCookies Raw cookies string. This is\n\t     *      optional - it defaults to ``document.cookie``.\n\t     */\n\t    function HttpCookies(rawCookies) {\n\t        _classCallCheck(this, HttpCookies);\n\t\n\t        this.rawCookies = rawCookies || document.cookie;\n\t        this.cookies = this.__parse();\n\t    }\n\t\n\t    _createClass(HttpCookies, [{\n\t        key: '__parse',\n\t        value: function __parse() {\n\t            var cookies = {};\n\t            if (this.rawCookies && this.rawCookies !== '') {\n\t                var cookiesArray = this.rawCookies.split(';');\n\t                for (var i = 0; i < cookiesArray.length; i++) {\n\t                    var cookie = cookiesArray[i].trim();\n\t                    var cookieArray = cookie.split('=', 2);\n\t                    if (cookieArray.length === 2) {\n\t                        var name = cookieArray[0];\n\t                        var value = cookieArray[1];\n\t                        cookies[name.trim()] = value.trim();\n\t                    }\n\t                }\n\t            }\n\t            return cookies;\n\t        }\n\t\n\t        /**\n\t         * Get cookie value.\n\t         *\n\t         * @param {string} cookieName The name of the cookie.\n\t         * @param fallback Fallback value if the cookie with the provided\n\t         *      ``cookieName`` does not exist.\n\t         *      Defaults to ``undefined``.\n\t         * @return {string} The cookie value, or the fallback value if no cookie\n\t         *      with the provided ``cookieName`` is found.\n\t         */\n\t\n\t    }, {\n\t        key: 'get',\n\t        value: function get(cookieName, fallback) {\n\t            var value = this.cookies[cookieName];\n\t            if (typeof value === 'undefined') {\n\t                return fallback;\n\t            } else {\n\t                return value;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get cookie value and throw exception if it is not found.\n\t         *\n\t         * @param {string} cookieName The name of the cookie.\n\t         * @returns {string} The cookie value.\n\t         * @throws {HttpCookieNotFoundError} If no cookie named ``cookieName`` is found.\n\t         */\n\t\n\t    }, {\n\t        key: 'getStrict',\n\t        value: function getStrict(cookieName) {\n\t            var value = this.get(cookieName);\n\t            if (typeof value === 'undefined') {\n\t                throw new HttpCookieNotFoundError('Cookie not found: \"' + cookieName + '\".');\n\t            }\n\t            return value;\n\t        }\n\t\n\t        /**\n\t         * Check if a cookie is among the parsed cookies.\n\t         *\n\t         * @param {string} cookieName The name of the cookie to look for.\n\t         * @returns {boolean} ``true`` if the cookie is among the parsed cookies.\n\t         */\n\t\n\t    }, {\n\t        key: 'contains',\n\t        value: function contains(cookieName) {\n\t            return typeof this.cookies[cookieName] !== 'undefined';\n\t        }\n\t    }]);\n\t\n\t    return HttpCookies;\n\t}();\n\t\n\texports.default = HttpCookies;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _HttpJsonRequest2 = __webpack_require__(7);\n\t\n\tvar _HttpJsonRequest3 = _interopRequireDefault(_HttpJsonRequest2);\n\t\n\tvar _HttpCookies = __webpack_require__(16);\n\t\n\tvar _HttpCookies2 = _interopRequireDefault(_HttpCookies);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Extends HttpJsonRequest with automatic handling\n\t * of the Django csrftoken.\n\t */\n\tvar HttpDjangoJsonRequest = function (_HttpJsonRequest) {\n\t  _inherits(HttpDjangoJsonRequest, _HttpJsonRequest);\n\t\n\t  /**\n\t   * @param args Same args as for {@link HttpResponse}.\n\t   */\n\t  function HttpDjangoJsonRequest() {\n\t    var _ref;\n\t\n\t    _classCallCheck(this, HttpDjangoJsonRequest);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    var _this = _possibleConstructorReturn(this, (_ref = HttpDjangoJsonRequest.__proto__ || Object.getPrototypeOf(HttpDjangoJsonRequest)).call.apply(_ref, [this].concat(args)));\n\t\n\t    _this._cookies = new _HttpCookies2.default();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Returns the value of the ``csrftoken`` cookie.\n\t   */\n\t\n\t\n\t  _createClass(HttpDjangoJsonRequest, [{\n\t    key: \"setDefaultRequestHeaders\",\n\t\n\t\n\t    /**\n\t     * Ensures the csrftoken cookie value is automatically set in\n\t     * the ``X-CSRFToken`` header for all requests except GET and HEAD.\n\t     *\n\t     * @param method See {@link HttpRequest}.\n\t     */\n\t    value: function setDefaultRequestHeaders(method) {\n\t      _get(HttpDjangoJsonRequest.prototype.__proto__ || Object.getPrototypeOf(HttpDjangoJsonRequest.prototype), \"setDefaultRequestHeaders\", this).call(this, method);\n\t      var shouldAddCsrfToken = !(method == 'GET' || method == 'HEAD');\n\t      if (shouldAddCsrfToken) {\n\t        this.setRequestHeader(\"X-CSRFToken\", this.csrftoken);\n\t      }\n\t    }\n\t  }, {\n\t    key: \"csrftoken\",\n\t    get: function get() {\n\t      return this._cookies.getStrict('csrftoken');\n\t    }\n\t  }]);\n\t\n\t  return HttpDjangoJsonRequest;\n\t}(_HttpJsonRequest3.default);\n\t\n\texports.default = HttpDjangoJsonRequest;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _HttpResponse2 = __webpack_require__(8);\n\t\n\tvar _HttpResponse3 = _interopRequireDefault(_HttpResponse2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Extends HttpResponse with extra functionality for\n\t * working with JSON response data.\n\t *\n\t * The most important addition is the {@link HttpJsonResponse#bodydata}\n\t * property that you will want to use instead of\n\t * {@link HttpResponse#body}.\n\t */\n\tvar HttpJsonResponse = function (_HttpResponse) {\n\t    _inherits(HttpJsonResponse, _HttpResponse);\n\t\n\t    function HttpJsonResponse() {\n\t        _classCallCheck(this, HttpJsonResponse);\n\t\n\t        return _possibleConstructorReturn(this, (HttpJsonResponse.__proto__ || Object.getPrototypeOf(HttpJsonResponse)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(HttpJsonResponse, [{\n\t        key: \"__parseResponseTextAsJson\",\n\t        value: function __parseResponseTextAsJson() {\n\t            return JSON.parse(this.body);\n\t        }\n\t\n\t        /**\n\t         * Overriden to make use of JSON.stringify to produce more\n\t         * pretty output.\n\t         */\n\t\n\t    }, {\n\t        key: \"getPrettyfiedBody\",\n\t        value: function getPrettyfiedBody() {\n\t            var prettyBody = void 0;\n\t            try {\n\t                prettyBody = JSON.stringify(this.bodydata, null, 2);\n\t            } catch (SyntaxError) {\n\t                prettyBody = this.body;\n\t            }\n\t            return prettyBody;\n\t        }\n\t    }, {\n\t        key: \"bodydata\",\n\t\n\t\n\t        /**\n\t         * Get the response body (the responseText attribute of the XMLHttpRequest)\n\t         * decoded from JSON.\n\t         */\n\t        get: function get() {\n\t            if (this.isConnectionRefused()) {\n\t                return null;\n\t            } else {\n\t                return this.__parseResponseTextAsJson();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return HttpJsonResponse;\n\t}(_HttpResponse3.default);\n\t\n\texports.default = HttpJsonResponse;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _HttpResponse = __webpack_require__(8);\n\t\n\tvar _HttpResponse2 = _interopRequireDefault(_HttpResponse);\n\t\n\tvar _UrlParser = __webpack_require__(21);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * API for performing HTTP requests.\n\t *\n\t * @example <caption>Make a POST request</caption>\n\t * const request = new HttpRequest('http://example.com/api/users/');\n\t * request.post('Hello world')\n\t *     .then((response) => {\n\t *         // Success - response is a HttpResponse object.\n\t *         console.log(response.toString());\n\t *         if(response.isSuccess()) {\n\t *             console.log('Success: ', response.body);\n\t *         } else if (response.isRedirect) {\n\t *             console.log('Hmm strange, we got a redirect instead of a 2xx response.');\n\t *         }\n\t *     })\n\t *     .catch((error) => {\n\t *         // Error - response is an HttpResponse object.\n\t *         console.error(error.toString());\n\t *         if(error.response.isRedirect()) {\n\t *             // Yes - redirect is treated as an error by default.\n\t *             // you can change this by supplying an extra argument\n\t *             // to HttpResponse()\n\t *             console.log('We got a 3xx response!', error.response.body);\n\t *         } else if(error.response.isClientError()) {\n\t *             console.log('We got a 4xx response!', error.response.body);\n\t *         } else if (error.response.isServerError()) {\n\t *             console.log('We got a 5xx response!', error.response.body);\n\t *         } else if (error.response.isConnectionRefused()) {\n\t *             console.log('Connection refused.');\n\t *         }\n\t *         // throw error;  // You can throw the error as an exception\n\t *     });\n\t *\n\t * @example <caption>Make a GET request with a querystring</caption>\n\t * const request = new HttpRequest('http://example.com/api/users/');\n\t * request.urlParser.queryString.set('search', 'doe');\n\t * request.get()\n\t *     .then((response) => {\n\t *         console.log('Success!', response.toString());\n\t *     })\n\t *     .catch((error) => {\n\t *         console.error('Error:', error.toString());\n\t *     });\n\t */\n\tvar HttpRequest = function () {\n\t    /**\n\t     * @param {string} url The URL to request.\n\t     *      If this is supplied, it is passed to\n\t     *      {@link HttpRequest#setUrl}\n\t     */\n\t    function HttpRequest(url) {\n\t        _classCallCheck(this, HttpRequest);\n\t\n\t        this._treatRedirectResponseAsError = true;\n\t        this.request = new XMLHttpRequest();\n\t        this._urlParser = null;\n\t        if (typeof url !== 'undefined') {\n\t            this.setUrl(url);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Get the parsed URL of the request.\n\t     *\n\t     * @returns {UrlParser} The UrlParser for the parsed URL.\n\t     */\n\t\n\t\n\t    _createClass(HttpRequest, [{\n\t        key: \"setUrl\",\n\t\n\t\n\t        /**\n\t         * Set the URL of the request.\n\t         *\n\t         * @param {String} url The URL.\n\t         */\n\t        value: function setUrl(url) {\n\t            this._urlParser = new _UrlParser.UrlParser(url);\n\t        }\n\t\n\t        /**\n\t         * Set how we treat 3xx responses.\n\t         *\n\t         * By default they are treated as errors, but you can change\n\t         * this behavior by calling this function.\n\t         *\n\t         * @param {bool} treatRedirectResponseAsError Treat 3xx responses as\n\t         *      errors?\n\t         *\n\t         * @example <caption>Do not treat 3xx responses as error</caption>\n\t         * const request = HttpRequest('http://example.com/api/');\n\t         * request.setTreatRedirectResponseAsError(false);\n\t         */\n\t\n\t    }, {\n\t        key: \"setTreatRedirectResponseAsError\",\n\t        value: function setTreatRedirectResponseAsError(treatRedirectResponseAsError) {\n\t            this._treatRedirectResponseAsError = treatRedirectResponseAsError;\n\t        }\n\t\n\t        /**\n\t         * Send the request.\n\t         *\n\t         * @param method The HTTP method. I.e.: \"get\", \"post\", ...\n\t         * @param data Request body data. This is sent through\n\t         *      {@link HttpRequest#makeRequestBody} before it\n\t         *      is sent.*\n\t         * @return A Promise.\n\t         *\n\t         *      The resolve function argument is an\n\t         *      an object of whatever {@link HttpRequest#makeResponse}\n\t         *      returns.\n\t         *\n\t         *      The reject function argument is a\n\t         *      {@link HttpResponseError} object created using\n\t         *      {@link HttpResponse#toError}.\n\t         */\n\t\n\t    }, {\n\t        key: \"send\",\n\t        value: function send(method, data) {\n\t            var _this = this;\n\t\n\t            method = method.toUpperCase();\n\t            if (this._urlParser === null) {\n\t                throw new TypeError('Can not call send() without an url.');\n\t            }\n\t            return new Promise(function (resolve, reject) {\n\t                _this.request.open(method, _this.urlParser.buildUrl(), true);\n\t                _this.setDefaultRequestHeaders(method);\n\t                _this.request.onload = function () {\n\t                    return _this._onComplete(resolve, reject);\n\t                };\n\t                _this.request.onerror = function () {\n\t                    return _this._onComplete(resolve, reject);\n\t                };\n\t                _this.request.send(_this.makeRequestBody(data));\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Shortcut for ``send(\"get\", data)``.\n\t         *\n\t         * @see {@link HttpRequest#send}\n\t         */\n\t\n\t    }, {\n\t        key: \"get\",\n\t        value: function get(data) {\n\t            return this.send('get', data);\n\t        }\n\t\n\t        /**\n\t         * Shortcut for ``send(\"head\", data)``.\n\t         *\n\t         * @see {@link HttpRequest#send}\n\t         */\n\t\n\t    }, {\n\t        key: \"head\",\n\t        value: function head(data) {\n\t            return this.send('head', data);\n\t        }\n\t\n\t        /**\n\t         * Shortcut for ``send(\"post\", data)``.\n\t         *\n\t         * @see {@link HttpRequest#send}\n\t         */\n\t\n\t    }, {\n\t        key: \"post\",\n\t        value: function post(data) {\n\t            return this.send('post', data);\n\t        }\n\t\n\t        /**\n\t         * Shortcut for ``send(\"put\", data)``.\n\t         *\n\t         * @see {@link HttpRequest#send}\n\t         */\n\t\n\t    }, {\n\t        key: \"put\",\n\t        value: function put(data) {\n\t            return this.send('put', data);\n\t        }\n\t\n\t        /**\n\t         * Shortcut for ``send(\"patch\", data)``.\n\t         *\n\t         * @see {@link HttpRequest#send}\n\t         */\n\t\n\t    }, {\n\t        key: \"patch\",\n\t        value: function patch(data) {\n\t            return this.send('patch', data);\n\t        }\n\t\n\t        /**\n\t         * Shortcut for ``send(\"delete\", data)``.\n\t         *\n\t         * Named httpdelete to avoid crash with builtin keyword ``delete``.\n\t         *\n\t         * @see {@link HttpRequest#send}\n\t         */\n\t\n\t    }, {\n\t        key: \"httpdelete\",\n\t        value: function httpdelete(data) {\n\t            return this.send('delete', data);\n\t        }\n\t\n\t        /**\n\t         * Make request body from the provided data.\n\t         *\n\t         * By default this just returns the provided data,\n\t         * but subclasses can override this to perform automatic\n\t         * conversion.\n\t         *\n\t         * Must return a string.\n\t         */\n\t\n\t    }, {\n\t        key: \"makeRequestBody\",\n\t        value: function makeRequestBody(data) {\n\t            return data;\n\t        }\n\t\n\t        /**\n\t         * Creates a {@link HttpResponse}.\n\t         * @returns {HttpResponse}\n\t         */\n\t\n\t    }, {\n\t        key: \"makeResponse\",\n\t        value: function makeResponse() {\n\t            return new _HttpResponse2.default(this.request);\n\t        }\n\t\n\t        /**\n\t         * Set a request header.\n\t         *\n\t         * @param header The header name. E.g.: ``\"Content-type\"``.\n\t         * @param value The header value.\n\t         */\n\t\n\t    }, {\n\t        key: \"setRequestHeader\",\n\t        value: function setRequestHeader(header, value) {\n\t            this.request.setRequestHeader(header, value);\n\t        }\n\t\n\t        /**\n\t         * Set default request headers.\n\t         *\n\t         * Does nothing by default, but subclasses can override this.\n\t         *\n\t         * @param method The HTTP request method (GET, POST, PUT, ...).\n\t         *      Will always be uppercase.\n\t         */\n\t\n\t    }, {\n\t        key: \"setDefaultRequestHeaders\",\n\t        value: function setDefaultRequestHeaders(method) {}\n\t    }, {\n\t        key: \"_onComplete\",\n\t        value: function _onComplete(resolve, reject) {\n\t            var response = this.makeResponse();\n\t            var isSuccess = false;\n\t            if (this._treatRedirectResponseAsError) {\n\t                isSuccess = response.isSuccess();\n\t            } else {\n\t                isSuccess = response.isSuccess() || response.isRedirect();\n\t            }\n\t            if (isSuccess) {\n\t                resolve(response);\n\t            } else {\n\t                reject(response.toError());\n\t            }\n\t        }\n\t    }, {\n\t        key: \"urlParser\",\n\t        get: function get() {\n\t            return this._urlParser;\n\t        }\n\t    }]);\n\t\n\t    return HttpRequest;\n\t}();\n\t\n\texports.default = HttpRequest;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Query-string creator and parser.\n\t *\n\t * @example <caption>Basics - build a querystring</caption>\n\t * const querystring = new QueryString();\n\t * querystring.set('name', 'Peter');\n\t * querystring.setIterable('tags', ['person', 'male']);\n\t * const encodedQuerystring = querystring.urlencode();\n\t * // encodedQuerystring === 'name=Peter&tags=person&tags=male'  // order may vary\n\t *\n\t * @example <caption>Parse a querystring</caption>\n\t * const querystring = new QueryString('name=Peter&tags=person&tags=male');\n\t * const name = querystring.get('name');\n\t * const tags = querystring.getArray('tags');\n\t * const firstTag = querystring.get('tags');\n\t *\n\t * @example <caption>Parse and modify a querystring</caption>\n\t * const querystring = new QueryString('name=Peter&tags=person&tags=male');\n\t * querystring.set('name', 'John');\n\t * querystring.append('tags', 'important');\n\t * // querystring.urlencode() === 'name=John&tags=person&tags=male&tags=important'\n\t * querystring.setIterable('tags', ['male']);\n\t * // querystring.urlencode() === 'name=John&tags=male'\n\t */\n\tvar QueryString = function () {\n\t    /**\n\t     *\n\t     * @param {string} querystring Optional input querystring to parse.\n\t     */\n\t    function QueryString(querystring) {\n\t        _classCallCheck(this, QueryString);\n\t\n\t        this._queryStringMap = new Map();\n\t        if (typeof querystring !== 'undefined') {\n\t            if (typeof querystring !== 'string') {\n\t                throw new TypeError('The querystring argument must be a string.');\n\t            }\n\t            this._parseQueryString(querystring);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Returns ``true`` if the querystring is empty, otherwise ``false``.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\t\n\t\n\t    _createClass(QueryString, [{\n\t        key: 'isEmpty',\n\t        value: function isEmpty() {\n\t            return this._queryStringMap.size === 0;\n\t        }\n\t\n\t        /**\n\t         * Remove all keys and values from the QueryString.\n\t         */\n\t\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            this._queryStringMap.clear();\n\t        }\n\t    }, {\n\t        key: '_parseQueryStringItem',\n\t        value: function _parseQueryStringItem(querystringItem) {\n\t            var splitPair = querystringItem.split('=');\n\t            var key = decodeURIComponent(splitPair[0]);\n\t            var value = decodeURIComponent(splitPair[1]);\n\t            this.append(key, value);\n\t        }\n\t    }, {\n\t        key: '_parseQueryString',\n\t        value: function _parseQueryString(querystring) {\n\t            var splitQueryString = querystring.split('&');\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = splitQueryString[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var querystringItem = _step.value;\n\t\n\t                    this._parseQueryStringItem(querystringItem);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_addToKey',\n\t        value: function _addToKey(key, value) {\n\t            if (typeof key !== 'string') {\n\t                throw new TypeError('All keys added to a QueryString must be strings.');\n\t            }\n\t            if (typeof value !== 'string') {\n\t                throw new TypeError('All values added to a QueryString must be strings.');\n\t            }\n\t            this._queryStringMap.get(key).push(value);\n\t        }\n\t    }, {\n\t        key: '_setKeyToEmptyArray',\n\t        value: function _setKeyToEmptyArray(key) {\n\t            this._queryStringMap.set(key, []);\n\t        }\n\t\n\t        /**\n\t         * Set value from an iterable.\n\t         *\n\t         * @param {string} key The key to set.\n\t         * @param iterable Something that can be iterated with a\n\t         *      ``for(const value of iterable)`` loop.\n\t         *      All the values in the iterable must be strings.\n\t         *      If the iterable is empty the key will be removed\n\t         *      from the QueryString.\n\t         *\n\t         * @example\n\t         * const querystring = QueryString();\n\t         * querystring.setIterable('names', ['Peter', 'Jane']);\n\t         */\n\t\n\t    }, {\n\t        key: 'setIterable',\n\t        value: function setIterable(key, iterable) {\n\t            this._setKeyToEmptyArray(key);\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = iterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var value = _step2.value;\n\t\n\t                    this._addToKey(key, value);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (this._queryStringMap.get(key).length === 0) {\n\t                this.remove(key);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Set a value.\n\t         *\n\t         * @param {string} key The key to store the value as.\n\t         * @param {string} value The value to set.\n\t         *\n\t         * @example\n\t         * const querystring = QueryString();\n\t         * querystring.set('name', 'Peter');\n\t         */\n\t\n\t    }, {\n\t        key: 'set',\n\t        value: function set(key, value) {\n\t            this.setIterable(key, [value]);\n\t        }\n\t\n\t        /**\n\t         * Get a value.\n\t         *\n\t         * @param {string} key The key to get the value for.\n\t         * @param {string} fallback An optional fallback value if the key is\n\t         *      not in the QueryString. Defaults to ``undefined``.\n\t         */\n\t\n\t    }, {\n\t        key: 'get',\n\t        value: function get(key, fallback) {\n\t            var value = this._queryStringMap.get(key);\n\t            if (typeof value === 'undefined') {\n\t                return fallback;\n\t            } else {\n\t                return value[0];\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Append a value to a key.\n\t         *\n\t         * @param {string} key The key to append a value to.\n\t         * @param {string} value The value to append.\n\t         *\n\t         * @example\n\t         * const querystring = QueryString();\n\t         * querystring.append('names', 'Jane');\n\t         * querystring.append('names', 'Joe');\n\t         * // querystring.urlencode() === 'names=Jane&names=Joe'\n\t         */\n\t\n\t    }, {\n\t        key: 'append',\n\t        value: function append(key, value) {\n\t            if (!this._queryStringMap.has(key)) {\n\t                this._setKeyToEmptyArray(key);\n\t            }\n\t            this._addToKey(key, value);\n\t        }\n\t\n\t        /**\n\t         * Get the values for the specified key as an array.\n\t         *\n\t         * Always returns an array, even if the value was set\n\t         * with {@link QueryString#set}.\n\t         *\n\t         * @param {string} key The key to get the values for.\n\t         * @param {Array} fallback An optional fallback value if they\n\t         *      key is not in the QueryString. Defaults to an empty array.\n\t         * @returns {Array}\n\t         */\n\t\n\t    }, {\n\t        key: 'getArray',\n\t        value: function getArray(key, fallback) {\n\t            if (this._queryStringMap.has(key)) {\n\t                var valueArray = this._queryStringMap.get(key);\n\t                return Array.from(valueArray);\n\t            }\n\t            if (typeof falback !== 'undefined') {\n\t                return [];\n\t            }\n\t            return fallback;\n\t        }\n\t\n\t        /**\n\t         * Remove the specified key from the QueryString.\n\t         *\n\t         * @param {string} key The key to remove.\n\t         */\n\t\n\t    }, {\n\t        key: 'remove',\n\t        value: function remove(key) {\n\t            this._queryStringMap.delete(key);\n\t        }\n\t\n\t        /**\n\t         * Check if the QueryString contains the given key.\n\t         *\n\t         * @param {string} key The key to check for.\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'has',\n\t        value: function has(key) {\n\t            return this._queryStringMap.has(key);\n\t        }\n\t    }, {\n\t        key: '_encodeKeyValue',\n\t        value: function _encodeKeyValue(key, value) {\n\t            return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n\t        }\n\t\n\t        /**\n\t         * Get the QueryString object as a string in query-string format.\n\t         *\n\t         * @example\n\t         * const querystring = QueryString();\n\t         * querystring.set('next', '/a&b/');\n\t         * querystring.set('name', 'john');\n\t         * let urlEncodedQuerystring = querystring.urlencode();\n\t         * // urlEncodedQuerystring === 'name=john&next=%2Fa%26b%2F'  // order may vary\n\t         */\n\t\n\t    }, {\n\t        key: 'urlencode',\n\t        value: function urlencode() {\n\t            var urlEncodedArray = [];\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this._queryStringMap[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var _step3$value = _slicedToArray(_step3.value, 2),\n\t                        key = _step3$value[0],\n\t                        valueArray = _step3$value[1];\n\t\n\t                    var _iteratorNormalCompletion4 = true;\n\t                    var _didIteratorError4 = false;\n\t                    var _iteratorError4 = undefined;\n\t\n\t                    try {\n\t                        for (var _iterator4 = valueArray[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                            var value = _step4.value;\n\t\n\t                            urlEncodedArray.push(this._encodeKeyValue(key, value));\n\t                        }\n\t                    } catch (err) {\n\t                        _didIteratorError4 = true;\n\t                        _iteratorError4 = err;\n\t                    } finally {\n\t                        try {\n\t                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                                _iterator4.return();\n\t                            }\n\t                        } finally {\n\t                            if (_didIteratorError4) {\n\t                                throw _iteratorError4;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return urlEncodedArray.join('&');\n\t        }\n\t    }]);\n\t\n\t    return QueryString;\n\t}();\n\t\n\texports.default = QueryString;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.UrlParser = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _QueryString = __webpack_require__(20);\n\t\n\tvar _QueryString2 = _interopRequireDefault(_QueryString);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @example\n\t * const urlparser = new UrlParser('http://example.com/api/people?name=Jane');\n\t * querystring.queryString.set('search', 'doe');\n\t * // urlparser.buildUrl() === 'http://example.com/api/people?name=Jane&search=doe'\n\t */\n\tvar UrlParser = exports.UrlParser = function () {\n\t  function UrlParser(url) {\n\t    _classCallCheck(this, UrlParser);\n\t\n\t    if (typeof url !== 'string') {\n\t      throw new TypeError('url must be a string.');\n\t    }\n\t    var urlSplit = url.split('?');\n\t    this._baseUrl = urlSplit[0];\n\t    this._parsedBaseUrl = this._parseBaseUrl();\n\t\n\t    /**\n\t     * The query-string of the the URL.\n\t     * @type {QueryString}\n\t     */\n\t    this.queryString = null;\n\t\n\t    if (urlSplit.length > 1) {\n\t      this.setQueryString(new _QueryString2.default(urlSplit[1]));\n\t    } else {\n\t      this.setQueryString(new _QueryString2.default());\n\t    }\n\t  }\n\t\n\t  _createClass(UrlParser, [{\n\t    key: '_splitDomainAndPath',\n\t    value: function _splitDomainAndPath(domainAndPath) {\n\t      var split = domainAndPath.split('/');\n\t      var domain = split.shift();\n\t      var path = '';\n\t      if (split.length > 0) {\n\t        path = '/' + split.join('/');\n\t      }\n\t      return {\n\t        domain: domain,\n\t        path: path\n\t      };\n\t    }\n\t  }, {\n\t    key: '_parseBaseUrl',\n\t    value: function _parseBaseUrl() {\n\t      var parsedBaseUrl = {\n\t        scheme: null,\n\t        path: '',\n\t        domain: null\n\t      };\n\t      if (this._baseUrl.match(/^[a-zA-Z0-9]+:\\/\\//)) {\n\t        // We have a full URL (<scheme>://<domain><path>)\n\t        var split = this._baseUrl.split('://');\n\t        parsedBaseUrl.scheme = split.shift();\n\t        var remaining = split.join('://');\n\t        var domainAndPath = this._splitDomainAndPath(remaining);\n\t        parsedBaseUrl.domain = domainAndPath.domain;\n\t        parsedBaseUrl.path = domainAndPath.path;\n\t      } else if (this._baseUrl.length > 0 && this._baseUrl.substring(0, 1) == '/') {\n\t        // We have path only\n\t        parsedBaseUrl.path = '' + this._baseUrl;\n\t      } else {\n\t        // We have domain and path, but no scheme (<domain><path>)\n\t        var _domainAndPath = this._splitDomainAndPath(this._baseUrl);\n\t        parsedBaseUrl.domain = _domainAndPath.domain;\n\t        parsedBaseUrl.path = _domainAndPath.path;\n\t      }\n\t      return parsedBaseUrl;\n\t    }\n\t  }, {\n\t    key: 'buildUrl',\n\t\n\t\n\t    /**\n\t     * Build the URL.\n\t     * @returns {String} The built URL.\n\t     */\n\t    value: function buildUrl() {\n\t      var url = this._baseUrl;\n\t      if (!this.queryString.isEmpty()) {\n\t        url = url + '?' + this.queryString.urlencode();\n\t      }\n\t      return url;\n\t    }\n\t\n\t    /**\n\t     * Set/replace the query-string.\n\t     *\n\t     * @param {QueryString} queryStringObject The QueryString object\n\t     *      to replace the current query-string with.\n\t     *\n\t     * @example\n\t     * const urlparser = UrlParser('http://example.com/api/people');\n\t     * const querystring = new QueryString();\n\t     * querystring.set('search', 'doe');\n\t     * urlparser.setQueryString(querystring);\n\t     * // urlparser.buildUrl() === 'http://example.com/api/people?search=doe'\n\t     */\n\t\n\t  }, {\n\t    key: 'setQueryString',\n\t    value: function setQueryString(queryStringObject) {\n\t      this.queryString = queryStringObject;\n\t    }\n\t  }, {\n\t    key: 'scheme',\n\t    get: function get() {\n\t      return this._parsedBaseUrl.scheme;\n\t    }\n\t  }, {\n\t    key: 'path',\n\t    get: function get() {\n\t      return this._parsedBaseUrl.path;\n\t    }\n\t  }, {\n\t    key: 'domain',\n\t    get: function get() {\n\t      return this._parsedBaseUrl.domain;\n\t    }\n\t  }]);\n\t\n\t  return UrlParser;\n\t}();\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _loglevel = __webpack_require__(4);\n\t\n\tvar _loglevel2 = _interopRequireDefault(_loglevel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t */\n\tvar AbstractLogger = function () {\n\t  function AbstractLogger() {\n\t    _classCallCheck(this, AbstractLogger);\n\t  }\n\t\n\t  _createClass(AbstractLogger, [{\n\t    key: \"getLogLevel\",\n\t    value: function getLogLevel() {\n\t      throw new Error('Must be overridden in subclasses.');\n\t    }\n\t\n\t    /**\n\t     * Returns ``true`` if loglevel is higher\n\t     * than or equal to {@link LogLevels#DEBUG}.\n\t     */\n\t\n\t  }, {\n\t    key: \"_noOutput\",\n\t    value: function _noOutput() {}\n\t\n\t    /**\n\t     * Exposes console.log. Will only print if current level is\n\t     * higher than or equal to {@link LogLevels#DEBUG}.\n\t     * @returns {Function} console.log\n\t     */\n\t\n\t  }, {\n\t    key: \"isDebug\",\n\t    get: function get() {\n\t      return this.getLogLevel() >= _loglevel2.default.DEBUG;\n\t    }\n\t\n\t    /**\n\t     * Returns ``true`` if loglevel is higher\n\t     * than or equal to {@link LogLevels#INFO}.\n\t     */\n\t\n\t  }, {\n\t    key: \"isInfo\",\n\t    get: function get() {\n\t      return this.getLogLevel() >= _loglevel2.default.INFO;\n\t    }\n\t\n\t    /**\n\t     * Returns ``true`` if loglevel is higher\n\t     * than or equal to {@link LogLevels#WARNING}.\n\t     */\n\t\n\t  }, {\n\t    key: \"isWarning\",\n\t    get: function get() {\n\t      return this.getLogLevel() >= _loglevel2.default.WARNING;\n\t    }\n\t\n\t    /**\n\t     * Returns ``true`` if loglevel is higher\n\t     * than or equal to {@link LogLevels#ERROR}.\n\t     */\n\t\n\t  }, {\n\t    key: \"isError\",\n\t    get: function get() {\n\t      return this.getLogLevel() >= _loglevel2.default.ERROR;\n\t    }\n\t  }, {\n\t    key: \"debug\",\n\t    get: function get() {\n\t      if (this.getLogLevel() >= _loglevel2.default.DEBUG) {\n\t        return console.log.bind(console);\n\t      }\n\t      return this._noOutput;\n\t    }\n\t\n\t    /**\n\t     * Exposes console.log. Will only print if current level is\n\t     * higher than or equal to {@link LogLevels#INFO}.\n\t     * @returns {Function} console.log\n\t     */\n\t\n\t  }, {\n\t    key: \"info\",\n\t    get: function get() {\n\t      if (this.getLogLevel() >= _loglevel2.default.INFO) {\n\t        return console.log.bind(console);\n\t      }\n\t      return this._noOutput;\n\t    }\n\t\n\t    /**\n\t     * Exposes console.warn. Will only print if current level is\n\t     * higher than or equal to {@link LogLevels#WARNING}.\n\t     * @returns {Function} console.warn\n\t     */\n\t\n\t  }, {\n\t    key: \"warning\",\n\t    get: function get() {\n\t      if (this.getLogLevel() >= _loglevel2.default.WARNING) {\n\t        return console.warn.bind(console);\n\t      }\n\t      return this._noOutput;\n\t    }\n\t\n\t    /**\n\t     * Exposes console.error. Will only print if current level is\n\t     * higher than or equal to {@link LogLevels#ERROR}.\n\t     * @returns {Function} console.error\n\t     */\n\t\n\t  }, {\n\t    key: \"error\",\n\t    get: function get() {\n\t      if (this.getLogLevel() >= _loglevel2.default.ERROR) {\n\t        return console.error.bind(console);\n\t      }\n\t      return this._noOutput;\n\t    }\n\t  }]);\n\t\n\t  return AbstractLogger;\n\t}();\n\t\n\texports.default = AbstractLogger;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _AbstractLogger2 = __webpack_require__(22);\n\t\n\tvar _AbstractLogger3 = _interopRequireDefault(_AbstractLogger2);\n\t\n\tvar _loglevel = __webpack_require__(4);\n\t\n\tvar _loglevel2 = _interopRequireDefault(_loglevel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Logger = function (_AbstractLogger) {\n\t    _inherits(Logger, _AbstractLogger);\n\t\n\t    /**\n\t     *\n\t     * @param {string} name The name of the logger.\n\t     * @param {LoggerSingleton} loggerSingleton The logger singleton\n\t     *      this logger belongs to.\n\t     */\n\t    function Logger(name, loggerSingleton) {\n\t        _classCallCheck(this, Logger);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Logger.__proto__ || Object.getPrototypeOf(Logger)).call(this));\n\t\n\t        _this._name = name;\n\t        _this._logLevel = null;\n\t        _this._loggerSingleton = loggerSingleton;\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Get the name of this logger.\n\t     * @returns {string}\n\t     */\n\t\n\t\n\t    _createClass(Logger, [{\n\t        key: \"setLogLevel\",\n\t\n\t\n\t        /**\n\t         * Set the loglevel for this logger.\n\t         *\n\t         * @param {int} logLevel The log level. Must be one of the loglevels\n\t         *      defined in {@link LogLevels}.\n\t         * @throws {RangeError} if {@link LogLevels#validateLogLevel} fails.\n\t         */\n\t        value: function setLogLevel(logLevel) {\n\t            _loglevel2.default.validateLogLevel(logLevel);\n\t            this._logLevel = logLevel;\n\t        }\n\t\n\t        /**\n\t         * Get the log level.\n\t         *\n\t         * If no log level has been set with {@link Logger#setLogLevel},\n\t         * this returns {@link LoggerSingleton#getDefaultLogLevel}.\n\t         *\n\t         * @returns {int}\n\t         */\n\t\n\t    }, {\n\t        key: \"getLogLevel\",\n\t        value: function getLogLevel() {\n\t            if (this._logLevel == null) {\n\t                return this._loggerSingleton.getDefaultLogLevel();\n\t            }\n\t            return this._logLevel;\n\t        }\n\t\n\t        /**\n\t         * Get textual name for the log level. If the logger\n\t         * does not have a logLevel (if it inherits it from the LoggerSingleton)\n\t         * a string with information about this and the default logLevel for the\n\t         * LoggerSingleton is returned.\n\t         *\n\t         * Intended for debugging. The format of the string may change.\n\t         *\n\t         * @returns {string}\n\t         */\n\t\n\t    }, {\n\t        key: \"getTextualNameForLogLevel\",\n\t        value: function getTextualNameForLogLevel() {\n\t            if (this._logLevel == null) {\n\t                return '[default for LoggerSingleton - ' + (this._loggerSingleton.getTextualNameForDefaultLogLevel() + \"]\");\n\t            }\n\t            return _loglevel2.default.getTextualNameForLogLevel(this.getLogLevel());\n\t        }\n\t    }, {\n\t        key: \"getDebugInfoString\",\n\t        value: function getDebugInfoString() {\n\t            return this.name + \": \" + this.getTextualNameForLogLevel();\n\t        }\n\t    }, {\n\t        key: \"name\",\n\t        get: function get() {\n\t            return this._name;\n\t        }\n\t    }]);\n\t\n\t    return Logger;\n\t}(_AbstractLogger3.default);\n\t\n\texports.default = Logger;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _typeDetect = __webpack_require__(9);\n\t\n\tvar _typeDetect2 = _interopRequireDefault(_typeDetect);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Utility-class with several static functions to simplify validation, merging and other standard operations on\n\t * javascript-Objects.\n\t */\n\tvar ObjectManager = function () {\n\t    function ObjectManager() {\n\t        _classCallCheck(this, ObjectManager);\n\t    }\n\t\n\t    _createClass(ObjectManager, null, [{\n\t        key: \"_hasOwnValue\",\n\t\n\t        /**\n\t         * Checks that given object is not null and not undefined. Also checks the same inwards in provided nested keys\n\t         *\n\t         * @example\n\t         *  let check = this._hasOwnValue({\"foo\": {\"bar\": \"\"}}, false, true, \"foo\", \"bar\");\n\t         *  // check is now false. key \"foo\" is found, key \"bar\" is found, but \"bar\" is emptyString, and params specify to check for them\n\t         *\n\t         * @example\n\t         *  let check = this._hasOwnValue({\"foo\": {\"bar\": {}}}, true, false, \"foo\", \"bar\");\n\t         *  // check is now false. key \"foo\" is found, key \"bar\" is found, but \"bar\" is {}, and params specify to check for emptyObject.\n\t         *\n\t         * @example\n\t         *  let check = this._hasOwnValue({\"foo\": {\"bar\": {}}}, false, false, \"foo\", \"bar\");\n\t         *  // check is now true. key \"foo\" is found, key \"bar\" is found, so no requested values are null or undefined.\n\t         *\n\t         *  NOTE: Other functions in this file lets you ignore the boolean params - so just use them :)\n\t         *\n\t         * @param givenObject   The object to validate\n\t         * @param emptyObject   if true - keys mapped to empty object {} will also give false\n\t         * @param emptyString   if true - keys mapped to empty string \"\" will also give false\n\t         * @param args          nested keys to look for, so to validate myObject.foo.bar call this._hasOwnValue(myObject, false, false, \"foo\". \"bar\")\n\t         * @returns {boolean}   true if validation passes, false if not.\n\t         */\n\t        value: function _hasOwnValue(givenObject, emptyObject, emptyString) {\n\t            function checkValue(value) {\n\t                return value != undefined && value != null && (!emptyObject || value != {}) && (!emptyString || value != \"\");\n\t            }\n\t\n\t            if (!checkValue(givenObject)) {\n\t                return false;\n\t            }\n\t\n\t            for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n\t                args[_key - 3] = arguments[_key];\n\t            }\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = args[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var key = _step.value;\n\t\n\t                    if (!(key in givenObject) || !checkValue(givenObject[key])) {\n\t                        return false;\n\t                    }\n\t                    givenObject = givenObject[key];\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Validate that an object and nested keys are not null, undefined or empty string \"\".\n\t         *\n\t         * @example\n\t         * // check that myObject.foo.bar exists:\n\t         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n\t         *\n\t         * @param givenObject   the object to validate\n\t         * @param args          nested keys to check\n\t         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined or \"\"\n\t         */\n\t\n\t    }, {\n\t        key: \"validateAllowEmptyObject\",\n\t        value: function validateAllowEmptyObject(givenObject) {\n\t            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t                args[_key2 - 1] = arguments[_key2];\n\t            }\n\t\n\t            return this._hasOwnValue.apply(this, [givenObject, false, true].concat(args));\n\t        }\n\t\n\t        /**\n\t         * Validate that an object and nested keys are not null, undefined or empty object {}.\n\t         *\n\t         * @example\n\t         * // check that myObject.foo.bar exists:\n\t         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n\t         *\n\t         * @param givenObject   the object to validate\n\t         * @param args          nested keys to check\n\t         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined or {}\n\t         */\n\t\n\t    }, {\n\t        key: \"validateAllowEmptyString\",\n\t        value: function validateAllowEmptyString(givenObject) {\n\t            for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t                args[_key3 - 1] = arguments[_key3];\n\t            }\n\t\n\t            return this._hasOwnValue.apply(this, [givenObject, true, false].concat(args));\n\t        }\n\t\n\t        /**\n\t         * Validate that an object and nested keys are not null, undefined or empty string \"\" or empty object {}.\n\t         *\n\t         * @example\n\t         * // check that myObject.foo.bar exists:\n\t         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n\t         *\n\t         * @param givenObject   the object to validate\n\t         * @param args          nested keys to check\n\t         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined, {} or \"\"\n\t         */\n\t\n\t    }, {\n\t        key: \"validate\",\n\t        value: function validate(givenObject) {\n\t            for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n\t                args[_key4 - 1] = arguments[_key4];\n\t            }\n\t\n\t            return this._hasOwnValue.apply(this, [givenObject, true, true].concat(args));\n\t        }\n\t\n\t        /**\n\t         * Validate that an object and nested keys are not null or undefined.\n\t         *\n\t         * @example\n\t         * // check that myObject.foo.bar exists:\n\t         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n\t         *\n\t         * @param givenObject   the object to validate\n\t         * @param args          nested keys to check\n\t         * @returns {boolean}   true if neither the object or any provided nested key is null or undefined.\n\t         */\n\t\n\t    }, {\n\t        key: \"validateAllowEmptyStringAndEmptyObject\",\n\t        value: function validateAllowEmptyStringAndEmptyObject(givenObject) {\n\t            for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n\t                args[_key5 - 1] = arguments[_key5];\n\t            }\n\t\n\t            return this._hasOwnValue.apply(this, [givenObject, false, false].concat(args));\n\t        }\n\t\n\t        /**\n\t         * uses {@link validate} to lookup given args in given objectToBeValidated.\n\t         * This ensures the lookup is not null, undefined, empty object, or empty string.\n\t         * If this test fails, given fallbackValue is returned.\n\t         *\n\t         * @example\n\t         *  // to validate myObject.foo.bar, and get \"helloworld\" back as default if it is empty:\n\t         *  validateOrFallback(\"helloworld\", myObject, \"foo\", \"bar\")\n\t         *\n\t         * @param fallbackValue         what to return if empty\n\t         * @param objectToBeValidated   object to do lookup in\n\t         * @param args                  indices used for lookup in object\n\t         * @returns {*}                 lookup in objectToBeValidated if validation succeeded, fallbackValue if not.\n\t         */\n\t\n\t    }, {\n\t        key: \"validateOrFallback\",\n\t        value: function validateOrFallback(fallbackValue, objectToBeValidated) {\n\t            for (var _len6 = arguments.length, args = Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n\t                args[_key6 - 2] = arguments[_key6];\n\t            }\n\t\n\t            if (!this.validate.apply(this, [objectToBeValidated].concat(args))) {\n\t                return fallbackValue;\n\t            }\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = args[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var arg = _step2.value;\n\t\n\t                    objectToBeValidated = objectToBeValidated[arg];\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return objectToBeValidated;\n\t        }\n\t\n\t        /**\n\t         * Utilityfunction to simplify validation! uses {@link validateOrFallback} for validation, and executes\n\t         * given callback (and returns returnvalue from it) if validation fails.\n\t         *\n\t         * @param callback              Function to be executed if validation fails\n\t         * @param objectToBeValidated   The object to do validation-lookup in\n\t         * @param args                  indices used for lookup in objectToBeValidated\n\t         * @returns {*}                 lookup in objectToBeValidated if validation succeeded, returnvalue from callback if not.\n\t         */\n\t\n\t    }, {\n\t        key: \"validateOrCallback\",\n\t        value: function validateOrCallback(callback, objectToBeValidated) {\n\t            for (var _len7 = arguments.length, args = Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n\t                args[_key7 - 2] = arguments[_key7];\n\t            }\n\t\n\t            var validatedValue = this.validateOrFallback.apply(this, [null, objectToBeValidated].concat(args));\n\t            if (validatedValue == null) {\n\t                return callback();\n\t            }\n\t            return validatedValue;\n\t        }\n\t\n\t        /**\n\t         * Utilityfunction to simplify validation! uses {@link validateOrCallback} for validation, and passes\n\t         * a callback that simply thrown an Error if validation fails.\n\t         *\n\t         * @param errorMessage          the message to use in new Error(errorMessage)\n\t         * @param objectToBeValidated   the object to validate args in\n\t         * @param args                  args for lookup. see {@link validateOrFallback}\n\t         * @returns {*}                 the looked-up value from objectToBeValidated if it exists\n\t         */\n\t\n\t    }, {\n\t        key: \"validateOrError\",\n\t        value: function validateOrError(errorMessage, objectToBeValidated) {\n\t            for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n\t                args[_key8 - 2] = arguments[_key8];\n\t            }\n\t\n\t            return this.validateOrCallback.apply(this, [function () {\n\t                throw new Error(errorMessage);\n\t            }, objectToBeValidated].concat(args));\n\t        }\n\t    }, {\n\t        key: \"_recursiveMerge\",\n\t        value: function _recursiveMerge(mergedValues, overrides) {\n\t            for (var key in overrides) {\n\t                var detectedType = (0, _typeDetect2.default)(overrides[key]);\n\t                if (detectedType == 'object') {\n\t                    if (mergedValues[key] == undefined) {\n\t                        mergedValues[key] = {};\n\t                    }\n\t                    mergedValues[key] = this._recursiveMerge(mergedValues[key], overrides[key]);\n\t                } else if (detectedType == 'array') {\n\t                    mergedValues[key] = Array.from(overrides[key]);\n\t                } else if (detectedType == 'null' || detectedType == 'number' || detectedType == 'boolean' || detectedType == 'string') {\n\t                    mergedValues[key] = overrides[key];\n\t                } else {\n\t                    throw new Error(\"Unsupported type: \" + detectedType + \".\");\n\t                }\n\t            }\n\t            return mergedValues;\n\t        }\n\t\n\t        /**\n\t         * Deep copy all values from overrides to givenObject.\n\t         *\n\t         * All keys in passed overrides-object will be cloned to passed givenObject. This happens deeply, so all\n\t         * nested objects will also be iterated (NOTE: lists are not iterated, only objects).\n\t         *\n\t         * Note that objects are passed by-reference, so if you do not want givenObject to be modified directly make sure\n\t         * you pass false as third param\n\t         *\n\t         * @param givenObject             The object to override values in\n\t         * @param overrides               The object to copy all values from\n\t         * @param overrideValuesInGiven   if true givenObjects will be overwritten directly, if false a new object\n\t         *                                will be created to merge both given objects into.\n\t         * @returns {*}                   The result from deep-merging\n\t         */\n\t\n\t    }, {\n\t        key: \"_merge\",\n\t        value: function _merge(givenObject, overrides, overrideValuesInGiven) {\n\t            if (overrideValuesInGiven) {\n\t                return this._recursiveMerge(givenObject, overrides);\n\t            }\n\t\n\t            var mergedValues = {};\n\t            mergedValues = this._recursiveMerge(mergedValues, givenObject);\n\t            return this._recursiveMerge(mergedValues, overrides);\n\t        }\n\t\n\t        /**\n\t         * Merges all values from overrideObject into originalObject.\n\t         * This happens in place (as objects are passed-by-reference), so originalObject is modified.\n\t         *\n\t         * This is a deep-merge (unlike Object.assign).\n\t         *\n\t         * @example <caption>Simple example</caption>\n\t         * let originalObject = {\n\t         *      foo: \"bar\",\n\t         *      person: {\n\t         *          name: \"Sandy claws\",\n\t         *          age: 42\n\t         *      }\n\t         * }\n\t         *\n\t         * let overrideObject = {\n\t         *      foo: \"baz\",\n\t         *      person: {\n\t         *          age: 23,\n\t         *          phone: 12345678\n\t         *      }\n\t         *  }\n\t         *\n\t         *  ObjectManager.mergeInPlace(originalObject, overrideObject);\n\t         *\n\t         *  // originalObject will now be:\n\t         *  originalObject == {\n\t         *      foo: \"baz\",\n\t         *      person: {\n\t         *          age: 23,\n\t         *          phone: 12345678,\n\t         *          name: \"Sandy claws\"\n\t         *      }\n\t         *  }\n\t         *\n\t         * @param originalObject    the object to modify\n\t         * @param overrideObject    the object to copy values from\n\t         */\n\t\n\t    }, {\n\t        key: \"mergeInPlace\",\n\t        value: function mergeInPlace(originalObject, overrideObject) {\n\t            this._merge(originalObject, overrideObject, true);\n\t        }\n\t\n\t        /**\n\t         * Merges all values from originalObject and overrideObject into a new object that is returned.\n\t         *\n\t         * This is a deep-merge (unlike Object.assign).\n\t         *\n\t         * First, all values from originalObject are merged into a new object.\n\t         * Then all values from overrideObject are merged into the same object, overriding any corresponding keys from\n\t         * originalObject.\n\t         *\n\t         * @example <caption>Simple example</caption>\n\t         * let originalObject = {\n\t         *      foo: \"bar\",\n\t         *      person: {\n\t         *          name: \"Sandy claws\",\n\t         *          age: 42\n\t         *      }\n\t         * }\n\t         *\n\t         * let overrideObject = {\n\t         *      foo: \"baz\",\n\t         *      person: {\n\t         *          age: 23,\n\t         *          phone: 12345678\n\t         *      }\n\t         *  }\n\t         *\n\t         *  let mergedObject = ObjectManager.mergeAndCopy(originalObject, overrideObject);\n\t         *\n\t         *  // mergedObject will now be:\n\t         *  mergedObject == {\n\t         *      foo: \"baz\",\n\t         *      person: {\n\t         *          age: 23,\n\t         *          phone: 12345678,\n\t         *          name: \"Sandy claws\"\n\t         *      }\n\t         *  }\n\t         *\n\t         * @param originalObject    initial values for new object\n\t         * @param overrideObject    object to override values from original object with\n\t         * @returns {{}}            new object containing values from originalObject overridden by overrideObject (see example)\n\t         */\n\t\n\t    }, {\n\t        key: \"mergeAndClone\",\n\t        value: function mergeAndClone(originalObject, overrideObject) {\n\t            return this._merge(originalObject, overrideObject, false);\n\t        }\n\t\n\t        /**\n\t         * Copies all values from given originalObject into a new object, which is returned to caller.\n\t         *\n\t         * uses {@link ObjectManager#mergeAndClone}, but passes an empty object as one of the two it desires for merging..\n\t         *\n\t         * @param originalObject\n\t         * @returns {{}}\n\t         */\n\t\n\t    }, {\n\t        key: \"clone\",\n\t        value: function clone(originalObject) {\n\t            return this.mergeAndClone({}, originalObject);\n\t        }\n\t    }]);\n\t\n\t    return ObjectManager;\n\t}();\n\t\n\texports.default = ObjectManager;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _typeDetect = __webpack_require__(9);\n\t\n\tvar _typeDetect2 = _interopRequireDefault(_typeDetect);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Pretty format any javascript object.\n\t *\n\t * Handles the following types:\n\t *\n\t * - null\n\t * - undefined\n\t * - Number\n\t * - Boolean\n\t * - String\n\t * - Array\n\t * - Map\n\t * - Set\n\t * - Function\n\t * - Class (detected as a Function, so pretty formatted just like a function)\n\t * - Object\n\t *\n\t * @example <caption>Without indentation</caption>\n\t * new PrettyFormat([1, 2]).toString();\n\t *\n\t * @example <caption>With indentation (indent by 2 spaces)</caption>\n\t * new PrettyFormat([1, 2]).toString(2);\n\t *\n\t * @example <caption>Simple examples</caption>\n\t * new PrettyFormat(true).toString() === 'true';\n\t * new PrettyFormat(null).toString() === 'null';\n\t * new PrettyFormat([1, 2]).toString() === '[1, 2]';\n\t * new PrettyFormat({name: \"John\", age: 29}).toString() === '{\"age\": 29, \"name\": John}';\n\t *\n\t * @example <caption>Complex example</caption>\n\t * let map = new Map();\n\t * map.set('a', [10, 20]);\n\t * map.set('b', [30, 40, 50]);\n\t * function testFunction() {}\n\t * let obj = {\n\t *     theMap: map,\n\t *     aSet: new Set(['one', 'two']),\n\t *     theFunction: testFunction\n\t * };\n\t * const prettyFormatted = new PrettyFormat(obj).toString(2);\n\t */\n\tvar PrettyFormat = function () {\n\t    function PrettyFormat(obj) {\n\t        _classCallCheck(this, PrettyFormat);\n\t\n\t        this._obj = obj;\n\t    }\n\t\n\t    _createClass(PrettyFormat, [{\n\t        key: '_indentString',\n\t        value: function _indentString(str, indent, indentLevel) {\n\t            if (indent === 0) {\n\t                return str;\n\t            }\n\t            return '' + ' '.repeat(indent * indentLevel) + str;\n\t        }\n\t    }, {\n\t        key: '_objectToMap',\n\t        value: function _objectToMap(obj) {\n\t            var map = new Map();\n\t            var sortedKeys = Array.from(Object.keys(obj));\n\t            sortedKeys.sort();\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = sortedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var key = _step.value;\n\t\n\t                    map.set(key, obj[key]);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return map;\n\t        }\n\t    }, {\n\t        key: '_prettyFormatFlatIterable',\n\t        value: function _prettyFormatFlatIterable(flatIterable, size, indent, indentLevel, prefix, suffix) {\n\t            var output = prefix;\n\t            var itemSuffix = ', ';\n\t            if (indent) {\n\t                output = prefix + '\\n';\n\t                itemSuffix = ',';\n\t            }\n\t            var index = 1;\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = flatIterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var item = _step2.value;\n\t\n\t                    var prettyItem = this._prettyFormat(item, indent, indentLevel + 1);\n\t                    if (index !== size) {\n\t                        prettyItem += itemSuffix;\n\t                    }\n\t                    output += this._indentString(prettyItem, indent, indentLevel + 1);\n\t                    if (indent) {\n\t                        output += '\\n';\n\t                    }\n\t                    index++;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            output += this._indentString('' + suffix, indent, indentLevel);\n\t            return output;\n\t        }\n\t    }, {\n\t        key: '_prettyFormatMap',\n\t        value: function _prettyFormatMap(map, indent, indentLevel, prefix, suffix, keyValueSeparator) {\n\t            var output = prefix;\n\t            var itemSuffix = ', ';\n\t            if (indent) {\n\t                output = prefix + '\\n';\n\t                itemSuffix = ',';\n\t            }\n\t            var index = 1;\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = map[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var _step3$value = _slicedToArray(_step3.value, 2),\n\t                        key = _step3$value[0],\n\t                        value = _step3$value[1];\n\t\n\t                    var prettyKey = this._prettyFormat(key, indent, indentLevel + 1);\n\t                    var prettyValue = this._prettyFormat(value, indent, indentLevel + 1);\n\t                    var prettyItem = '' + prettyKey + keyValueSeparator + prettyValue;\n\t                    if (index !== map.size) {\n\t                        prettyItem += itemSuffix;\n\t                    }\n\t                    output += this._indentString(prettyItem, indent, indentLevel + 1);\n\t                    if (indent) {\n\t                        output += '\\n';\n\t                    }\n\t                    index++;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t\n\t            output += this._indentString('' + suffix, indent, indentLevel);\n\t            return output;\n\t        }\n\t    }, {\n\t        key: '_prettyFormatFunction',\n\t        value: function _prettyFormatFunction(fn) {\n\t            return '[Function: ' + fn.name + ']';\n\t        }\n\t    }, {\n\t        key: '_prettyFormat',\n\t        value: function _prettyFormat(obj, indent, indentLevel) {\n\t            var typeString = (0, _typeDetect2.default)(obj);\n\t            var output = '';\n\t            if (typeString === 'string') {\n\t                output = '\"' + obj + '\"';\n\t            } else if (typeString === 'number' || typeString === 'boolean' || typeString === 'undefined' || typeString === 'null') {\n\t                output = '' + obj;\n\t            } else if (typeString === 'array') {\n\t                output = this._prettyFormatFlatIterable(obj, obj.length, indent, indentLevel, '[', ']');\n\t            } else if (typeString === 'set') {\n\t                output = this._prettyFormatFlatIterable(obj, obj.size, indent, indentLevel, 'Set(', ')');\n\t            } else if (typeString === 'map') {\n\t                output = this._prettyFormatMap(obj, indent, indentLevel, 'Map(', ')', ' => ');\n\t            } else if (typeString === 'function') {\n\t                output = this._prettyFormatFunction(obj);\n\t            } else {\n\t                output = this._prettyFormatMap(this._objectToMap(obj), indent, indentLevel, '{', '}', ': ');\n\t            }\n\t            return output;\n\t        }\n\t\n\t        /**\n\t         * Get the results as a string, optionally indented.\n\t         *\n\t         * @param {number} indent The number of spaces to indent by. Only\n\t         *    child objects are indented, and they are indented recursively.\n\t         * @returns {string}\n\t         */\n\t\n\t    }, {\n\t        key: 'toString',\n\t        value: function toString(indent) {\n\t            indent = indent || 0;\n\t            return this._prettyFormat(this._obj, indent, 0);\n\t        }\n\t    }]);\n\t\n\t    return PrettyFormat;\n\t}();\n\t\n\texports.default = PrettyFormat;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.ElementIsNotInitializedAsWidget = exports.InvalidWidgetAliasError = exports.ElementIsNotWidgetError = exports.ElementHasNoWidgetInstanceIdError = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _makeCustomError = __webpack_require__(5);\n\t\n\tvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * The instance of the {@link WidgetRegistrySingleton}.\n\t */\n\tvar _instance = null;\n\t\n\t/**\n\t * Exception thrown when an element where we expect the\n\t * ``data-ievv-jsbase-widget-instanceid`` attribute does\n\t * not have this attribute.\n\t *\n\t * @type {Error}\n\t */\n\tvar ElementHasNoWidgetInstanceIdError = exports.ElementHasNoWidgetInstanceIdError = (0, _makeCustomError2.default)('ElementHasNoWidgetInstanceIdError');\n\t\n\t/**\n\t * Exception thrown when an element that we expect to have\n\t * the ``data-ievv-jsbase-widget`` attribute does not have\n\t * this attribute.\n\t *\n\t * @type {Error}\n\t */\n\tvar ElementIsNotWidgetError = exports.ElementIsNotWidgetError = (0, _makeCustomError2.default)('ElementIsNotWidgetError');\n\t\n\t/**\n\t * Exception thrown when an element has a\n\t * ``data-ievv-jsbase-widget`` with a value that\n\t * is not an alias registered in the {@link WidgetRegistrySingleton}.\n\t *\n\t * @type {Error}\n\t */\n\tvar InvalidWidgetAliasError = exports.InvalidWidgetAliasError = (0, _makeCustomError2.default)('InvalidWidgetAliasError');\n\t\n\t/**\n\t * Exception thrown when an element with the\n\t * ``data-ievv-jsbase-widget-instanceid=<widgetInstanceId>`` attribute is not in\n\t * the {@link WidgetRegistrySingleton} with ``<widgetInstanceId>``.\n\t *\n\t * @type {Error}\n\t */\n\tvar ElementIsNotInitializedAsWidget = exports.ElementIsNotInitializedAsWidget = (0, _makeCustomError2.default)('ElementIsNotInitializedAsWidget');\n\t\n\t/**\n\t * A very lightweight widget system.\n\t *\n\t * Basic example below - see {@link AbstractWidget} for more examples.\n\t *\n\t * @example <caption>Create a very simple widget</caption>\n\t * export default class OpenMenuWidget extends AbstractWidget {\n\t *     constructor(element) {\n\t *          super(element);\n\t *          this._onClickBound = (...args) => {\n\t *              this._onClick(...args);\n\t *          };\n\t *          this.element.addEventListener('click', this._onClickBound);\n\t *     }\n\t *\n\t *     _onClick = (e) => {\n\t *          e.preventDefault();\n\t *          console.log('I should have opened the menu here');\n\t *     }\n\t *\n\t *     destroy() {\n\t *          this.element.removeEventListener('click', this._onClickBound);\n\t *     }\n\t * }\n\t *\n\t * @example <caption>Use the widget</caption>\n\t * <button data-ievv-jsbase-widget=\"open-menu-button\" type=\"button\">\n\t *     Open menu\n\t * </button>\n\t *\n\t * @example <caption>Register and load widgets</caption>\n\t * // Somewhere that is called after all the widgets are rendered\n\t * // - typically at the end of the <body>\n\t * import WidgetRegistrySingleton from 'ievv_jsbase/widget/WidgetRegistrySingleton';\n\t * import OpenMenuWidget from 'path/to/OpenMenuWidget';\n\t * const widgetRegistry = new WidgetRegistrySingleton();\n\t * widgetRegistry.registerWidgetClass('open-menu-button', OpenMenuWidget);\n\t * widgetRegistry.initializeAllWidgetsWithinElement(document.body);\n\t *\n\t */\n\t\n\tvar WidgetRegistrySingleton = function () {\n\t    function WidgetRegistrySingleton() {\n\t        _classCallCheck(this, WidgetRegistrySingleton);\n\t\n\t        if (!_instance) {\n\t            _instance = this;\n\t            this._initialize();\n\t        }\n\t        return _instance;\n\t    }\n\t\n\t    _createClass(WidgetRegistrySingleton, [{\n\t        key: '_initialize',\n\t        value: function _initialize() {\n\t            this._widgetAttribute = 'data-ievv-jsbase-widget';\n\t            this._widgetInstanceIdAttribute = 'data-ievv-jsbase-widget-instanceid';\n\t            this._widgetClassMap = new Map();\n\t            this._widgetInstanceMap = new Map();\n\t            this._widgetInstanceCounter = 0;\n\t        }\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            // TODO: Call destroyAllWidgetsWithinDocumentBody()\n\t            this._widgetClassMap.clear();\n\t            this._widgetInstanceMap.clear();\n\t            this._widgetInstanceCounter = 0;\n\t        }\n\t\n\t        /**\n\t         * Register a widget class in the registry.\n\t         *\n\t         * @param {string} alias The alias for the widget. This is the string that\n\t         *      is used as the attribute value with the ``data-ievv-jsbase-widget``\n\t         *      DOM element attribute.\n\t         * @param {AbstractWidget} WidgetClass The widget class.\n\t         */\n\t\n\t    }, {\n\t        key: 'registerWidgetClass',\n\t        value: function registerWidgetClass(alias, WidgetClass) {\n\t            this._widgetClassMap.set(alias, WidgetClass);\n\t        }\n\t\n\t        /**\n\t         * Remove widget class from registry.\n\t         *\n\t         * @param alias The alias that the widget class was registered with\n\t         *      by using {@link WidgetRegistrySingleton#registerWidgetClass}.\n\t         */\n\t\n\t    }, {\n\t        key: 'removeWidgetClass',\n\t        value: function removeWidgetClass(alias) {\n\t            this._widgetClassMap.delete(alias);\n\t        }\n\t\n\t        /**\n\t         * Initialize the provided element as a widget.\n\t         *\n\t         * @param {Element} element The DOM element to initalize as a widget.\n\t         *\n\t         * @throws {ElementIsNotWidgetError} If the element does not have\n\t         *      the ``data-ievv-jsbase-widget`` attribute.\n\t         * @throws {InvalidWidgetAliasError} If the widget alias is not in this registry.\n\t         */\n\t\n\t    }, {\n\t        key: 'initializeWidget',\n\t        value: function initializeWidget(element) {\n\t            var alias = element.getAttribute(this._widgetAttribute);\n\t            if (!alias) {\n\t                throw new ElementIsNotWidgetError('The\\n\\n' + element.outerHTML + '\\n\\nelement has no or empty' + (this._widgetAttribute + ' attribute.'));\n\t            }\n\t            if (!this._widgetClassMap.has(alias)) {\n\t                throw new InvalidWidgetAliasError('No WidgetClass registered with the \"' + alias + '\" alias.');\n\t            }\n\t            var WidgetClass = this._widgetClassMap.get(alias);\n\t            this._widgetInstanceCounter++;\n\t            var widgetInstanceId = this._widgetInstanceCounter.toString();\n\t            var widget = new WidgetClass(element, widgetInstanceId);\n\t            this._widgetInstanceMap.set(widgetInstanceId, widget);\n\t            element.setAttribute(this._widgetInstanceIdAttribute, widgetInstanceId);\n\t            return widget;\n\t        }\n\t    }, {\n\t        key: '_getAllWidgetElementsWithinElement',\n\t        value: function _getAllWidgetElementsWithinElement(element) {\n\t            return Array.from(element.querySelectorAll('[' + this._widgetAttribute + ']'));\n\t        }\n\t\n\t        /**\n\t         * Initialize all widgets within the provided element.\n\t         *\n\t         * @param {Element} element A DOM element.\n\t         */\n\t\n\t    }, {\n\t        key: 'initializeAllWidgetsWithinElement',\n\t        value: function initializeAllWidgetsWithinElement(element) {\n\t            var afterInitializeAllWidgets = [];\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this._getAllWidgetElementsWithinElement(element)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var widgetElement = _step.value;\n\t\n\t                    var widget = this.initializeWidget(widgetElement);\n\t                    if (widget.useAfterInitializeAllWidgets()) {\n\t                        afterInitializeAllWidgets.push(widget);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = afterInitializeAllWidgets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _widget = _step2.value;\n\t\n\t                    _widget.afterInitializeAllWidgets();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get the value of the ``data-ievv-jsbase-widget-instanceid`` attribute\n\t         * of the provided element.\n\t         *\n\t         * @param {Element} element A DOM element.\n\t         * @returns {null|string}\n\t         */\n\t\n\t    }, {\n\t        key: 'getWidgetInstanceIdFromElement',\n\t        value: function getWidgetInstanceIdFromElement(element) {\n\t            return element.getAttribute(this._widgetInstanceIdAttribute);\n\t        }\n\t\n\t        /**\n\t         * Get a widget instance by its widget instance id.\n\t         *\n\t         * @param widgetInstanceId A widget instance id.\n\t         * @returns {AbstractWidget} A widget instance or ``null``.\n\t         */\n\t\n\t    }, {\n\t        key: 'getWidgetInstanceByInstanceId',\n\t        value: function getWidgetInstanceByInstanceId(widgetInstanceId) {\n\t            return this._widgetInstanceMap.get(widgetInstanceId);\n\t        }\n\t    }, {\n\t        key: 'getWidgetInstanceFromElement',\n\t        value: function getWidgetInstanceFromElement(element) {\n\t            var widgetInstanceId = this.getWidgetInstanceIdFromElement(element);\n\t            if (widgetInstanceId) {\n\t                var widgetInstance = this.getWidgetInstanceByInstanceId(widgetInstanceId);\n\t                if (widgetInstance) {\n\t                    return widgetInstance;\n\t                } else {\n\t                    throw new ElementIsNotInitializedAsWidget('Element\\n\\n' + element.outerHTML + '\\n\\nhas the ' + (this._widgetInstanceIdAttribute + ' attribute, but the id is ') + 'not in the widget registry.');\n\t                }\n\t            } else {\n\t                throw new ElementHasNoWidgetInstanceIdError('Element\\n\\n' + element.outerHTML + '\\n\\nhas no or empty ' + (this._widgetInstanceIdAttribute + ' attribute.'));\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Destroy the widget on the provided element.\n\t         *\n\t         * @param {Element} element A DOM element that has been initialized by\n\t         *      {@link WidgetRegistrySingleton#initializeWidget}.\n\t         *\n\t         * @throws {ElementHasNoWidgetInstanceIdError} If the element has\n\t         *      no ``data-ievv-jsbase-widget-instanceid`` attribute or the\n\t         *      attribute value is empty. This normally means that\n\t         *      the element is not a widget, or that the widget\n\t         *      is not initialized.\n\t         * @throws {ElementIsNotInitializedAsWidget} If the element\n\t         *      has the ``data-ievv-jsbase-widget-instanceid`` attribute\n\t         *      but the value of the attribute is not a valid widget instance\n\t         *      id. This should not happen unless you manipulate the\n\t         *      attribute manually or use the private members of this registry.\n\t         */\n\t\n\t    }, {\n\t        key: 'destroyWidget',\n\t        value: function destroyWidget(element) {\n\t            var widgetInstanceId = this.getWidgetInstanceIdFromElement(element);\n\t            if (widgetInstanceId) {\n\t                var widgetInstance = this.getWidgetInstanceByInstanceId(widgetInstanceId);\n\t                if (widgetInstance) {\n\t                    widgetInstance.destroy();\n\t                    this._widgetInstanceMap.delete(widgetInstanceId);\n\t                    element.removeAttribute(this._widgetInstanceIdAttribute);\n\t                } else {\n\t                    throw new ElementIsNotInitializedAsWidget('Element\\n\\n' + element.outerHTML + '\\n\\nhas the ' + (this._widgetInstanceIdAttribute + ' attribute, but the id is ') + 'not in the widget registry.');\n\t                }\n\t            } else {\n\t                throw new ElementHasNoWidgetInstanceIdError('Element\\n\\n' + element.outerHTML + '\\n\\nhas no or empty ' + (this._widgetInstanceIdAttribute + ' attribute.'));\n\t            }\n\t        }\n\t    }, {\n\t        key: '_getAllInstanciatedWidgetElementsWithinElement',\n\t        value: function _getAllInstanciatedWidgetElementsWithinElement(element) {\n\t            return Array.from(element.querySelectorAll('[' + this._widgetInstanceIdAttribute + ']'));\n\t        }\n\t\n\t        /**\n\t         * Destroy all widgets within the provided element.\n\t         * Only destroys widgets on elements that is a child of the element.\n\t         *\n\t         * @param {Element} element The DOM Element.\n\t         */\n\t\n\t    }, {\n\t        key: 'destroyAllWidgetsWithinElement',\n\t        value: function destroyAllWidgetsWithinElement(element) {\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this._getAllInstanciatedWidgetElementsWithinElement(element)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var widgetElement = _step3.value;\n\t\n\t                    this.destroyWidget(widgetElement);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return WidgetRegistrySingleton;\n\t}();\n\t\n\texports.default = WidgetRegistrySingleton;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// devilry_all.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a6242a06bf90d5a43325","import DownloadCompressedArchiveWidget from \"./widgets/DownloadCompressedArchiveWidget\";\nimport DownloadCompressedArchiveStartButtonWidget from \"./widgets/DownloadCompressedArchiveStartButtonWidget\";\nimport DownloadCompressedArchiveDownloadLinkWidget from \"./widgets/DownloadCompressedArchiveDownloadLinkWidget\";\nimport GradingConfigurationWidget from \"./widgets/GradingConfigurationWidget\";\nimport GradingConfigurationCustomTableWidget from \"./widgets/GradingConfigurationCustomTableWidget\";\nimport LoggerSingleton from \"ievv_jsbase/lib/log/LoggerSingleton\";\nimport LOGLEVEL from \"ievv_jsbase/lib/log/loglevel\";\nimport WidgetRegistrySingleton from \"ievv_jsbase/lib/widget/WidgetRegistrySingleton\";\nimport './utils/i18nFallbacks'\n\nconst logger = new LoggerSingleton();\nlogger.setDefaultLogLevel(LOGLEVEL.INFO);\n\nconst widgetRegistry = new WidgetRegistrySingleton();\nwidgetRegistry.registerWidgetClass('devilry-download-compressed-archive',\n  DownloadCompressedArchiveWidget);\nwidgetRegistry.registerWidgetClass('devilry-download-compressed-archive-startbutton',\n  DownloadCompressedArchiveStartButtonWidget);\nwidgetRegistry.registerWidgetClass('devilry-download-compressed-archive-downloadlink',\n  DownloadCompressedArchiveDownloadLinkWidget);\nwidgetRegistry.registerWidgetClass('devilry-grading-configuration',\n  GradingConfigurationWidget);\nwidgetRegistry.registerWidgetClass('devilry-grading-configuration-custom-table',\n  GradingConfigurationCustomTableWidget);\n\nfunction _onDomReady() {\n  // Initialize all widgets in document.body\n  widgetRegistry.initializeAllWidgetsWithinElement(document.body);\n}\n\nif (document.readyState != 'loading'){\n  _onDomReady();\n} else {\n  document.addEventListener('DOMContentLoaded', () => {\n    _onDomReady();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/javascript/devilry_all.js","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SentSignalInfo = exports.ReceivedSignalInfo = exports.DuplicateReceiverNameForSignal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = require(\"./makeCustomError\");\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nvar _PrettyFormat = require(\"./utils/PrettyFormat\");\n\nvar _PrettyFormat2 = _interopRequireDefault(_PrettyFormat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Exception raised by {@link HttpCookies#getStrict} when the cookie is not found.\n *\n * @type {Error}\n */\nvar DuplicateReceiverNameForSignal = exports.DuplicateReceiverNameForSignal = (0, _makeCustomError2.default)('DuplicateReceiverNameForSignal');\n\n/**\n * Represents information about the received signal.\n *\n * An object of this class is sent to the ``callback``\n * of all signal receivers.\n *\n * The data sent by the signal is available in\n * {@link ReceivedSignalInfo.data}.\n */\n\nvar ReceivedSignalInfo = exports.ReceivedSignalInfo = function () {\n  function ReceivedSignalInfo(data, signalName, receiverName) {\n    _classCallCheck(this, ReceivedSignalInfo);\n\n    /**\n     * The data sent by {@link SignalHandlerSingleton#send}.\n     */\n    this.data = data;\n\n    /**\n     * The signal name.\n     *\n     * @type {string}\n     */\n    this.signalName = signalName;\n\n    /**\n     * The receiver name.\n     *\n     * @type {string}\n     */\n    this.receiverName = receiverName;\n  }\n\n  /**\n   * Get a string with information about the received signal.\n   * Includes signal name and receiver name.\n   *\n   * @returns {string}\n   */\n\n\n  _createClass(ReceivedSignalInfo, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"ReceivedSignalInfo: signalName=\\\"\" + this.signalName + \"\\\" receiverName=\\\"\" + this.receiverName + \"\\\"\";\n    }\n\n    /**\n     * Get the data pretty formatted as a string.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"getPrettyFormattedData\",\n    value: function getPrettyFormattedData() {\n      return new _PrettyFormat2.default(this.data).toString(2);\n    }\n\n    /**\n     * Get a string with debug information about the received signal.\n     * Includes signal name, receiver name, and pretty formatted data.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"toDebugString\",\n    value: function toDebugString() {\n      return this.toString + \" data=\" + this.getPrettyFormattedData();\n    }\n  }]);\n\n  return ReceivedSignalInfo;\n}();\n\n/**\n * Private class used by {@link _SignalReceivers} to represent\n * a single receiver listening for a single signal.\n */\n\n\nvar _SignalReceiver = function () {\n  function _SignalReceiver(signal, name, callback) {\n    _classCallCheck(this, _SignalReceiver);\n\n    this.signal = signal;\n    this.name = name;\n    this.callback = callback;\n  }\n\n  /**\n   * Asynchronously trigger the receiver callback.\n   * @param data The signal data (the data argument provided for\n   *    {@link SignalHandlerSingleton#send}.\n   */\n\n\n  _createClass(_SignalReceiver, [{\n    key: \"trigger\",\n    value: function trigger(data) {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.callback(new ReceivedSignalInfo(data, _this.signal.name, _this.name));\n      }, 0);\n    }\n  }]);\n\n  return _SignalReceiver;\n}();\n\n/**\n * Object containing debugging information about a sent\n * signal.\n */\n\n\nvar SentSignalInfo = exports.SentSignalInfo = function () {\n  function SentSignalInfo(signalName) {\n    _classCallCheck(this, SentSignalInfo);\n\n    /**\n     * The signal name.\n     *\n     * @type {string}\n     */\n    this.signalName = signalName;\n\n    /**\n     * Array of triggered receiver names.\n     *\n     * @type {Array}\n     */\n    this.triggeredReceiverNames = [];\n  }\n\n  _createClass(SentSignalInfo, [{\n    key: \"_addReceiverName\",\n    value: function _addReceiverName(receiverName) {\n      this.triggeredReceiverNames.push(receiverName);\n    }\n\n    /**\n     * Get a string representation of the sent signal info.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var receivers = this.triggeredReceiverNames.join(', ');\n      if (receivers === '') {\n        receivers = 'NO RECEIVERS';\n      }\n      return \"Signal: \" + this.signalName + \" was sent to: \" + receivers;\n    }\n  }]);\n\n  return SentSignalInfo;\n}();\n\n/**\n * Private class used by {@link SignalHandlerSingleton}\n * to represent all receivers for a single signal.\n */\n\n\nvar _SignalReceivers = function () {\n  function _SignalReceivers(name) {\n    _classCallCheck(this, _SignalReceivers);\n\n    this.name = name;\n    this.receiverMap = new Map();\n  }\n\n  /**\n   * Add a receiver.\n   *\n   * @throw DuplicateReceiverNameForSignal If the receiver is already registered for the signal.\n   */\n\n\n  _createClass(_SignalReceivers, [{\n    key: \"addReceiver\",\n    value: function addReceiver(receiverName, callback) {\n      if (this.receiverMap.has(receiverName)) {\n        throw new DuplicateReceiverNameForSignal(\"The \\\"\" + receiverName + \"\\\" receiver is already registered for the \\\"\" + this.name + \"\\\" signal\");\n      }\n      this.receiverMap.set(receiverName, new _SignalReceiver(this, receiverName, callback));\n    }\n\n    /**\n     * Remove a receiver.\n     *\n     * If the receiver is not registered for the signal,\n     * nothing happens.\n     */\n\n  }, {\n    key: \"removeReceiver\",\n    value: function removeReceiver(receiverName) {\n      if (this.receiverMap.has(receiverName)) {\n        this.receiverMap.delete(receiverName);\n      }\n    }\n\n    /**\n     * Check if we have a specific receiver for this signal.\n     */\n\n  }, {\n    key: \"hasReceiver\",\n    value: function hasReceiver(receiverName) {\n      return this.receiverMap.has(receiverName);\n    }\n\n    /**\n     * Get the number of receivers registered for the signal.\n     */\n\n  }, {\n    key: \"receiverCount\",\n    value: function receiverCount() {\n      return this.receiverMap.size;\n    }\n\n    /**\n     * Send the signal.\n     *\n     * @param data The data sent with the signal. Forwarded to\n     *      the signal receiver callback.\n     * @param {SentSignalInfo} info If this is provided, we add the\n     *      name of all receivers the signal was sent to.\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(data, info) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.receiverMap.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var receiver = _step.value;\n\n          receiver.trigger(data);\n          if (info) {\n            info._addReceiverName(receiver.name);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return _SignalReceivers;\n}();\n\n/**\n * The instance of the {@link SignalHandlerSingleton}.\n */\n\n\nvar _instance = null;\n\n/**\n * Signal handler singleton for global communication.\n *\n * @example <caption>Basic example</caption>\n * let signalHandler = new SignalHandlerSingleton();\n * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MyReceiver', (receivedSignalInfo) => {\n *     console.log('Signal received. Data:', receivedSignalInfo.data);\n * });\n * signalHandler.send('myapp.mysignal', {'the': 'data'});\n *\n *\n * @example <caption>Recommended signal and receiver naming</caption>\n *\n * // In myapp/menu/MenuComponent.js\n * class MenuComponent {\n *     constructor(menuName) {\n *         this.menuName = menuName;\n *         let signalHandler = new SignalHandlerSingleton();\n *         signalHandler.addReceiver(\n *             `toggleMenu#${this.menuName}`,\n *             'myapp.menu.MenuComponent',\n *             (receivedSignalInfo) => {\n *                  this.toggle();\n *             }\n *         );\n *     }\n *     toggle() {\n *         // Toggle the menu\n *     }\n * }\n *\n * // In myotherapp/widgets/MenuToggle.js\n * class MenuToggle {\n *     constructor(menuName) {\n *         this.menuName = menuName;\n *     }\n *     toggle() {\n *         let signalHandler = new SignalHandlerSingleton();\n *         signalHandler.send(`toggleMenu#${this.menuName}`);\n *     }\n * }\n *\n * @example <caption>Multiple receivers</caption>\n * let signalHandler = new SignalHandlerSingleton();\n * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MyFirstReceiver', (receivedSignalInfo) => {\n *     console.log('Signal received by receiver 1!');\n * });\n * signalHandler.addReceiver('myapp.mysignal', 'myotherapp.MySecondReceiver', (receivedSignalInfo) => {\n *     console.log('Signal received by receiver 1!');\n * });\n * signalHandler.send('myapp.mysignal', {'the': 'data'});\n *\n *\n * @example <caption>Debugging</caption>\n * let signalHandler = new SignalHandlerSingleton();\n * signalHandler.addReceiver('mysignal', 'MyReceiver', (receivedSignalInfo) => {\n *     console.log('received signal:', receivedSignalInfo.toString());\n * });\n * signalHandler.send('myapp.mysignal', {'the': 'data'}, (sentSignalInfo) => {\n *     console.log('sent signal info:', sentSignalInfo.toString());\n * });\n *\n */\n\nvar SignalHandlerSingleton = function () {\n  function SignalHandlerSingleton() {\n    _classCallCheck(this, SignalHandlerSingleton);\n\n    if (!_instance) {\n      _instance = this;\n      this._signalMap = new Map();\n      this._receiverMap = new Map();\n    }\n    return _instance;\n  }\n\n  /**\n   * Remove all receivers for all signals.\n   *\n   * Useful for debugging and tests, but should not be\n   * used for production code.\n   */\n\n\n  _createClass(SignalHandlerSingleton, [{\n    key: \"clearAllReceiversForAllSignals\",\n    value: function clearAllReceiversForAllSignals() {\n      this._signalMap.clear();\n    }\n\n    /**\n     * Add a receiver for a specific signal.\n     *\n     * @param {string} signalName The name of the signal.\n     *      Typically something like ``toggleMenu`` or ``myapp.toggleMenu``.\n     *\n     *      What if we have multiple objects listening for this ``toggleMenu``\n     *      signal, and we only want to toggle a specific menu? You need\n     *      to ensure the signalName is unique for each menu. We recommend\n     *      that you do this by adding ``#<context>``. For example\n     *      ``toggleMenu#mainmenu``. This is shown in one of the examples\n     *      above.\n     * @param {string} receiverName The name of the receiver.\n     *      Must be unique for the signal.\n     *      We recommend that you use a very explicit name for your signals.\n     *      It should normally be the full path to the method or function receiving\n     *      the signal. So if you have a class named ``myapp/menu/MenuComponent.js``\n     *      that receives a signal to toggle the menu, the receiverName should be\n     *      ``myapp.menu.MenuComponent``.\n     * @param callback The callback to call when the signal is sent.\n     *      The callback is called with a single argument - a\n     *      {@link ReceivedSignalInfo} object.\n     */\n\n  }, {\n    key: \"addReceiver\",\n    value: function addReceiver(signalName, receiverName, callback) {\n      if (typeof callback === 'undefined') {\n        throw new TypeError('The callback argument for addReceiver() is required.');\n      }\n      if (!this._signalMap.has(signalName)) {\n        this._signalMap.set(signalName, new _SignalReceivers(signalName));\n      }\n      if (this._receiverMap.has(receiverName)) {\n        this._receiverMap.get(receiverName).add(signalName);\n      } else {\n        this._receiverMap.set(receiverName, new Set([signalName]));\n      }\n      var signal = this._signalMap.get(signalName);\n      signal.addReceiver(receiverName, callback);\n    }\n\n    /**\n     * Remove a receiver for a signal added with {@link SignalHandlerSingleton#addReceiver}.\n     *\n     * @param {string} signalName The name of the signal.\n     * @param {string} receiverName The name of the receiver.\n     */\n\n  }, {\n    key: \"removeReceiver\",\n    value: function removeReceiver(signalName, receiverName) {\n      if (this._signalMap.has(signalName)) {\n        var signal = this._signalMap.get(signalName);\n        signal.removeReceiver(receiverName);\n        if (signal.receiverCount() == 0) {\n          this._signalMap.delete(signalName);\n        }\n        var receiverSignalSet = this._receiverMap.get(receiverName);\n        if (receiverSignalSet != undefined) {\n          if (receiverSignalSet.has(signalName)) {\n            receiverSignalSet.delete(signalName);\n          }\n          if (receiverSignalSet.size == 0) {\n            this._receiverMap.delete(receiverName);\n          }\n        }\n      }\n    }\n\n    /**\n     * Remove all signals registered for a receiver.\n     *\n     * @param {string} receiverName The name of the receiver.\n     */\n\n  }, {\n    key: \"removeAllSignalsFromReceiver\",\n    value: function removeAllSignalsFromReceiver(receiverName) {\n      if (this._receiverMap.has(receiverName)) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._receiverMap.get(receiverName)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var signalName = _step2.value;\n\n            this.removeReceiver(signalName, receiverName);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Check if a signal has a specific receiver.\n     *\n     * @param {string} signalName The name of the signal.\n     * @param {string} receiverName The name of the receiver.\n     */\n\n  }, {\n    key: \"hasReceiver\",\n    value: function hasReceiver(signalName, receiverName) {\n      if (this._signalMap.has(signalName)) {\n        var signal = this._signalMap.get(signalName);\n        return signal.hasReceiver(receiverName);\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * Remove all receivers for a specific signal.\n     *\n     * @param {string} signalName The name of the signal to remove.\n     */\n\n  }, {\n    key: \"clearAllReceiversForSignal\",\n    value: function clearAllReceiversForSignal(signalName) {\n      if (this._signalMap.has(signalName)) {\n        this._signalMap.delete(signalName);\n      }\n    }\n\n    /**\n     * Send a signal.\n     *\n     * @param {string} signalName The name of the signal to send.\n     * @param data Data to send to the callback of all receivers registered\n     *      for the signal.\n     * @param infoCallback An optional callback that receives information\n     *      about the signal. Useful for debugging what actually received\n     *      the signal. The ``infoCallback`` is called with a single\n     *      argument - a {@link SentSignalInfo} object.\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(signalName, data, infoCallback) {\n      var info = null;\n      if (infoCallback) {\n        info = new SentSignalInfo(signalName);\n      }\n      if (this._signalMap.has(signalName)) {\n        var signal = this._signalMap.get(signalName);\n        signal.send(data, info);\n      }\n      if (infoCallback) {\n        infoCallback(info);\n      }\n    }\n  }]);\n\n  return SignalHandlerSingleton;\n}();\n\nexports.default = SignalHandlerSingleton;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/SignalHandlerSingleton.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ObjectManager = require('../utils/ObjectManager');\n\nvar _ObjectManager2 = _interopRequireDefault(_ObjectManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Base class for widgets for {@link WidgetRegistrySingleton}.\n *\n * @example <caption>Create a very simple widget</caption>\n * export default class OpenMenuWidget extends AbstractWidget {\n *     constructor(element, widgetInstanceId) {\n *          super(element, widgetInstanceId);\n *          this._onClickBound = (...args) => {\n *              this._onClick(...args);\n *          };\n *          this.element.addEventListener('click', this._onClickBound);\n *     }\n *\n *     _onClick = (e) => {\n *          e.preventDefault();\n *          console.log('I should have opened the menu here');\n *     }\n *\n *     destroy() {\n *          this.element.removeEventListener('click', this._onClickBound);\n *     }\n * }\n *\n * @example <caption>Use the widget</caption>\n * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\">\n *     Open menu\n * </button>\n *\n * @example <caption>A widget with configuration input</caption>\n * export default class OpenMenuWidget extends AbstractWidget {\n *     constructor(element) {\n *          super(element);\n *          this._onClickBound = (...args) => {\n *              this._onClick(...args);\n *          };\n *          this.element.addEventListener('click', this._onClickBound);\n *     }\n *\n *     getDefaultConfig() {\n *          return {\n *              'menuId': 'id_main_menu';\n *          }\n *     }\n *\n *     _onClick = (e) => {\n *          e.preventDefault();\n *          console.log(`I should have opened the menu with id=\"${this.config.menuId}\" here`);\n *     }\n *\n *     destroy() {\n *          this.element.removeEventListener('click', this._onClickBound);\n *     }\n * }\n *\n * @example <caption>Use the widget with config</caption>\n * <!-- Using the default config -->\n * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\">\n *     Open the main menu\n * </button>\n * <!-- Override the menuId config -->\n * <button type=\"button\" data-ievv-jsbase-widget=\"open-menu-button\"\n *          data-ievv-jsbase-widget-config='{\"menuId\": \"id_the_other_menu\"}'>\n *     Open the other menu\n * </button>\n */\nvar AbstractWidget = function () {\n\n    /**\n     * @param {Element} element The element to load the widget in.\n     * @param {string} widgetInstanceId The unique ID of this widget instance\n     *  in the widget registry.\n     */\n    function AbstractWidget(element, widgetInstanceId) {\n        _classCallCheck(this, AbstractWidget);\n\n        this.element = element;\n        this.widgetInstanceId = widgetInstanceId;\n    }\n\n    /**\n     * Get the default config.\n     *\n     * Any config supplied via the ``data-ievv-jsbase-widget-config``\n     * attribute is merged into this object.\n     *\n     * @returns {Object}\n     */\n\n\n    _createClass(AbstractWidget, [{\n        key: 'getDefaultConfig',\n        value: function getDefaultConfig() {\n            return {};\n        }\n    }, {\n        key: '_parseConfig',\n        value: function _parseConfig() {\n            var attributeName = 'data-ievv-jsbase-widget-config';\n            if (this.element.hasAttribute(attributeName)) {\n                var rawConfig = this.element.getAttribute(attributeName);\n                var config = JSON.parse(rawConfig);\n                return config;\n            }\n            return {};\n        }\n\n        /**\n         * Get the config.\n         *\n         * JSON decodes any config supplied via the ``data-ievv-jsbase-widget-config``\n         * attribute of the Element and {@link AbstractWidget#getDefaultConfig}\n         * into a config object. The result of this is cached, so multiple calls\n         * to this property will only result in the config object being created\n         * once.\n         *\n         * @throws {SyntaxError} If the ``data-ievv-jsbase-widget-config`` attribute\n         *      does not contain valid JSON data.\n         *      Not thrown if the element does not have a\n         *      ``data-ievv-jsbase-widget-config`` attribute.\n         *\n         * @returns {Object} The config object. This will be an empty object\n         *      if we have no {@link AbstractWidget#getDefaultConfig} and\n         *      no config is supplied via the ``data-ievv-jsbase-widget-config``\n         *      attribute of the Element.\n         */\n\n    }, {\n        key: 'destroy',\n\n\n        /**\n         * Destroy the widget.\n         *\n         * You should override this in subclasses if your\n         * widget sets up something that will work incorrectly\n         * if the widget disappears or is re-created (such as event\n         * listeners and signals).\n         */\n        value: function destroy() {}\n\n        /**\n         * If you override {@link AbstractWidget#afterInitializeAllWidgets},\n         * you must override this to return ``true``.\n         *\n         * @returns {boolean} Should return ``true`` if you want the widget registry\n         *   to call {@link AbstractWidget#afterInitializeAllWidgets}.\n         */\n\n    }, {\n        key: 'useAfterInitializeAllWidgets',\n        value: function useAfterInitializeAllWidgets() {\n            return false;\n        }\n\n        /**\n         * Called after all the widgets within the element that\n         * {@link WidgetRegistrySingleton#initializeAllWidgetsWithinElement}\n         * was called with is initialized.\n         *\n         * For performance reasons, this is only called if\n         * {@link AbstractWidget#useAfterInitializeAllWidgets} returns\n         * ``true``, so you must also override that method if you override\n         * this method.\n         *\n         * This is useful if you need to do something after other\n         * widgets have finished initializing, which may be the case\n         * for loosely coupled widgets.\n         *\n         * Does nothing by default.\n         */\n\n    }, {\n        key: 'afterInitializeAllWidgets',\n        value: function afterInitializeAllWidgets() {}\n    }, {\n        key: 'config',\n        get: function get() {\n            if (typeof this._config === 'undefined') {\n                var parsedConfig = this._parseConfig();\n                this._config = _ObjectManager2.default.mergeAndClone(this.getDefaultConfig(), parsedConfig);\n            }\n            return this._config;\n        }\n    }]);\n\n    return AbstractWidget;\n}();\n\nexports.default = AbstractWidget;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/widget/AbstractWidget.js\n// module id = 2\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Logger = require(\"./Logger\");\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _loglevel = require(\"./loglevel\");\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _instance = null;\n\n/**\n * A logging system.\n *\n * @example <caption>Create and use a logger</caption>\n * import LoggerSingleton from 'ievv_jsbase/log/LoggerSingleton';\n * let mylogger = new LoggerSingleton().loggerSingleton.getLogger('myproject.MyClass');\n * mylogger.debug('Hello debug world');\n * mylogger.info('Hello info world');\n * mylogger.warning('Hello warning world');\n * mylogger.error('Hello error world');\n *\n * @example <caption>Set a default loglevel for all loggers</caption>\n * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n * new LoggerSingleton().setDefaultLogLevel(LOGLEVEL.DEBUG);\n *\n * @example <caption>Set a custom loglevel for a single logger</caption>\n * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n * new LoggerSingleton().getLogger('mylogger').setLoglevel(LOGLEVEL.DEBUG);\n */\n\nvar LoggerSingleton = function () {\n    /**\n     * Get an instance of the singleton.\n     *\n     * The first time this is called, we create a new instance.\n     * For all subsequent calls, we return the instance that was\n     * created on the first call.\n     */\n    function LoggerSingleton() {\n        _classCallCheck(this, LoggerSingleton);\n\n        if (!_instance) {\n            _instance = this;\n        }\n        this._loggerMap = new Map();\n        this.reset();\n        return _instance;\n    }\n\n    /**\n     * Get the number of loggers registered using\n     * {@link getLogger}.\n     *\n     * @returns {number} The number of loggers.\n     */\n\n\n    _createClass(LoggerSingleton, [{\n        key: \"getLoggerCount\",\n        value: function getLoggerCount() {\n            return this._loggerMap.size;\n        }\n\n        /**\n         * Reset to default log level, and clear all\n         * custom loggers.\n         */\n\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this._logLevel = _loglevel2.default.WARNING;\n            this._loggerMap.clear();\n        }\n\n        /**\n         * Get the default log level.\n         *\n         * Defaults to {@link LogLevels#WARNING} if not overridden\n         * with {@LoggerSingleton#setDefaultLogLevel}.\n         *\n         * @returns {int} One of the loglevels defined in {@link LogLevels}\n         */\n\n    }, {\n        key: \"getDefaultLogLevel\",\n        value: function getDefaultLogLevel() {\n            return this._logLevel;\n        }\n\n        /**\n         * Set the default loglevel.\n         *\n         * All loggers use this by default unless\n         * you override their loglevel.\n         *\n         * @example <caption>Override loglevel of a specific logger</caption>\n         * import LoggerSingleton from 'ievv_jsbase/log/LoggerSingleton';\n         * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n         * let loggerSingleton = new LoggerSingleton();\n         * loggerSingleton.getLogger('mylogger').setLogLevel(LOGLEVEL.DEBUG);\n         *\n         * @param logLevel The log level. Must be one of the loglevels\n         *      defined in {@link LogLevels}.\n         * @throws {RangeError} if {@link LogLevels#validateLogLevel} fails.\n         */\n\n    }, {\n        key: \"setDefaultLogLevel\",\n        value: function setDefaultLogLevel(logLevel) {\n            _loglevel2.default.validateLogLevel(logLevel);\n            this._logLevel = logLevel;\n        }\n\n        /**\n         * Get a logger.\n         *\n         * @param {string} name A name for the logger. Should be a unique name,\n         *      so typically the full import path of the class/function using\n         *      the logger.\n         * @returns {Logger}\n         */\n\n    }, {\n        key: \"getLogger\",\n        value: function getLogger(name) {\n            if (!this._loggerMap.has(name)) {\n                this._loggerMap.set(name, new _Logger2.default(name, this));\n            }\n            return this._loggerMap.get(name);\n        }\n\n        /**\n         * Get the names of all the registered loggers.\n         *\n         * @returns {Array} Sorted array with the same of the loggers.\n         */\n\n    }, {\n        key: \"getLoggerNameArray\",\n        value: function getLoggerNameArray() {\n            var loggerNames = Array.from(this._loggerMap.keys());\n            loggerNames.sort();\n            return loggerNames;\n        }\n\n        /**\n         * Get textual name for the default log level.\n         *\n         * Intended for debugging. The format of the string may change.\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getTextualNameForDefaultLogLevel\",\n        value: function getTextualNameForDefaultLogLevel() {\n            return _loglevel2.default.getTextualNameForLogLevel(this.getDefaultLogLevel());\n        }\n\n        /**\n         * Get a string that summarize information about all the\n         * loggers. The string has a list of loglevels with\n         * their loglevel. Perfect for debugging.\n         *\n         * Intended for debugging. The format of the string may change.\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getDebugInfoString\",\n        value: function getDebugInfoString() {\n            var loggerInfoString = \"Default logLevel: \" + (this.getTextualNameForDefaultLogLevel() + \"\\n\") + \"Loggers:\\n\";\n            if (this.getLoggerCount() === 0) {\n                loggerInfoString += '(no loggers)\\n';\n            } else {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = this.getLoggerNameArray()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var loggerName = _step.value;\n\n                        var logger = this.getLogger(loggerName);\n                        loggerInfoString += \" - \" + logger.getDebugInfoString() + \"\\n\";\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n            return loggerInfoString;\n        }\n    }]);\n\n    return LoggerSingleton;\n}();\n\nexports.default = LoggerSingleton;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/log/LoggerSingleton.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Defines valid log levels.\n *\n * Not used directly, but instead via the LOGLEVEL\n * constant exported as default by this module.\n *\n * @example\n * import LOGLEVEL from 'ievv_jsbase/log/loglevel';\n * console.log('The debug loglevel is:', LOGLEVEL.DEBUG);\n * LOGLEVEL.validateLogLevel(10);\n */\nvar LogLevels = exports.LogLevels = function () {\n    function LogLevels() {\n        _classCallCheck(this, LogLevels);\n\n        this._prettyLogLevelNames = {};\n        this._prettyLogLevelNames[this.DEBUG] = 'DEBUG';\n        this._prettyLogLevelNames[this.INFO] = 'INFO';\n        this._prettyLogLevelNames[this.WARNING] = 'WARNING';\n        this._prettyLogLevelNames[this.ERROR] = 'ERROR';\n        this._prettyLogLevelNames[this.SILENT] = 'SILENT';\n    }\n\n    /**\n     * Get the number for log level DEBUG.\n     * @returns {number}\n     */\n\n\n    _createClass(LogLevels, [{\n        key: 'validateLogLevel',\n\n\n        /**\n         * Validate a log level.\n         *\n         * Should be used by all functions/methods that set a log level.\n         *\n         * @param logLevel The loglevel.\n         * @throws {RangeError} If ``logLevel`` is not one\n         *   of:\n         *\n         *   - {@link LogLevels#DEBUG}\n         *   - {@link LogLevels#INFO}\n         *   - {@link LogLevels#WARNING}\n         *   - {@link LogLevels#ERROR}\n         *   - {@link LogLevels#SILENT}\n         */\n        value: function validateLogLevel(logLevel) {\n            if (logLevel > this.DEBUG || logLevel < this.SILENT) {\n                throw new RangeError('Invalid log level: ' + logLevel + ', must be between ' + (this.SILENT + ' (SILENT) and ' + this.DEBUG + ' (DEBUG)'));\n            }\n        }\n\n        /**\n         * Get the textual name for a log level.\n         *\n         * @param {number} logLevel The log level to get a textual name for.\n         * @returns {string}\n         *\n         * @example\n         * const infoText = LOGLEVEL.getTextualNameForLogLevel(LOGLEVEL.INFO);\n         * // infoText === 'INFO'\n         */\n\n    }, {\n        key: 'getTextualNameForLogLevel',\n        value: function getTextualNameForLogLevel(logLevel) {\n            return this._prettyLogLevelNames[logLevel];\n        }\n    }, {\n        key: 'DEBUG',\n        get: function get() {\n            return 4;\n        }\n\n        /**\n         * Get the number for log level INFO.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'INFO',\n        get: function get() {\n            return 3;\n        }\n\n        /**\n         * Get the number for log level WARNING.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'WARNING',\n        get: function get() {\n            return 2;\n        }\n\n        /**\n         * Get the number for log level ERROR.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'ERROR',\n        get: function get() {\n            return 1;\n        }\n\n        /**\n         * Get the number for log level SILENT.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'SILENT',\n        get: function get() {\n            return 0;\n        }\n    }]);\n\n    return LogLevels;\n}();\n\nvar LOGLEVEL = new LogLevels();\nexports.default = LOGLEVEL;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/log/loglevel.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = makeCustomError;\n/**\n * Make a custom error \"class\".\n *\n * Makes an old style prototype based error class.\n *\n * @example <caption>Typical usage</caption>\n * // In myerrors.js\n * export let MyCustomError = makeCustomError('MyCustomError');\n *\n * // Using the error\n * import {MyCustomError} from './myerrors';\n * throw new MyCustomError('The message');\n *\n * @example <caption>Throwing the error - complete example</caption>\n * try {\n *     throw new MyCustomError('The message', {\n *          code: 'stuff_happened',\n *          details: {\n *              size: 10\n *          }\n *     });\n * } catch(e) {\n *     if(e instanceof MyCustomError) {\n *         console.error(`${e.toString()} -- Code: ${e.code}. Size: ${e.details.size}`);\n *     }\n * }\n *\n * @example <caption>Define an error that extends Error</caption>\n * let NotFoundError = makeCustomError('NotFoundError');\n * // error instanceof NotFoundError === true\n * // error instanceof Error === true\n *\n * @example <caption>Define an error that extends a built in error</caption>\n * let MyValueError = makeCustomError('MyValueError', TypeError);\n * let error = new MyValueError();\n * // error instanceof MyValueError === true\n * // error instanceof TypeError === true\n * // error instanceof Error === true\n *\n * @example <caption>Define an error that extends another custom error</caption>\n * let MySuperError = makeCustomError('MySuperError', TypeError);\n * let MySubError = makeCustomError('MySubError', MySuperError);\n * let error = new MySubError();\n * // error instanceof MySubError === true\n * // error instanceof MySuperError === true\n * // error instanceof TypeError === true\n * // error instanceof Error === true\n *\n * @param {string} name The name of the error class.\n * @param {Error} extendsError An optional Error to extend.\n *      Defaults to {@link Error}. Can be a built in error\n *      or a custom error created by this function.\n * @returns {Error} The created error class.\n */\nfunction makeCustomError(name, extendsError) {\n    extendsError = extendsError || Error;\n    var CustomError = function CustomError(message, properties) {\n        this.message = message;\n        var last_part = new extendsError().stack.match(/[^\\s]+$/);\n        this.stack = this.name + \" at \" + last_part;\n        if (typeof properties !== 'undefined') {\n            Object.assign(this, properties);\n        }\n    };\n    Object.setPrototypeOf(CustomError, extendsError);\n    CustomError.prototype = Object.create(extendsError.prototype);\n    CustomError.prototype.constructor = CustomError;\n    CustomError.prototype.message = \"\";\n    CustomError.prototype.name = name;\n    return CustomError;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/makeCustomError.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * HTML parser.\n *\n * Takes a HTML string, creates a temporary DOM document,\n * sets the HTML as innerHTML of the body of the temporary\n * document, and provides methods for extracting elements\n * from the temporary document.\n *\n * @example <caption>Parse a single html element and get the Element</caption>\n * let htmlParser = new HtmlParser('<div>Test</div>');\n * let divElement = htmlParser.firstRootElement;\n *\n * @example <caption>Parse multiple html elements</caption>\n * let htmlParser = new HtmlParser('<div>Test</div><p>Test 2</p>');\n * let elements = htmlParser.rootElements;\n *\n * @example <caption>Parse multiple html elements and query them</caption>\n * let htmlParser = new HtmlParser('<div>Test</div><p>Test 2</p>');\n * let elements = htmlParser.rootElements;\n *\n * @example <caption>Parse multiple html elements and query them</caption>\n * let htmlParser = new HtmlParser('<p>Test P 1</p><div>Test DIV</div><p>Test P 2</p>');\n * let divElement = htmlParser.querySelector('div');\n * let pElements = htmlParser.querySelectorAll('p');\n *\n * @example <caption>Parse a full HTML document</caption>\n * let htmlParser = new HtmlParser('<html><body><p>Test</p></body></html>');\n * let pElement = htmlParser.firstRootElement;\n */\nvar HtmlParser = function () {\n    /**\n     *\n     * @param {string} htmlString The HTML string to parse.\n     */\n    function HtmlParser(htmlString) {\n        _classCallCheck(this, HtmlParser);\n\n        this._tempDocumentBody = this._parseHtml(htmlString);\n    }\n\n    _createClass(HtmlParser, [{\n        key: \"_parseHtml\",\n        value: function _parseHtml(htmlString) {\n            var tempDocument = document.implementation.createHTMLDocument();\n            tempDocument.body.innerHTML = htmlString;\n            return tempDocument.body;\n        }\n\n        /**\n         * Get the root elements of the parsed document.\n         *\n         * @returns {HTMLCollection}\n         */\n\n    }, {\n        key: \"querySelector\",\n\n\n        /**\n         * Query the body element of the parsed document\n         * using Element.querySelector.\n         *\n         * @param {string} query The query.\n         * @returns {null|Element}\n         */\n        value: function querySelector(query) {\n            return this._tempDocumentBody.querySelector(query);\n        }\n\n        /**\n         * Query the body element of the parsed document\n         * using Element.querySelectorAll.\n         *\n         * @param {string} query The query.\n         * @returns {NodeList}\n         */\n\n    }, {\n        key: \"querySelectorAll\",\n        value: function querySelectorAll(query) {\n            return Array.from(this._tempDocumentBody.querySelectorAll(query));\n        }\n    }, {\n        key: \"rootElements\",\n        get: function get() {\n            return this._tempDocumentBody.children;\n        }\n\n        /**\n         * Get the first root element of the parsed document.\n         *\n         * @returns {null|Element}\n         */\n\n    }, {\n        key: \"firstRootElement\",\n        get: function get() {\n            return this.rootElements[0];\n        }\n    }]);\n\n    return HtmlParser;\n}();\n\nexports.default = HtmlParser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/dom/HtmlParser.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _HttpJsonResponse = require(\"./HttpJsonResponse\");\n\nvar _HttpJsonResponse2 = _interopRequireDefault(_HttpJsonResponse);\n\nvar _HttpRequest2 = require(\"./HttpRequest\");\n\nvar _HttpRequest3 = _interopRequireDefault(_HttpRequest2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Extends HttpRequest with transparent JSON request/response handling.\n */\nvar JsonHttpRequest = function (_HttpRequest) {\n  _inherits(JsonHttpRequest, _HttpRequest);\n\n  function JsonHttpRequest() {\n    _classCallCheck(this, JsonHttpRequest);\n\n    return _possibleConstructorReturn(this, (JsonHttpRequest.__proto__ || Object.getPrototypeOf(JsonHttpRequest)).apply(this, arguments));\n  }\n\n  _createClass(JsonHttpRequest, [{\n    key: \"makeRequestBody\",\n\n    /**\n     * Overridden to automatically convert request data to JSON.\n     */\n    value: function makeRequestBody(data) {\n      return JSON.stringify(data);\n    }\n\n    /**\n     * Overridden to return the response as a\n     * {@link HttpJsonResponse} instead if a HttpResponse.\n     *\n     * @returns {HttpJsonResponse}\n     */\n\n  }, {\n    key: \"makeResponse\",\n    value: function makeResponse() {\n      return new _HttpJsonResponse2.default(this.request);\n    }\n\n    /**\n     * Overridden to ensure we send the correct content-type header for\n     * json requests.\n     */\n\n  }, {\n    key: \"setDefaultRequestHeaders\",\n    value: function setDefaultRequestHeaders(method) {\n      _get(JsonHttpRequest.prototype.__proto__ || Object.getPrototypeOf(JsonHttpRequest.prototype), \"setDefaultRequestHeaders\", this).call(this, method);\n      this.setRequestHeader('Accept', 'application/json');\n      this.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n    }\n  }]);\n\n  return JsonHttpRequest;\n}(_HttpRequest3.default);\n\nexports.default = JsonHttpRequest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/HttpJsonRequest.js\n// module id = 7\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.HttpResponseError = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = require(\"../makeCustomError\");\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Error class created by {@link HttpResponse#toError}.\n *\n * @type {Error}\n */\nvar HttpResponseError = exports.HttpResponseError = (0, _makeCustomError2.default)('HttpResponseError');\n\n/**\n * HTTP response.\n *\n * Wraps a XMLHttpRequest to make it easier to get\n * information about the response from the server.\n */\n\nvar HttpResponse = function () {\n    /**\n     *\n     * @param request A XMLHttpRequest object.\n     */\n    function HttpResponse(request) {\n        _classCallCheck(this, HttpResponse);\n\n        this.request = request;\n    }\n\n    /**\n     * Returns ``true`` if {@link HttpResponse#status} is\n     * 200 or larger and less than 300.\n     */\n\n\n    _createClass(HttpResponse, [{\n        key: \"isSuccess\",\n        value: function isSuccess() {\n            return this.status >= 200 && this.status < 300;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is\n         * 300 or larger and less than 400.\n         */\n\n    }, {\n        key: \"isRedirect\",\n        value: function isRedirect() {\n            return this.status >= 300 && this.status < 400;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is\n         * 400 or larger and less than 500.\n         */\n\n    }, {\n        key: \"isClientError\",\n        value: function isClientError() {\n            return this.status >= 400 && this.status < 500;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is\n         * 500 or larger.\n         */\n\n    }, {\n        key: \"isServerError\",\n        value: function isServerError() {\n            return this.status >= 500;\n        }\n\n        /**\n         * Returns ``true`` if {@link HttpResponse#status} is 0.\n         * Assuming the XMLHttpRequest was actually sent, this\n         * means that the connection was refused.\n         */\n\n    }, {\n        key: \"isConnectionRefused\",\n        value: function isConnectionRefused() {\n            return this.status === 0;\n        }\n\n        /**\n         * Get the status code of the response (the status attribute of the XMLHttpRequest).\n         */\n\n    }, {\n        key: \"responseHeaderToString\",\n\n\n        /**\n         * Get the response header as string.\n         */\n        value: function responseHeaderToString() {\n            if (this.connectionRefused) {\n                return \"ERROR: Connection refused\";\n            } else {\n                return \"HTTP \" + this.status + \"\\n\" + this.request.getAllResponseHeaders();\n            }\n        }\n\n        /**\n         * Create a {@link HttpResponseError} from this HttpResponse.\n         *\n         * @returns {HttpResponseError} An HttpResponseError with this HttpResponse\n         *      as the ``response`` property.\n         */\n\n    }, {\n        key: \"toError\",\n        value: function toError() {\n            return new HttpResponseError(this.toString(), {\n                response: this\n            });\n        }\n\n        /**\n         * Get {@link HttpResponse#body} pretty formatted.\n         *\n         * By default, this just returns {@link HttpResponse#body}\n         * but subclasses can override this to prettify the body\n         * if they know the output format of the body.\n         */\n\n    }, {\n        key: \"getPrettyfiedBody\",\n        value: function getPrettyfiedBody() {\n            return this.body;\n        }\n\n        /**\n         * Format as a string suitable for debugging.\n         */\n\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return this.responseHeaderToString() + \"\\n\\n\" + this.getPrettyfiedBody();\n        }\n    }, {\n        key: \"status\",\n        get: function get() {\n            return this.request.status;\n        }\n\n        /**\n         * Get the response body (the responseText attribute of the XMLHttpRequest).\n         */\n\n    }, {\n        key: \"body\",\n        get: function get() {\n            return this.request.responseText;\n        }\n    }]);\n\n    return HttpResponse;\n}();\n\nexports.default = HttpResponse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/HttpResponse.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = typeDetect;\n/**\n * Detect the type of an object and return the\n * result as a string.\n *\n * Handles the following types:\n *\n * - null  (returned as ``\"null\"``).\n * - undefined  (returned as ``\"undefined\"``).\n * - Number  (returned as ``\"number\"``).\n * - Boolean  (returned as ``\"boolean\"``).\n * - String  (returned as ``\"string\"``).\n * - Array  (returned as ``\"array\"``).\n * - Map  (returned as ``\"map\"``).\n * - Set  (returned as ``\"set\"``).\n * - Function  (returned as ``\"function\"``).\n * - Object  (returned as ``\"object\"``).\n *\n * We do not handle classes - they are returned as ``\"function\"``.\n * We could handle classes, but for Babel classes that will require\n * a fairly expensive and error prone regex.\n *\n * @param obj An object to detect the type for.\n * @returns {string}\n */\nfunction typeDetect(obj) {\n    if (obj === null) {\n        return 'null';\n    }\n    var typeOf = typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    if (typeOf === 'undefined') {\n        return 'undefined';\n    }\n    if (typeOf === 'number') {\n        return 'number';\n    }\n    if (typeOf === 'boolean') {\n        return 'boolean';\n    }\n    if (typeOf === 'string') {\n        return 'string';\n    }\n    if (typeOf === 'function') {\n        return 'function';\n    }\n    if (Array.isArray(obj)) {\n        return 'array';\n    }\n    if (obj instanceof Map) {\n        return 'map';\n    }\n    if (obj instanceof Set) {\n        return 'set';\n    }\n    return 'object';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/utils/typeDetect.js\n// module id = 9\n// module chunks = 0","/*\nFallback implementations for the Django i18n translation catalog\nfunctions.\n\nSee:\nhttps://docs.djangoproject.com/en/2.0/topics/i18n/translation/\n\nWe only add the translation functions to ``window`` if they\nare not already there. This means that this can be included\nboth before and after loading the Django i18n javascript catalog.\n*/\n\nif (!window.gettext) {\n  window.gettext = function (msgid) {\n    return msgid\n  }\n  if (process.env.NODE_ENV !== 'test') {\n    console.warn(\n      'window.gettext is not defined. Patching window.gettext and related ' +\n      'functions with noop fallbacks. ' +\n      'Make sure you import/include a full gettext translation system like ' +\n      'the Django JavascriptCatalog view before ievv_jsbase or any javascript using ' +\n      'ievv_jsbase to get translations.'\n    )\n  }\n}\n\nif (!window.pluralidx) {\n  window.pluralidx = function (count) {\n    return (count === 1) ? 0 : 1\n  }\n}\n\nif (!window.ngettext) {\n  window.ngettext = function (singular, plural, count) {\n    return (count === 1) ? singular : plural\n  }\n}\n\nif (!window.gettext_noop) {\n  window.gettext_noop = function (msgid) {\n    return msgid\n  }\n}\n\nif (!window.pgettext) {\n  window.pgettext = function (context, msgid) {\n    return msgid\n  }\n}\n\nif (!window.npgettext) {\n  window.npgettext = function (context, singular, plural, count) {\n    return (count === 1) ? singular : plural\n  }\n}\n\nif (!window.interpolate) {\n  window.interpolate = function (fmt, obj, named) {\n    if (named) {\n      return fmt.replace(/%\\(\\w+\\)s/g, function (match) {\n        return String(obj[match.slice(2, -2)])\n      })\n    } else {\n      return fmt.replace(/%s/g, function (match) {\n        return String(obj.shift())\n      })\n    }\n  }\n}\n\nif (!window.get_format) {\n  window.get_format = function (format_type) {\n    return format_type\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/javascript/utils/i18nFallbacks.js","import AbstractWidget from \"ievv_jsbase/lib/widget/AbstractWidget\";\nimport SignalHandlerSingleton from \"ievv_jsbase/lib/SignalHandlerSingleton\";\n\nexport default class DownloadCompressedArchiveDownloadLinkWidget extends AbstractWidget {\n  constructor(element) {\n    super(element);\n    this._onFinishedSignal = this._onFinishedSignal.bind(this);\n    this.signalHandler = new SignalHandlerSingleton();\n    this.signalHandler.addReceiver(\n      `${this.config.signalNameSpace}.Finished`,\n      `${this.config.signalNameSpace}.DownloadLinkReceiver`,\n      this._onFinishedSignal);\n  }\n\n  _onFinishedSignal(receivedSignalInfo) {\n    console.log('FINISHED', receivedSignalInfo.data);\n    this.element.setAttribute('href', receivedSignalInfo.data.download_link);\n  }\n\n  destroy() {\n    this.signalHandler.removeAllSignalsFromReceiver(\n      `${this.config.signalNameSpace}.DownloadLinkReceiver`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/javascript/widgets/DownloadCompressedArchiveDownloadLinkWidget.js","import AbstractWidget from \"ievv_jsbase/lib/widget/AbstractWidget\";\nimport SignalHandlerSingleton from \"ievv_jsbase/lib/SignalHandlerSingleton\";\n\nexport default class DownloadCompressedArchiveStartButtonWidget extends AbstractWidget {\n  constructor(element) {\n    super(element);\n    this._onClick = this._onClick.bind(this);\n    this.signalHandler = new SignalHandlerSingleton();\n    this.element.addEventListener('click', this._onClick);\n  }\n\n  _onClick(event) {\n    event.preventDefault();\n    this.signalHandler.send(`${this.config.signalNameSpace}.Start`);\n  }\n\n  destroy() {\n    this.element.removeEventListener('click', this._onClick);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/javascript/widgets/DownloadCompressedArchiveStartButtonWidget.js","import AbstractWidget from \"ievv_jsbase/lib/widget/AbstractWidget\";\nimport HttpDjangoJsonRequest from \"ievv_jsbase/lib/http/HttpDjangoJsonRequest\";\nimport HttpJsonRequest from \"ievv_jsbase/lib/http/HttpJsonRequest\";\nimport SignalHandlerSingleton from \"ievv_jsbase/lib/SignalHandlerSingleton\";\nimport LoggerSingleton from \"ievv_jsbase/lib/log/LoggerSingleton\";\n\nexport default class DownloadCompressedArchiveWidget extends AbstractWidget {\n  constructor(element) {\n    super(element);\n    this.status = null;\n    this.cssClassPrefix = 'devilry-batchprocessed-download';\n    this.pollCount = 0;\n    this.statuses = [\n      'none',\n      'not-created',\n      'not-started',\n      'running',\n      'finished'];\n    this._onStartSignal = this._onStartSignal.bind(this);\n    this.logger = new LoggerSingleton().getLogger(\n      'devilry.DownloadCompressedArchiveWidget');\n    this.signalHandler = new SignalHandlerSingleton();\n    this.processingStartedTime = null;\n    this.signalHandler.addReceiver(\n      `${this.config.signalNameSpace}.Start`,\n      `${this.config.signalNameSpace}.MainReceiver`,\n      this._onStartSignal);\n\n    this._requestStatusUpdate();\n  }\n\n  _updateCssClassesFromStatus() {\n    this.element.classList.remove(`${this.cssClassPrefix}--finished-within-same-session`);\n    for(let status of this.statuses) {\n      this.element.classList.remove(`${this.cssClassPrefix}--${status}`);\n    }\n    this.element.classList.add(`${this.cssClassPrefix}--${this.status}`);\n    if(this.status == 'finished' && this.processingStartedTime != null) {\n      this.element.classList.add(`${this.cssClassPrefix}--finished-within-same-session`);\n    }\n  }\n\n  _requestStatusUpdate() {\n    if(this.isLoading) {\n      return;\n    }\n    new HttpJsonRequest(this.config.apiurl).get()\n      .then((response) => {\n        this._handleApiResponse(response, 'GET');\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  _handleFinishedStatus(response) {\n    this.logger.debug('Download finished processing', response.bodydata);\n    this.element.setAttribute('href', response.bodydata.download_link);\n    this.signalHandler.send(`${this.config.signalNameSpace}.Finished`,\n      response.bodydata);\n  }\n\n  _handleNoFilesStatus() {\n    this.element.style.display = 'none';\n  }\n\n  get _pollDelayMilliseconds() {\n    if(this.pollCount < 3) {\n      return 700;\n    } else if(this.pollCount < 10) {\n      return 2000;\n    } else {\n      return 5000;\n    }\n  }\n\n  _handleApiResponse(response, method) {\n    this.pollCount ++;\n    this.logger.debug(`${method} ${this.config.apiurl}:`, response.bodydata);\n    this.status = response.bodydata.status;\n    this._updateCssClassesFromStatus();\n    if(this.status == 'not-created') {\n      return;  // Do nothing - wait for someone to click the button and start the processing\n    }\n    if(this.status == 'not-started' || this.status == 'running') {\n      window.setTimeout(() => {\n        this._requestStatusUpdate();\n      }, this._pollDelayMilliseconds);\n    } else if(this.status == 'finished') {\n      this._handleFinishedStatus(response);\n    } else if(this.status == 'no-files') {\n      this._handleNoFilesStatus(response);\n    } else {\n      throw new Error(`Invalid status: ${this.status}`);\n    }\n  }\n\n  _onStartSignal() {\n    this.logger.debug('Start signal received');\n    if(this.status == 'finished') {\n      return;\n    }\n    this.processingStartedTime = new Date();\n    new HttpDjangoJsonRequest(this.config.apiurl).post()\n      .then((response) => {\n        this._handleApiResponse(response, 'POST');\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  destroy() {\n    this.signalHandler.removeAllSignalsFromReceiver(\n      `${this.config.signalNameSpace}.MainReceiver`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/javascript/widgets/DownloadCompressedArchiveWidget.js","import AbstractWidget from \"ievv_jsbase/lib/widget/AbstractWidget\";\nimport HtmlParser from \"ievv_jsbase/lib/dom/HtmlParser\";\nimport SignalHandlerSingleton from 'ievv_jsbase/lib/SignalHandlerSingleton';\nimport LoggerSingleton from \"ievv_jsbase/lib/log/LoggerSingleton\";\n\n\nexport default class GradingConfigurationCustomTableWidget extends AbstractWidget {\n  getDefaultConfig() {\n    return {\n      signalNameSpace: 'gradingConfiguration'\n    }\n  }\n\n  constructor(element) {\n    super(element);\n    if(this.config.signalNameSpace == null) {\n      throw new Error('The signalNameSpace config is required.');\n    }\n    this._name = `devilry.GradingConfigurationCustomTableWidget.${this.config.signalNameSpace}`;\n    this.logger = new LoggerSingleton().getLogger(\n      'devilry.GradingConfigurationCustomTableWidget');\n    this._onRemoveRow = this._onRemoveRow.bind(this);\n    this._onGradeInputChange = this._onGradeInputChange.bind(this);\n    this._onPointInputChange = this._onPointInputChange.bind(this);\n    this._onAddRowSignal = this._onAddRowSignal.bind(this);\n    this._onSetRowsSignal = this._onSetRowsSignal.bind(this);\n    this._signalHandler = new SignalHandlerSingleton();\n    this._initializeSignalHandlers();\n  }\n\n  _initializeSignalHandlers() {\n    this._signalHandler.addReceiver(\n      `${this.config.signalNameSpace}.AddCustomTableRow`,\n      this._name,\n      this._onAddRowSignal);\n    this._signalHandler.addReceiver(\n      `${this.config.signalNameSpace}.SetCustomTableRows`,\n      this._name,\n      this._onSetRowsSignal);\n  }\n\n  destroy() {\n    this._signalHandler.removeAllSignalsFromReceiver(this._name);\n  }\n\n  _getRowChildElements(rowElement) {\n    let childElements = {\n      gradeInput: rowElement.children[0].children[0],\n      pointInput: rowElement.children[1].children[0],\n    };\n    if(rowElement.children.length > 2) {\n      childElements['removeButton'] = rowElement.children[2].children[0];\n    }\n    return childElements;\n  }\n\n  _getPointsFromRowElement(rowElement) {\n    const points = parseInt(rowElement.children[1].children[0].value, 10);\n    if(isNaN(points)) {\n      return null;\n    }\n    return points;\n  }\n\n  _getGradeFromRowElement(rowElement) {\n    return rowElement.children[0].children[0].value;\n  }\n\n  _moveToCorrectPlace(rowElement) {\n    const points = this._getPointsFromRowElement(rowElement);\n    if(points != null) {\n      for (let currentRowElement of Array.from(this.element.children)) {\n        if (rowElement == currentRowElement) {\n          continue;\n        }\n        let currentPoints = this._getPointsFromRowElement(currentRowElement);\n        if (currentPoints == null || points < currentPoints) {\n          this.element.insertBefore(rowElement, currentRowElement);\n          return;\n        }\n      }\n    }\n    this.element.appendChild(rowElement);\n  }\n\n  _addRow(grade, minimumPoints) {\n    const translatedRemoveText = window.gettext('remove');\n    let parser = new HtmlParser(`\n      <div class=\"devilry-tabulardata-list__row\">\n        <div class=\"devilry-tabulardata-list__cell\">\n          <input class=\"textinput textInput form-control form-control\"\n                 maxlength=\"12\"\n                 value=\"${grade}\"\n                 type=\"text\">\n        </div>\n        <div class=\"devilry-tabulardata-list__cell\">\n          <input class=\"numberinput form-control form-control\"\n                 value=\"${minimumPoints}\"\n                 type=\"number\"\n                 min=\"1\" step=\"1\">\n        </div>\n        <div class=\"devilry-tabulardata-list__cell\">\n          <button class=\"btn btn-danger\" type=\"button\">\n              ${translatedRemoveText}\n          </button>\n        </div>\n      </div>\n    `);\n    const rowElement = parser.firstRootElement;\n    this.element.appendChild(rowElement);\n    let childElements = this._getRowChildElements(rowElement);\n    childElements.pointInput.addEventListener('change', this._onPointInputChange);\n    childElements.gradeInput.addEventListener('change', this._onGradeInputChange);\n    if(childElements.removeButton) {\n      childElements.removeButton.addEventListener('click', this._onRemoveRow);\n    }\n    if(this.element.children[0] == rowElement) {\n      childElements.removeButton.parentElement.removeChild(childElements.removeButton);\n      childElements.pointInput.removeAttribute('min');\n      childElements.pointInput.disabled = true;\n      childElements.pointInput.value = 0;\n    }\n    return rowElement;\n  }\n\n  _removeRow(rowElement) {\n    let childElements = this._getRowChildElements(rowElement);\n    if(childElements.removeButton) {\n      childElements.removeButton.removeEventListener('click', this._onRemoveRow);\n    }\n    rowElement.parentElement.removeChild(rowElement);\n    this._sendValueChangeSignal();\n  }\n\n  _clear() {\n    for(let rowElement of Array.from(this.element.children)) {\n      this._removeRow(rowElement);\n    }\n  }\n\n  _buildTable(valueList) {\n    this._clear();\n    for(let valueObject of valueList) {\n      this._addRow(valueObject[1], valueObject[0]);\n    }\n  }\n\n  _getCurrentValueList() {\n    let values = [];\n    for(let rowElement of Array.from(this.element.children)) {\n      let points = this._getPointsFromRowElement(rowElement);\n      let grade = this._getGradeFromRowElement(rowElement) || '';\n      grade = grade.trim();\n      if(points != null && grade != '') {\n        values.push([points, grade]);\n      }\n    }\n    return values;\n  }\n\n  _sendValueChangeSignal() {\n    this._signalHandler.send(\n      `${this.config.signalNameSpace}.CustomTableValueChange`,\n      this._getCurrentValueList());\n  }\n\n  _onGradeInputChange(event) {\n    const value = event.target.value;\n    this._sendValueChangeSignal();\n  }\n\n  _onPointInputChange(event) {\n    let pointInputElement = event.target;\n    let rowElement = pointInputElement.parentElement.parentElement;\n    this._moveToCorrectPlace(rowElement);\n    this._sendValueChangeSignal();\n  }\n\n  _onSetRowsSignal(receivedSignalInfo) {\n    const valueList = receivedSignalInfo.data.valueList;\n    const sendValueChangeSignal = receivedSignalInfo.data.sendValueChangeSignal;\n    this._buildTable(valueList);\n    if(sendValueChangeSignal) {\n      this._sendValueChangeSignal();\n    }\n  }\n\n  _onAddRowSignal(receivedSignalInfo) {\n    let rowElement = this._addRow(receivedSignalInfo.data.grade, receivedSignalInfo.data.points);\n    this._getRowChildElements(rowElement).gradeInput.focus();\n  }\n\n  _onRemoveRow(event) {\n    event.preventDefault();\n    let removeButton = event.target;\n    let rowElement = removeButton.parentElement.parentElement;\n    this._removeRow(rowElement);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/javascript/widgets/GradingConfigurationCustomTableWidget.js","import AbstractWidget from \"ievv_jsbase/lib/widget/AbstractWidget\";\nimport HtmlParser from \"ievv_jsbase/lib/dom/HtmlParser\";\nimport SignalHandlerSingleton from 'ievv_jsbase/lib/SignalHandlerSingleton';\nimport LoggerSingleton from \"ievv_jsbase/lib/log/LoggerSingleton\";\n\n\nexport default class GradingConfigurationWidget extends AbstractWidget {\n\n  getDefaultConfig() {\n    return {\n      signalNameSpace: 'gradingConfiguration'\n    };\n  }\n\n  constructor(element) {\n    super(element);\n    if(this.config.signalNameSpace == null) {\n      throw new Error('The signalNameSpace config is required.');\n    }\n    this._name = `devilry.GradingConfigurationWidget.${this.config.signalNameSpace}`;\n    this._signalHandler = new SignalHandlerSingleton();\n    this.logger = new LoggerSingleton().getLogger(\n      'devilry.GradingConfigurationWidget');\n    this._onPluginIdRadioChange = this._onPluginIdRadioChange.bind(this);\n    this._onPointsToGradeMapperRadioChange = this._onPointsToGradeMapperRadioChange.bind(this);\n    this._onPassingGradeMinPointsChange = this._onPassingGradeMinPointsChange.bind(this);\n    this._onAddCustomTableRow = this._onAddCustomTableRow.bind(this);\n    this._onSetupCustomTableAtoFExample = this._onSetupCustomTableAtoFExample.bind(this);\n    this._onCustomTableValueChangeSignal = this._onCustomTableValueChangeSignal.bind(this);\n\n    this.pluginIdElements = this._getPluginIdElements();\n    this.passingGradeMinPointsWrapperElement = document.getElementById('div_id_passing_grade_min_points');\n    this.passingGradeMinPointsInputElement = document.getElementById('id_passing_grade_min_points');\n    this.maxPointsLabelElement = this.element.querySelector('#div_id_max_points label');\n    this.maxPointsHelpTextElement = document.getElementById('hint_id_max_points');\n    this.maxPointsInputElement = document.getElementById('id_max_points');\n    this.pointsToGradeMapperElements = this._getPointsToGradeMapperElements();\n    this.customTableWrapperElement = document.getElementById(\n      'id_custom_table_wrapper');\n    this.customTableAddRowButton = document.getElementById('id_custom_table_add_row_button');\n    this.customTableSetuAtoFExampleButton = document.getElementById('id_custom_table_setup_atof_example_button');\n    this.pointToGradeMapJsonElement = document.getElementById('id_point_to_grade_map_json');\n\n    this._state = {};\n    this._initializeSignalHandlers();\n  }\n\n  useAfterInitializeAllWidgets() {\n    return true;\n  }\n\n  afterInitializeAllWidgets() {\n    const initialPluginId = this.element.querySelector(\n      '#div_id_grading_system_plugin_id input[checked]').value;\n    const initialPointsToGradeMapper = this.element.querySelector(\n      '#div_id_points_to_grade_mapper input[checked]').value;\n    const initialPointToGradeMapString = this.pointToGradeMapJsonElement.value;\n    let initialPassingGradeMinPoints = parseInt(this.passingGradeMinPointsInputElement.value);\n    if(isNaN(initialPassingGradeMinPoints)) {\n      initialPassingGradeMinPoints = null;\n    }\n    let initialMaxPoints = parseInt(this.maxPointsInputElement.value);\n    if(isNaN(initialMaxPoints)) {\n      initialMaxPoints = null;\n    }\n\n    let initialPointToGradeMap = [];\n    if(initialPointToGradeMapString != undefined && initialPointToGradeMapString != null && initialPointToGradeMapString != '') {\n      initialPointToGradeMap = JSON.parse(initialPointToGradeMapString);\n    }\n    if(initialPointToGradeMap.length == 0 || initialPointToGradeMap[0][0] != 0) {\n      initialPointToGradeMap = [[0, '']];\n    }\n    this._setState({\n      // grading_system_plugin_id: 'devilry_gradingsystemplugin_points',\n      // points_to_grade_mapper: 'custom-table',\n      // point_to_grade_map: this._getCustomTableAtoFExampleConfig()\n      grading_system_plugin_id: initialPluginId,\n      points_to_grade_mapper: initialPointsToGradeMapper,\n      point_to_grade_map: initialPointToGradeMap,\n      passing_grade_min_points: initialPassingGradeMinPoints,\n      max_points: initialMaxPoints\n    }, true);\n    this._addEventListeners();\n  }\n\n  _initializeSignalHandlers() {\n    this._signalHandler.addReceiver(\n      `${this.config.signalNameSpace}.CustomTableValueChange`,\n      this._name,\n      this._onCustomTableValueChangeSignal);\n  }\n\n  _setState(statePatch, initial=false) {\n    let oldState = Object.assign({}, this._state);\n    this._state = Object.assign({}, this._state, statePatch);\n    // console.log('statePatch', statePatch);\n    // console.log('oldState', oldState);\n    // console.log('newState', this._state);\n\n    if(initial) {\n      this.pluginIdElements[this._state.grading_system_plugin_id].input.checked = true;\n      this.pointsToGradeMapperElements[this._state.points_to_grade_mapper].input.checked = true;\n      this._signalHandler.send(\n        `${this.config.signalNameSpace}.SetCustomTableRows`, {\n          valueList: this._state.point_to_grade_map,\n          sendValueChangeSignal: false\n        });\n    }\n    if(this._state.grading_system_plugin_id == 'devilry_gradingsystemplugin_approved' && this._state.points_to_grade_mapper == 'custom-table') {\n      this._state.points_to_grade_mapper = 'passed-failed';\n    }\n\n    if(this._state.grading_system_plugin_id != oldState.grading_system_plugin_id) {\n      this._updateUiForPlugin();\n    }\n    if(this._state.points_to_grade_mapper != oldState.points_to_grade_mapper) {\n      this._updateUiForPointsToGradeMapper();\n    }\n    if(this._state.point_to_grade_map != oldState.point_to_grade_map) {\n      this.pointToGradeMapJsonElement.value = JSON.stringify(this._state.point_to_grade_map);\n      this._updateUiForPointsToGradeMapper();\n    }\n  }\n\n  _updateUiForPlugin() {\n    let pluginId = this._state.grading_system_plugin_id;\n    if(pluginId == 'devilry_gradingsystemplugin_approved') {\n      this._updateUiForApprovedPlugin();\n    } else if(pluginId == 'devilry_gradingsystemplugin_points') {\n      this._updateUiForPointsPlugin();\n    } else {\n      throw new Error(`Unsupported grading_system_plugin: \"${pluginId}\"`);\n    }\n  }\n\n  _updateUiForApprovedPlugin() {\n    this.passingGradeMinPointsWrapperElement.style.display = 'none';\n    this._hidePointsToGradeMapperCustomTableChoice();\n    const pluginConfig = this.config['devilry_gradingsystemplugin_approved'];\n    this._updateUiLabels(pluginConfig);\n  }\n\n  _updateUiForPointsPlugin() {\n    this.passingGradeMinPointsWrapperElement.style.display = 'block';\n    this._showPointsToGradeMapperCustomTableChoice();\n    const pluginConfig = this.config['devilry_gradingsystemplugin_points'];\n    this._updateUiLabels(pluginConfig);\n  }\n\n\n  _renderPassingGradeMinPointsField() {\n    let parentElement = this.passingGradeMinPointsInputElement.parentElement;\n    parentElement.removeChild(this.passingGradeMinPointsInputElement);\n    let fieldHtml = '';\n    if(this._state.points_to_grade_mapper == 'custom-table') {\n      fieldHtml = this._getPassingGradeMinPointsCustomTableSelectFieldHtml();\n    } else {\n      fieldHtml = this._getPassingGradeMinPointsInputFieldHtml();\n    }\n    let parser = new HtmlParser(fieldHtml);\n    const selectElement = parser.firstRootElement;\n    this.passingGradeMinPointsInputElement = selectElement;\n    parentElement.insertBefore(selectElement, parentElement.children[0]);\n    selectElement.addEventListener('change', this._onPassingGradeMinPointsChange);\n  }\n\n  _getPassingGradeMinPointsCustomTableSelectFieldHtml() {\n    let options = '<option value=\"\"></option>';\n    let hasSelectedOption = false;\n    for(let pointToGrade of this._state.point_to_grade_map) {\n      let points = pointToGrade[0];\n      let grade = pointToGrade[1];\n      let selected = '';\n      if(points == this._state.passing_grade_min_points && !hasSelectedOption) {\n        selected = 'selected';\n        hasSelectedOption = true;\n      }\n      options += `<option value=\"${points}\" ${selected}>${points} (${grade})</option>`;\n    }\n    return `<select name=\"passing_grade_min_points\" class=\"form-control\">${options}</select>`;\n  }\n\n  _getPassingGradeMinPointsInputFieldHtml() {\n    let value = this._state.passing_grade_min_points;\n    if(value == null) {\n      value = '';\n    }\n    return `<input type=\"number\" name=\"passing_grade_min_points\" \n                   value=\"${value}\"\n                   min=\"0\" step=\"1\"\n                   class=\"form-control\"/>`;\n  }\n\n  _updateUiForPointsToGradeMapper() {\n    let mapper = this._state.points_to_grade_mapper;\n    if(mapper == 'custom-table') {\n      this.customTableWrapperElement.style.display = 'block';\n    } else {\n      this.customTableWrapperElement.style.display = 'none';\n    }\n    this._renderPassingGradeMinPointsField();\n  }\n\n  _getPluginIdElements() {\n    const inputElements = Array.from(this.element.querySelectorAll(\n      '#div_id_grading_system_plugin_id input[type=\"radio\"]'));\n    let pluginIdElements = {};\n    for(let inputElement of inputElements) {\n      pluginIdElements[inputElement.value] = {\n        input: inputElement\n      };\n    }\n    return pluginIdElements;\n  }\n\n  _getPointsToGradeMapperElements() {\n    const inputElements = Array.from(this.element.querySelectorAll(\n      '#div_id_points_to_grade_mapper input[type=\"radio\"]'));\n    let pointsToGradeMapperElements = {};\n    for(let inputElement of inputElements) {\n      pointsToGradeMapperElements[inputElement.value] = {\n        input: inputElement,\n        wrapper: inputElement.parentElement.parentElement\n      };\n    }\n    return pointsToGradeMapperElements;\n  }\n\n  _addEventListeners() {\n    for(let value of Object.keys(this.pluginIdElements)) {\n      let inputElement = this.pluginIdElements[value].input;\n      inputElement.addEventListener(\n        'change', this._onPluginIdRadioChange);\n    }\n    for(let value of Object.keys(this.pointsToGradeMapperElements)) {\n      let inputElement = this.pointsToGradeMapperElements[value].input;\n      inputElement.addEventListener(\n        'change', this._onPointsToGradeMapperRadioChange);\n    }\n    this.customTableAddRowButton.addEventListener('click', this._onAddCustomTableRow);\n    this.customTableSetuAtoFExampleButton.addEventListener('click', this._onSetupCustomTableAtoFExample);\n  }\n\n  destroy() {}\n\n  _hidePointsToGradeMapperCustomTableChoice() {\n    this.pointsToGradeMapperElements['custom-table'].wrapper.style.display = 'none';\n    if(this.pointsToGradeMapperElements['custom-table'].input.checked) {\n      this.pointsToGradeMapperElements['passed-failed'].input.checked = true;\n    }\n  }\n\n  _showPointsToGradeMapperCustomTableChoice() {\n    this.pointsToGradeMapperElements['custom-table'].wrapper.style.display = 'block';\n  }\n\n  _updateUiLabels(pluginConfig) {\n    this.maxPointsLabelElement.innerHTML = pluginConfig['max_points_label'] || '';\n    if(pluginConfig['max_points_help_text'] == '') {\n      this.maxPointsHelpTextElement.style.display = 'none';\n    } else {\n      this.maxPointsHelpTextElement.style.display = 'block';\n      this.maxPointsHelpTextElement.innerHTML = pluginConfig['max_points_help_text'] || '';\n    }\n  }\n\n  _onPluginIdRadioChange(event) {\n    const pluginId = event.target.value;\n    this._setState({\n      grading_system_plugin_id: pluginId\n    });\n  }\n\n  _onPointsToGradeMapperRadioChange(event) {\n    const value = event.target.value;\n    this._setState({\n      points_to_grade_mapper: value\n    });\n  }\n\n  _onAddCustomTableRow(event) {\n    event.preventDefault();\n    this._signalHandler.send(`${this.config.signalNameSpace}.AddCustomTableRow`, {\n      grade: '',\n      points: ''\n    });\n  }\n\n  _getCustomTableAtoFExampleConfig() {\n    return [\n      [0, 'F'],\n      [25, 'D'],\n      [50, 'C'],\n      [75, 'B'],\n      [90, 'A']\n    ];\n  }\n\n  _onSetupCustomTableAtoFExample(event) {\n    event.preventDefault();\n    if (window.confirm(\n        'Are you sure you want to setup the A-F example? Clears the table and inserts new rows.')) {\n      this._signalHandler.send(\n        `${this.config.signalNameSpace}.SetCustomTableRows`,{\n          valueList: this._getCustomTableAtoFExampleConfig(),\n          sendValueChangeSignal: true\n        });\n    }\n  }\n\n  _onCustomTableValueChangeSignal(receivedSignalInfo) {\n    const valueList = receivedSignalInfo.data;\n    this._setState({\n      point_to_grade_map: valueList\n    })\n  }\n\n  _onPassingGradeMinPointsChange(event) {\n    let value = parseInt(event.target.value);\n    if(isNaN(value)) {\n      value = null;\n    }\n    this._setState({\n      passing_grade_min_points: value\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/javascript/widgets/GradingConfigurationWidget.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.HttpCookieNotFoundError = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = require('../makeCustomError');\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Exception raised by {@link HttpCookies#getStrict} when the cookie is not found.\n *\n * @type {Error}\n */\nvar HttpCookieNotFoundError = exports.HttpCookieNotFoundError = (0, _makeCustomError2.default)('HttpCookieNotFoundError');\n\n/**\n * Makes working with ``document.cookie`` easy.\n *\n * @example <caption>Get a cookie named \"name\"</caption>\n * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n * let cookies = HttpCookies();\n * let name = cookies.get('name');\n *\n * @example <caption>Get a cookie named \"pageurl\", with a fallback</caption>\n * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n * let cookies = HttpCookies();\n * let name = cookies.get('pageurl', 'http://example.com');\n *\n * @example <caption>Get a cookie named \"name\" in strict mode</caption>\n * import HttpCookies from 'ievv_jsbase/http/HttpCookies';\n * import {HttpCookieNotFoundError} from 'ievv_jsbase/http/HttpCookies';\n * let cookies = HttpCookies();\n * try {\n *     let name = cookies.getStrict('name');\n * } catch(e) {\n *     if(e instanceof HttpCookieNotFoundError) {\n *         console.error('Cookie not found', e);\n *     } else {\n *         throw e;\n *     }\n * }\n */\n\nvar HttpCookies = function () {\n    /**\n     * @param {string} rawCookies Raw cookies string. This is\n     *      optional - it defaults to ``document.cookie``.\n     */\n    function HttpCookies(rawCookies) {\n        _classCallCheck(this, HttpCookies);\n\n        this.rawCookies = rawCookies || document.cookie;\n        this.cookies = this.__parse();\n    }\n\n    _createClass(HttpCookies, [{\n        key: '__parse',\n        value: function __parse() {\n            var cookies = {};\n            if (this.rawCookies && this.rawCookies !== '') {\n                var cookiesArray = this.rawCookies.split(';');\n                for (var i = 0; i < cookiesArray.length; i++) {\n                    var cookie = cookiesArray[i].trim();\n                    var cookieArray = cookie.split('=', 2);\n                    if (cookieArray.length === 2) {\n                        var name = cookieArray[0];\n                        var value = cookieArray[1];\n                        cookies[name.trim()] = value.trim();\n                    }\n                }\n            }\n            return cookies;\n        }\n\n        /**\n         * Get cookie value.\n         *\n         * @param {string} cookieName The name of the cookie.\n         * @param fallback Fallback value if the cookie with the provided\n         *      ``cookieName`` does not exist.\n         *      Defaults to ``undefined``.\n         * @return {string} The cookie value, or the fallback value if no cookie\n         *      with the provided ``cookieName`` is found.\n         */\n\n    }, {\n        key: 'get',\n        value: function get(cookieName, fallback) {\n            var value = this.cookies[cookieName];\n            if (typeof value === 'undefined') {\n                return fallback;\n            } else {\n                return value;\n            }\n        }\n\n        /**\n         * Get cookie value and throw exception if it is not found.\n         *\n         * @param {string} cookieName The name of the cookie.\n         * @returns {string} The cookie value.\n         * @throws {HttpCookieNotFoundError} If no cookie named ``cookieName`` is found.\n         */\n\n    }, {\n        key: 'getStrict',\n        value: function getStrict(cookieName) {\n            var value = this.get(cookieName);\n            if (typeof value === 'undefined') {\n                throw new HttpCookieNotFoundError('Cookie not found: \"' + cookieName + '\".');\n            }\n            return value;\n        }\n\n        /**\n         * Check if a cookie is among the parsed cookies.\n         *\n         * @param {string} cookieName The name of the cookie to look for.\n         * @returns {boolean} ``true`` if the cookie is among the parsed cookies.\n         */\n\n    }, {\n        key: 'contains',\n        value: function contains(cookieName) {\n            return typeof this.cookies[cookieName] !== 'undefined';\n        }\n    }]);\n\n    return HttpCookies;\n}();\n\nexports.default = HttpCookies;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/HttpCookies.js\n// module id = 16\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _HttpJsonRequest2 = require(\"./HttpJsonRequest\");\n\nvar _HttpJsonRequest3 = _interopRequireDefault(_HttpJsonRequest2);\n\nvar _HttpCookies = require(\"./HttpCookies\");\n\nvar _HttpCookies2 = _interopRequireDefault(_HttpCookies);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Extends HttpJsonRequest with automatic handling\n * of the Django csrftoken.\n */\nvar HttpDjangoJsonRequest = function (_HttpJsonRequest) {\n  _inherits(HttpDjangoJsonRequest, _HttpJsonRequest);\n\n  /**\n   * @param args Same args as for {@link HttpResponse}.\n   */\n  function HttpDjangoJsonRequest() {\n    var _ref;\n\n    _classCallCheck(this, HttpDjangoJsonRequest);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = HttpDjangoJsonRequest.__proto__ || Object.getPrototypeOf(HttpDjangoJsonRequest)).call.apply(_ref, [this].concat(args)));\n\n    _this._cookies = new _HttpCookies2.default();\n    return _this;\n  }\n\n  /**\n   * Returns the value of the ``csrftoken`` cookie.\n   */\n\n\n  _createClass(HttpDjangoJsonRequest, [{\n    key: \"setDefaultRequestHeaders\",\n\n\n    /**\n     * Ensures the csrftoken cookie value is automatically set in\n     * the ``X-CSRFToken`` header for all requests except GET and HEAD.\n     *\n     * @param method See {@link HttpRequest}.\n     */\n    value: function setDefaultRequestHeaders(method) {\n      _get(HttpDjangoJsonRequest.prototype.__proto__ || Object.getPrototypeOf(HttpDjangoJsonRequest.prototype), \"setDefaultRequestHeaders\", this).call(this, method);\n      var shouldAddCsrfToken = !(method == 'GET' || method == 'HEAD');\n      if (shouldAddCsrfToken) {\n        this.setRequestHeader(\"X-CSRFToken\", this.csrftoken);\n      }\n    }\n  }, {\n    key: \"csrftoken\",\n    get: function get() {\n      return this._cookies.getStrict('csrftoken');\n    }\n  }]);\n\n  return HttpDjangoJsonRequest;\n}(_HttpJsonRequest3.default);\n\nexports.default = HttpDjangoJsonRequest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/HttpDjangoJsonRequest.js\n// module id = 17\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _HttpResponse2 = require(\"./HttpResponse\");\n\nvar _HttpResponse3 = _interopRequireDefault(_HttpResponse2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Extends HttpResponse with extra functionality for\n * working with JSON response data.\n *\n * The most important addition is the {@link HttpJsonResponse#bodydata}\n * property that you will want to use instead of\n * {@link HttpResponse#body}.\n */\nvar HttpJsonResponse = function (_HttpResponse) {\n    _inherits(HttpJsonResponse, _HttpResponse);\n\n    function HttpJsonResponse() {\n        _classCallCheck(this, HttpJsonResponse);\n\n        return _possibleConstructorReturn(this, (HttpJsonResponse.__proto__ || Object.getPrototypeOf(HttpJsonResponse)).apply(this, arguments));\n    }\n\n    _createClass(HttpJsonResponse, [{\n        key: \"__parseResponseTextAsJson\",\n        value: function __parseResponseTextAsJson() {\n            return JSON.parse(this.body);\n        }\n\n        /**\n         * Overriden to make use of JSON.stringify to produce more\n         * pretty output.\n         */\n\n    }, {\n        key: \"getPrettyfiedBody\",\n        value: function getPrettyfiedBody() {\n            var prettyBody = void 0;\n            try {\n                prettyBody = JSON.stringify(this.bodydata, null, 2);\n            } catch (SyntaxError) {\n                prettyBody = this.body;\n            }\n            return prettyBody;\n        }\n    }, {\n        key: \"bodydata\",\n\n\n        /**\n         * Get the response body (the responseText attribute of the XMLHttpRequest)\n         * decoded from JSON.\n         */\n        get: function get() {\n            if (this.isConnectionRefused()) {\n                return null;\n            } else {\n                return this.__parseResponseTextAsJson();\n            }\n        }\n    }]);\n\n    return HttpJsonResponse;\n}(_HttpResponse3.default);\n\nexports.default = HttpJsonResponse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/HttpJsonResponse.js\n// module id = 18\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _HttpResponse = require(\"./HttpResponse\");\n\nvar _HttpResponse2 = _interopRequireDefault(_HttpResponse);\n\nvar _UrlParser = require(\"./UrlParser\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * API for performing HTTP requests.\n *\n * @example <caption>Make a POST request</caption>\n * const request = new HttpRequest('http://example.com/api/users/');\n * request.post('Hello world')\n *     .then((response) => {\n *         // Success - response is a HttpResponse object.\n *         console.log(response.toString());\n *         if(response.isSuccess()) {\n *             console.log('Success: ', response.body);\n *         } else if (response.isRedirect) {\n *             console.log('Hmm strange, we got a redirect instead of a 2xx response.');\n *         }\n *     })\n *     .catch((error) => {\n *         // Error - response is an HttpResponse object.\n *         console.error(error.toString());\n *         if(error.response.isRedirect()) {\n *             // Yes - redirect is treated as an error by default.\n *             // you can change this by supplying an extra argument\n *             // to HttpResponse()\n *             console.log('We got a 3xx response!', error.response.body);\n *         } else if(error.response.isClientError()) {\n *             console.log('We got a 4xx response!', error.response.body);\n *         } else if (error.response.isServerError()) {\n *             console.log('We got a 5xx response!', error.response.body);\n *         } else if (error.response.isConnectionRefused()) {\n *             console.log('Connection refused.');\n *         }\n *         // throw error;  // You can throw the error as an exception\n *     });\n *\n * @example <caption>Make a GET request with a querystring</caption>\n * const request = new HttpRequest('http://example.com/api/users/');\n * request.urlParser.queryString.set('search', 'doe');\n * request.get()\n *     .then((response) => {\n *         console.log('Success!', response.toString());\n *     })\n *     .catch((error) => {\n *         console.error('Error:', error.toString());\n *     });\n */\nvar HttpRequest = function () {\n    /**\n     * @param {string} url The URL to request.\n     *      If this is supplied, it is passed to\n     *      {@link HttpRequest#setUrl}\n     */\n    function HttpRequest(url) {\n        _classCallCheck(this, HttpRequest);\n\n        this._treatRedirectResponseAsError = true;\n        this.request = new XMLHttpRequest();\n        this._urlParser = null;\n        if (typeof url !== 'undefined') {\n            this.setUrl(url);\n        }\n    }\n\n    /**\n     * Get the parsed URL of the request.\n     *\n     * @returns {UrlParser} The UrlParser for the parsed URL.\n     */\n\n\n    _createClass(HttpRequest, [{\n        key: \"setUrl\",\n\n\n        /**\n         * Set the URL of the request.\n         *\n         * @param {String} url The URL.\n         */\n        value: function setUrl(url) {\n            this._urlParser = new _UrlParser.UrlParser(url);\n        }\n\n        /**\n         * Set how we treat 3xx responses.\n         *\n         * By default they are treated as errors, but you can change\n         * this behavior by calling this function.\n         *\n         * @param {bool} treatRedirectResponseAsError Treat 3xx responses as\n         *      errors?\n         *\n         * @example <caption>Do not treat 3xx responses as error</caption>\n         * const request = HttpRequest('http://example.com/api/');\n         * request.setTreatRedirectResponseAsError(false);\n         */\n\n    }, {\n        key: \"setTreatRedirectResponseAsError\",\n        value: function setTreatRedirectResponseAsError(treatRedirectResponseAsError) {\n            this._treatRedirectResponseAsError = treatRedirectResponseAsError;\n        }\n\n        /**\n         * Send the request.\n         *\n         * @param method The HTTP method. I.e.: \"get\", \"post\", ...\n         * @param data Request body data. This is sent through\n         *      {@link HttpRequest#makeRequestBody} before it\n         *      is sent.*\n         * @return A Promise.\n         *\n         *      The resolve function argument is an\n         *      an object of whatever {@link HttpRequest#makeResponse}\n         *      returns.\n         *\n         *      The reject function argument is a\n         *      {@link HttpResponseError} object created using\n         *      {@link HttpResponse#toError}.\n         */\n\n    }, {\n        key: \"send\",\n        value: function send(method, data) {\n            var _this = this;\n\n            method = method.toUpperCase();\n            if (this._urlParser === null) {\n                throw new TypeError('Can not call send() without an url.');\n            }\n            return new Promise(function (resolve, reject) {\n                _this.request.open(method, _this.urlParser.buildUrl(), true);\n                _this.setDefaultRequestHeaders(method);\n                _this.request.onload = function () {\n                    return _this._onComplete(resolve, reject);\n                };\n                _this.request.onerror = function () {\n                    return _this._onComplete(resolve, reject);\n                };\n                _this.request.send(_this.makeRequestBody(data));\n            });\n        }\n\n        /**\n         * Shortcut for ``send(\"get\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"get\",\n        value: function get(data) {\n            return this.send('get', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"head\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"head\",\n        value: function head(data) {\n            return this.send('head', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"post\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"post\",\n        value: function post(data) {\n            return this.send('post', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"put\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"put\",\n        value: function put(data) {\n            return this.send('put', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"patch\", data)``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"patch\",\n        value: function patch(data) {\n            return this.send('patch', data);\n        }\n\n        /**\n         * Shortcut for ``send(\"delete\", data)``.\n         *\n         * Named httpdelete to avoid crash with builtin keyword ``delete``.\n         *\n         * @see {@link HttpRequest#send}\n         */\n\n    }, {\n        key: \"httpdelete\",\n        value: function httpdelete(data) {\n            return this.send('delete', data);\n        }\n\n        /**\n         * Make request body from the provided data.\n         *\n         * By default this just returns the provided data,\n         * but subclasses can override this to perform automatic\n         * conversion.\n         *\n         * Must return a string.\n         */\n\n    }, {\n        key: \"makeRequestBody\",\n        value: function makeRequestBody(data) {\n            return data;\n        }\n\n        /**\n         * Creates a {@link HttpResponse}.\n         * @returns {HttpResponse}\n         */\n\n    }, {\n        key: \"makeResponse\",\n        value: function makeResponse() {\n            return new _HttpResponse2.default(this.request);\n        }\n\n        /**\n         * Set a request header.\n         *\n         * @param header The header name. E.g.: ``\"Content-type\"``.\n         * @param value The header value.\n         */\n\n    }, {\n        key: \"setRequestHeader\",\n        value: function setRequestHeader(header, value) {\n            this.request.setRequestHeader(header, value);\n        }\n\n        /**\n         * Set default request headers.\n         *\n         * Does nothing by default, but subclasses can override this.\n         *\n         * @param method The HTTP request method (GET, POST, PUT, ...).\n         *      Will always be uppercase.\n         */\n\n    }, {\n        key: \"setDefaultRequestHeaders\",\n        value: function setDefaultRequestHeaders(method) {}\n    }, {\n        key: \"_onComplete\",\n        value: function _onComplete(resolve, reject) {\n            var response = this.makeResponse();\n            var isSuccess = false;\n            if (this._treatRedirectResponseAsError) {\n                isSuccess = response.isSuccess();\n            } else {\n                isSuccess = response.isSuccess() || response.isRedirect();\n            }\n            if (isSuccess) {\n                resolve(response);\n            } else {\n                reject(response.toError());\n            }\n        }\n    }, {\n        key: \"urlParser\",\n        get: function get() {\n            return this._urlParser;\n        }\n    }]);\n\n    return HttpRequest;\n}();\n\nexports.default = HttpRequest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/HttpRequest.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Query-string creator and parser.\n *\n * @example <caption>Basics - build a querystring</caption>\n * const querystring = new QueryString();\n * querystring.set('name', 'Peter');\n * querystring.setIterable('tags', ['person', 'male']);\n * const encodedQuerystring = querystring.urlencode();\n * // encodedQuerystring === 'name=Peter&tags=person&tags=male'  // order may vary\n *\n * @example <caption>Parse a querystring</caption>\n * const querystring = new QueryString('name=Peter&tags=person&tags=male');\n * const name = querystring.get('name');\n * const tags = querystring.getArray('tags');\n * const firstTag = querystring.get('tags');\n *\n * @example <caption>Parse and modify a querystring</caption>\n * const querystring = new QueryString('name=Peter&tags=person&tags=male');\n * querystring.set('name', 'John');\n * querystring.append('tags', 'important');\n * // querystring.urlencode() === 'name=John&tags=person&tags=male&tags=important'\n * querystring.setIterable('tags', ['male']);\n * // querystring.urlencode() === 'name=John&tags=male'\n */\nvar QueryString = function () {\n    /**\n     *\n     * @param {string} querystring Optional input querystring to parse.\n     */\n    function QueryString(querystring) {\n        _classCallCheck(this, QueryString);\n\n        this._queryStringMap = new Map();\n        if (typeof querystring !== 'undefined') {\n            if (typeof querystring !== 'string') {\n                throw new TypeError('The querystring argument must be a string.');\n            }\n            this._parseQueryString(querystring);\n        }\n    }\n\n    /**\n     * Returns ``true`` if the querystring is empty, otherwise ``false``.\n     *\n     * @returns {boolean}\n     */\n\n\n    _createClass(QueryString, [{\n        key: 'isEmpty',\n        value: function isEmpty() {\n            return this._queryStringMap.size === 0;\n        }\n\n        /**\n         * Remove all keys and values from the QueryString.\n         */\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this._queryStringMap.clear();\n        }\n    }, {\n        key: '_parseQueryStringItem',\n        value: function _parseQueryStringItem(querystringItem) {\n            var splitPair = querystringItem.split('=');\n            var key = decodeURIComponent(splitPair[0]);\n            var value = decodeURIComponent(splitPair[1]);\n            this.append(key, value);\n        }\n    }, {\n        key: '_parseQueryString',\n        value: function _parseQueryString(querystring) {\n            var splitQueryString = querystring.split('&');\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = splitQueryString[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var querystringItem = _step.value;\n\n                    this._parseQueryStringItem(querystringItem);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: '_addToKey',\n        value: function _addToKey(key, value) {\n            if (typeof key !== 'string') {\n                throw new TypeError('All keys added to a QueryString must be strings.');\n            }\n            if (typeof value !== 'string') {\n                throw new TypeError('All values added to a QueryString must be strings.');\n            }\n            this._queryStringMap.get(key).push(value);\n        }\n    }, {\n        key: '_setKeyToEmptyArray',\n        value: function _setKeyToEmptyArray(key) {\n            this._queryStringMap.set(key, []);\n        }\n\n        /**\n         * Set value from an iterable.\n         *\n         * @param {string} key The key to set.\n         * @param iterable Something that can be iterated with a\n         *      ``for(const value of iterable)`` loop.\n         *      All the values in the iterable must be strings.\n         *      If the iterable is empty the key will be removed\n         *      from the QueryString.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.setIterable('names', ['Peter', 'Jane']);\n         */\n\n    }, {\n        key: 'setIterable',\n        value: function setIterable(key, iterable) {\n            this._setKeyToEmptyArray(key);\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = iterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var value = _step2.value;\n\n                    this._addToKey(key, value);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            if (this._queryStringMap.get(key).length === 0) {\n                this.remove(key);\n            }\n        }\n\n        /**\n         * Set a value.\n         *\n         * @param {string} key The key to store the value as.\n         * @param {string} value The value to set.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.set('name', 'Peter');\n         */\n\n    }, {\n        key: 'set',\n        value: function set(key, value) {\n            this.setIterable(key, [value]);\n        }\n\n        /**\n         * Get a value.\n         *\n         * @param {string} key The key to get the value for.\n         * @param {string} fallback An optional fallback value if the key is\n         *      not in the QueryString. Defaults to ``undefined``.\n         */\n\n    }, {\n        key: 'get',\n        value: function get(key, fallback) {\n            var value = this._queryStringMap.get(key);\n            if (typeof value === 'undefined') {\n                return fallback;\n            } else {\n                return value[0];\n            }\n        }\n\n        /**\n         * Append a value to a key.\n         *\n         * @param {string} key The key to append a value to.\n         * @param {string} value The value to append.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.append('names', 'Jane');\n         * querystring.append('names', 'Joe');\n         * // querystring.urlencode() === 'names=Jane&names=Joe'\n         */\n\n    }, {\n        key: 'append',\n        value: function append(key, value) {\n            if (!this._queryStringMap.has(key)) {\n                this._setKeyToEmptyArray(key);\n            }\n            this._addToKey(key, value);\n        }\n\n        /**\n         * Get the values for the specified key as an array.\n         *\n         * Always returns an array, even if the value was set\n         * with {@link QueryString#set}.\n         *\n         * @param {string} key The key to get the values for.\n         * @param {Array} fallback An optional fallback value if they\n         *      key is not in the QueryString. Defaults to an empty array.\n         * @returns {Array}\n         */\n\n    }, {\n        key: 'getArray',\n        value: function getArray(key, fallback) {\n            if (this._queryStringMap.has(key)) {\n                var valueArray = this._queryStringMap.get(key);\n                return Array.from(valueArray);\n            }\n            if (typeof falback !== 'undefined') {\n                return [];\n            }\n            return fallback;\n        }\n\n        /**\n         * Remove the specified key from the QueryString.\n         *\n         * @param {string} key The key to remove.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove(key) {\n            this._queryStringMap.delete(key);\n        }\n\n        /**\n         * Check if the QueryString contains the given key.\n         *\n         * @param {string} key The key to check for.\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'has',\n        value: function has(key) {\n            return this._queryStringMap.has(key);\n        }\n    }, {\n        key: '_encodeKeyValue',\n        value: function _encodeKeyValue(key, value) {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n        }\n\n        /**\n         * Get the QueryString object as a string in query-string format.\n         *\n         * @example\n         * const querystring = QueryString();\n         * querystring.set('next', '/a&b/');\n         * querystring.set('name', 'john');\n         * let urlEncodedQuerystring = querystring.urlencode();\n         * // urlEncodedQuerystring === 'name=john&next=%2Fa%26b%2F'  // order may vary\n         */\n\n    }, {\n        key: 'urlencode',\n        value: function urlencode() {\n            var urlEncodedArray = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._queryStringMap[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var _step3$value = _slicedToArray(_step3.value, 2),\n                        key = _step3$value[0],\n                        valueArray = _step3$value[1];\n\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = valueArray[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var value = _step4.value;\n\n                            urlEncodedArray.push(this._encodeKeyValue(key, value));\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return urlEncodedArray.join('&');\n        }\n    }]);\n\n    return QueryString;\n}();\n\nexports.default = QueryString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/QueryString.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UrlParser = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _QueryString = require('./QueryString');\n\nvar _QueryString2 = _interopRequireDefault(_QueryString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * URL parser.\n *\n * @example\n * const urlparser = new UrlParser('http://example.com/api/people?name=Jane');\n * querystring.queryString.set('search', 'doe');\n * // urlparser.buildUrl() === 'http://example.com/api/people?name=Jane&search=doe'\n */\nvar UrlParser = exports.UrlParser = function () {\n  function UrlParser(url) {\n    _classCallCheck(this, UrlParser);\n\n    if (typeof url !== 'string') {\n      throw new TypeError('url must be a string.');\n    }\n    var urlSplit = url.split('?');\n    this._baseUrl = urlSplit[0];\n    this._parsedBaseUrl = this._parseBaseUrl();\n\n    /**\n     * The query-string of the the URL.\n     * @type {QueryString}\n     */\n    this.queryString = null;\n\n    if (urlSplit.length > 1) {\n      this.setQueryString(new _QueryString2.default(urlSplit[1]));\n    } else {\n      this.setQueryString(new _QueryString2.default());\n    }\n  }\n\n  _createClass(UrlParser, [{\n    key: '_splitDomainAndPath',\n    value: function _splitDomainAndPath(domainAndPath) {\n      var split = domainAndPath.split('/');\n      var domain = split.shift();\n      var path = '';\n      if (split.length > 0) {\n        path = '/' + split.join('/');\n      }\n      return {\n        domain: domain,\n        path: path\n      };\n    }\n  }, {\n    key: '_parseBaseUrl',\n    value: function _parseBaseUrl() {\n      var parsedBaseUrl = {\n        scheme: null,\n        path: '',\n        domain: null\n      };\n      if (this._baseUrl.match(/^[a-zA-Z0-9]+:\\/\\//)) {\n        // We have a full URL (<scheme>://<domain><path>)\n        var split = this._baseUrl.split('://');\n        parsedBaseUrl.scheme = split.shift();\n        var remaining = split.join('://');\n        var domainAndPath = this._splitDomainAndPath(remaining);\n        parsedBaseUrl.domain = domainAndPath.domain;\n        parsedBaseUrl.path = domainAndPath.path;\n      } else if (this._baseUrl.length > 0 && this._baseUrl.substring(0, 1) == '/') {\n        // We have path only\n        parsedBaseUrl.path = '' + this._baseUrl;\n      } else {\n        // We have domain and path, but no scheme (<domain><path>)\n        var _domainAndPath = this._splitDomainAndPath(this._baseUrl);\n        parsedBaseUrl.domain = _domainAndPath.domain;\n        parsedBaseUrl.path = _domainAndPath.path;\n      }\n      return parsedBaseUrl;\n    }\n  }, {\n    key: 'buildUrl',\n\n\n    /**\n     * Build the URL.\n     * @returns {String} The built URL.\n     */\n    value: function buildUrl() {\n      var url = this._baseUrl;\n      if (!this.queryString.isEmpty()) {\n        url = url + '?' + this.queryString.urlencode();\n      }\n      return url;\n    }\n\n    /**\n     * Set/replace the query-string.\n     *\n     * @param {QueryString} queryStringObject The QueryString object\n     *      to replace the current query-string with.\n     *\n     * @example\n     * const urlparser = UrlParser('http://example.com/api/people');\n     * const querystring = new QueryString();\n     * querystring.set('search', 'doe');\n     * urlparser.setQueryString(querystring);\n     * // urlparser.buildUrl() === 'http://example.com/api/people?search=doe'\n     */\n\n  }, {\n    key: 'setQueryString',\n    value: function setQueryString(queryStringObject) {\n      this.queryString = queryStringObject;\n    }\n  }, {\n    key: 'scheme',\n    get: function get() {\n      return this._parsedBaseUrl.scheme;\n    }\n  }, {\n    key: 'path',\n    get: function get() {\n      return this._parsedBaseUrl.path;\n    }\n  }, {\n    key: 'domain',\n    get: function get() {\n      return this._parsedBaseUrl.domain;\n    }\n  }]);\n\n  return UrlParser;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/http/UrlParser.js\n// module id = 21\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _loglevel = require(\"./loglevel\");\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n */\nvar AbstractLogger = function () {\n  function AbstractLogger() {\n    _classCallCheck(this, AbstractLogger);\n  }\n\n  _createClass(AbstractLogger, [{\n    key: \"getLogLevel\",\n    value: function getLogLevel() {\n      throw new Error('Must be overridden in subclasses.');\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#DEBUG}.\n     */\n\n  }, {\n    key: \"_noOutput\",\n    value: function _noOutput() {}\n\n    /**\n     * Exposes console.log. Will only print if current level is\n     * higher than or equal to {@link LogLevels#DEBUG}.\n     * @returns {Function} console.log\n     */\n\n  }, {\n    key: \"isDebug\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.DEBUG;\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#INFO}.\n     */\n\n  }, {\n    key: \"isInfo\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.INFO;\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#WARNING}.\n     */\n\n  }, {\n    key: \"isWarning\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.WARNING;\n    }\n\n    /**\n     * Returns ``true`` if loglevel is higher\n     * than or equal to {@link LogLevels#ERROR}.\n     */\n\n  }, {\n    key: \"isError\",\n    get: function get() {\n      return this.getLogLevel() >= _loglevel2.default.ERROR;\n    }\n  }, {\n    key: \"debug\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.DEBUG) {\n        return console.log.bind(console);\n      }\n      return this._noOutput;\n    }\n\n    /**\n     * Exposes console.log. Will only print if current level is\n     * higher than or equal to {@link LogLevels#INFO}.\n     * @returns {Function} console.log\n     */\n\n  }, {\n    key: \"info\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.INFO) {\n        return console.log.bind(console);\n      }\n      return this._noOutput;\n    }\n\n    /**\n     * Exposes console.warn. Will only print if current level is\n     * higher than or equal to {@link LogLevels#WARNING}.\n     * @returns {Function} console.warn\n     */\n\n  }, {\n    key: \"warning\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.WARNING) {\n        return console.warn.bind(console);\n      }\n      return this._noOutput;\n    }\n\n    /**\n     * Exposes console.error. Will only print if current level is\n     * higher than or equal to {@link LogLevels#ERROR}.\n     * @returns {Function} console.error\n     */\n\n  }, {\n    key: \"error\",\n    get: function get() {\n      if (this.getLogLevel() >= _loglevel2.default.ERROR) {\n        return console.error.bind(console);\n      }\n      return this._noOutput;\n    }\n  }]);\n\n  return AbstractLogger;\n}();\n\nexports.default = AbstractLogger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/log/AbstractLogger.js\n// module id = 22\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AbstractLogger2 = require(\"./AbstractLogger\");\n\nvar _AbstractLogger3 = _interopRequireDefault(_AbstractLogger2);\n\nvar _loglevel = require(\"./loglevel\");\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Logger = function (_AbstractLogger) {\n    _inherits(Logger, _AbstractLogger);\n\n    /**\n     *\n     * @param {string} name The name of the logger.\n     * @param {LoggerSingleton} loggerSingleton The logger singleton\n     *      this logger belongs to.\n     */\n    function Logger(name, loggerSingleton) {\n        _classCallCheck(this, Logger);\n\n        var _this = _possibleConstructorReturn(this, (Logger.__proto__ || Object.getPrototypeOf(Logger)).call(this));\n\n        _this._name = name;\n        _this._logLevel = null;\n        _this._loggerSingleton = loggerSingleton;\n        return _this;\n    }\n\n    /**\n     * Get the name of this logger.\n     * @returns {string}\n     */\n\n\n    _createClass(Logger, [{\n        key: \"setLogLevel\",\n\n\n        /**\n         * Set the loglevel for this logger.\n         *\n         * @param {int} logLevel The log level. Must be one of the loglevels\n         *      defined in {@link LogLevels}.\n         * @throws {RangeError} if {@link LogLevels#validateLogLevel} fails.\n         */\n        value: function setLogLevel(logLevel) {\n            _loglevel2.default.validateLogLevel(logLevel);\n            this._logLevel = logLevel;\n        }\n\n        /**\n         * Get the log level.\n         *\n         * If no log level has been set with {@link Logger#setLogLevel},\n         * this returns {@link LoggerSingleton#getDefaultLogLevel}.\n         *\n         * @returns {int}\n         */\n\n    }, {\n        key: \"getLogLevel\",\n        value: function getLogLevel() {\n            if (this._logLevel == null) {\n                return this._loggerSingleton.getDefaultLogLevel();\n            }\n            return this._logLevel;\n        }\n\n        /**\n         * Get textual name for the log level. If the logger\n         * does not have a logLevel (if it inherits it from the LoggerSingleton)\n         * a string with information about this and the default logLevel for the\n         * LoggerSingleton is returned.\n         *\n         * Intended for debugging. The format of the string may change.\n         *\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getTextualNameForLogLevel\",\n        value: function getTextualNameForLogLevel() {\n            if (this._logLevel == null) {\n                return '[default for LoggerSingleton - ' + (this._loggerSingleton.getTextualNameForDefaultLogLevel() + \"]\");\n            }\n            return _loglevel2.default.getTextualNameForLogLevel(this.getLogLevel());\n        }\n    }, {\n        key: \"getDebugInfoString\",\n        value: function getDebugInfoString() {\n            return this.name + \": \" + this.getTextualNameForLogLevel();\n        }\n    }, {\n        key: \"name\",\n        get: function get() {\n            return this._name;\n        }\n    }]);\n\n    return Logger;\n}(_AbstractLogger3.default);\n\nexports.default = Logger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/log/Logger.js\n// module id = 23\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeDetect = require(\"./typeDetect\");\n\nvar _typeDetect2 = _interopRequireDefault(_typeDetect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Utility-class with several static functions to simplify validation, merging and other standard operations on\n * javascript-Objects.\n */\nvar ObjectManager = function () {\n    function ObjectManager() {\n        _classCallCheck(this, ObjectManager);\n    }\n\n    _createClass(ObjectManager, null, [{\n        key: \"_hasOwnValue\",\n\n        /**\n         * Checks that given object is not null and not undefined. Also checks the same inwards in provided nested keys\n         *\n         * @example\n         *  let check = this._hasOwnValue({\"foo\": {\"bar\": \"\"}}, false, true, \"foo\", \"bar\");\n         *  // check is now false. key \"foo\" is found, key \"bar\" is found, but \"bar\" is emptyString, and params specify to check for them\n         *\n         * @example\n         *  let check = this._hasOwnValue({\"foo\": {\"bar\": {}}}, true, false, \"foo\", \"bar\");\n         *  // check is now false. key \"foo\" is found, key \"bar\" is found, but \"bar\" is {}, and params specify to check for emptyObject.\n         *\n         * @example\n         *  let check = this._hasOwnValue({\"foo\": {\"bar\": {}}}, false, false, \"foo\", \"bar\");\n         *  // check is now true. key \"foo\" is found, key \"bar\" is found, so no requested values are null or undefined.\n         *\n         *  NOTE: Other functions in this file lets you ignore the boolean params - so just use them :)\n         *\n         * @param givenObject   The object to validate\n         * @param emptyObject   if true - keys mapped to empty object {} will also give false\n         * @param emptyString   if true - keys mapped to empty string \"\" will also give false\n         * @param args          nested keys to look for, so to validate myObject.foo.bar call this._hasOwnValue(myObject, false, false, \"foo\". \"bar\")\n         * @returns {boolean}   true if validation passes, false if not.\n         */\n        value: function _hasOwnValue(givenObject, emptyObject, emptyString) {\n            function checkValue(value) {\n                return value != undefined && value != null && (!emptyObject || value != {}) && (!emptyString || value != \"\");\n            }\n\n            if (!checkValue(givenObject)) {\n                return false;\n            }\n\n            for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n                args[_key - 3] = arguments[_key];\n            }\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = args[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var key = _step.value;\n\n                    if (!(key in givenObject) || !checkValue(givenObject[key])) {\n                        return false;\n                    }\n                    givenObject = givenObject[key];\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        /**\n         * Validate that an object and nested keys are not null, undefined or empty string \"\".\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined or \"\"\n         */\n\n    }, {\n        key: \"validateAllowEmptyObject\",\n        value: function validateAllowEmptyObject(givenObject) {\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                args[_key2 - 1] = arguments[_key2];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, false, true].concat(args));\n        }\n\n        /**\n         * Validate that an object and nested keys are not null, undefined or empty object {}.\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined or {}\n         */\n\n    }, {\n        key: \"validateAllowEmptyString\",\n        value: function validateAllowEmptyString(givenObject) {\n            for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, true, false].concat(args));\n        }\n\n        /**\n         * Validate that an object and nested keys are not null, undefined or empty string \"\" or empty object {}.\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null, undefined, {} or \"\"\n         */\n\n    }, {\n        key: \"validate\",\n        value: function validate(givenObject) {\n            for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n                args[_key4 - 1] = arguments[_key4];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, true, true].concat(args));\n        }\n\n        /**\n         * Validate that an object and nested keys are not null or undefined.\n         *\n         * @example\n         * // check that myObject.foo.bar exists:\n         * validateAllowEmptyObject(myObject, \"foo\", \"bar\")\n         *\n         * @param givenObject   the object to validate\n         * @param args          nested keys to check\n         * @returns {boolean}   true if neither the object or any provided nested key is null or undefined.\n         */\n\n    }, {\n        key: \"validateAllowEmptyStringAndEmptyObject\",\n        value: function validateAllowEmptyStringAndEmptyObject(givenObject) {\n            for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n                args[_key5 - 1] = arguments[_key5];\n            }\n\n            return this._hasOwnValue.apply(this, [givenObject, false, false].concat(args));\n        }\n\n        /**\n         * uses {@link validate} to lookup given args in given objectToBeValidated.\n         * This ensures the lookup is not null, undefined, empty object, or empty string.\n         * If this test fails, given fallbackValue is returned.\n         *\n         * @example\n         *  // to validate myObject.foo.bar, and get \"helloworld\" back as default if it is empty:\n         *  validateOrFallback(\"helloworld\", myObject, \"foo\", \"bar\")\n         *\n         * @param fallbackValue         what to return if empty\n         * @param objectToBeValidated   object to do lookup in\n         * @param args                  indices used for lookup in object\n         * @returns {*}                 lookup in objectToBeValidated if validation succeeded, fallbackValue if not.\n         */\n\n    }, {\n        key: \"validateOrFallback\",\n        value: function validateOrFallback(fallbackValue, objectToBeValidated) {\n            for (var _len6 = arguments.length, args = Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n                args[_key6 - 2] = arguments[_key6];\n            }\n\n            if (!this.validate.apply(this, [objectToBeValidated].concat(args))) {\n                return fallbackValue;\n            }\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = args[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var arg = _step2.value;\n\n                    objectToBeValidated = objectToBeValidated[arg];\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return objectToBeValidated;\n        }\n\n        /**\n         * Utilityfunction to simplify validation! uses {@link validateOrFallback} for validation, and executes\n         * given callback (and returns returnvalue from it) if validation fails.\n         *\n         * @param callback              Function to be executed if validation fails\n         * @param objectToBeValidated   The object to do validation-lookup in\n         * @param args                  indices used for lookup in objectToBeValidated\n         * @returns {*}                 lookup in objectToBeValidated if validation succeeded, returnvalue from callback if not.\n         */\n\n    }, {\n        key: \"validateOrCallback\",\n        value: function validateOrCallback(callback, objectToBeValidated) {\n            for (var _len7 = arguments.length, args = Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n                args[_key7 - 2] = arguments[_key7];\n            }\n\n            var validatedValue = this.validateOrFallback.apply(this, [null, objectToBeValidated].concat(args));\n            if (validatedValue == null) {\n                return callback();\n            }\n            return validatedValue;\n        }\n\n        /**\n         * Utilityfunction to simplify validation! uses {@link validateOrCallback} for validation, and passes\n         * a callback that simply thrown an Error if validation fails.\n         *\n         * @param errorMessage          the message to use in new Error(errorMessage)\n         * @param objectToBeValidated   the object to validate args in\n         * @param args                  args for lookup. see {@link validateOrFallback}\n         * @returns {*}                 the looked-up value from objectToBeValidated if it exists\n         */\n\n    }, {\n        key: \"validateOrError\",\n        value: function validateOrError(errorMessage, objectToBeValidated) {\n            for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n                args[_key8 - 2] = arguments[_key8];\n            }\n\n            return this.validateOrCallback.apply(this, [function () {\n                throw new Error(errorMessage);\n            }, objectToBeValidated].concat(args));\n        }\n    }, {\n        key: \"_recursiveMerge\",\n        value: function _recursiveMerge(mergedValues, overrides) {\n            for (var key in overrides) {\n                var detectedType = (0, _typeDetect2.default)(overrides[key]);\n                if (detectedType == 'object') {\n                    if (mergedValues[key] == undefined) {\n                        mergedValues[key] = {};\n                    }\n                    mergedValues[key] = this._recursiveMerge(mergedValues[key], overrides[key]);\n                } else if (detectedType == 'array') {\n                    mergedValues[key] = Array.from(overrides[key]);\n                } else if (detectedType == 'null' || detectedType == 'number' || detectedType == 'boolean' || detectedType == 'string') {\n                    mergedValues[key] = overrides[key];\n                } else {\n                    throw new Error(\"Unsupported type: \" + detectedType + \".\");\n                }\n            }\n            return mergedValues;\n        }\n\n        /**\n         * Deep copy all values from overrides to givenObject.\n         *\n         * All keys in passed overrides-object will be cloned to passed givenObject. This happens deeply, so all\n         * nested objects will also be iterated (NOTE: lists are not iterated, only objects).\n         *\n         * Note that objects are passed by-reference, so if you do not want givenObject to be modified directly make sure\n         * you pass false as third param\n         *\n         * @param givenObject             The object to override values in\n         * @param overrides               The object to copy all values from\n         * @param overrideValuesInGiven   if true givenObjects will be overwritten directly, if false a new object\n         *                                will be created to merge both given objects into.\n         * @returns {*}                   The result from deep-merging\n         */\n\n    }, {\n        key: \"_merge\",\n        value: function _merge(givenObject, overrides, overrideValuesInGiven) {\n            if (overrideValuesInGiven) {\n                return this._recursiveMerge(givenObject, overrides);\n            }\n\n            var mergedValues = {};\n            mergedValues = this._recursiveMerge(mergedValues, givenObject);\n            return this._recursiveMerge(mergedValues, overrides);\n        }\n\n        /**\n         * Merges all values from overrideObject into originalObject.\n         * This happens in place (as objects are passed-by-reference), so originalObject is modified.\n         *\n         * This is a deep-merge (unlike Object.assign).\n         *\n         * @example <caption>Simple example</caption>\n         * let originalObject = {\n         *      foo: \"bar\",\n         *      person: {\n         *          name: \"Sandy claws\",\n         *          age: 42\n         *      }\n         * }\n         *\n         * let overrideObject = {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678\n         *      }\n         *  }\n         *\n         *  ObjectManager.mergeInPlace(originalObject, overrideObject);\n         *\n         *  // originalObject will now be:\n         *  originalObject == {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678,\n         *          name: \"Sandy claws\"\n         *      }\n         *  }\n         *\n         * @param originalObject    the object to modify\n         * @param overrideObject    the object to copy values from\n         */\n\n    }, {\n        key: \"mergeInPlace\",\n        value: function mergeInPlace(originalObject, overrideObject) {\n            this._merge(originalObject, overrideObject, true);\n        }\n\n        /**\n         * Merges all values from originalObject and overrideObject into a new object that is returned.\n         *\n         * This is a deep-merge (unlike Object.assign).\n         *\n         * First, all values from originalObject are merged into a new object.\n         * Then all values from overrideObject are merged into the same object, overriding any corresponding keys from\n         * originalObject.\n         *\n         * @example <caption>Simple example</caption>\n         * let originalObject = {\n         *      foo: \"bar\",\n         *      person: {\n         *          name: \"Sandy claws\",\n         *          age: 42\n         *      }\n         * }\n         *\n         * let overrideObject = {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678\n         *      }\n         *  }\n         *\n         *  let mergedObject = ObjectManager.mergeAndCopy(originalObject, overrideObject);\n         *\n         *  // mergedObject will now be:\n         *  mergedObject == {\n         *      foo: \"baz\",\n         *      person: {\n         *          age: 23,\n         *          phone: 12345678,\n         *          name: \"Sandy claws\"\n         *      }\n         *  }\n         *\n         * @param originalObject    initial values for new object\n         * @param overrideObject    object to override values from original object with\n         * @returns {{}}            new object containing values from originalObject overridden by overrideObject (see example)\n         */\n\n    }, {\n        key: \"mergeAndClone\",\n        value: function mergeAndClone(originalObject, overrideObject) {\n            return this._merge(originalObject, overrideObject, false);\n        }\n\n        /**\n         * Copies all values from given originalObject into a new object, which is returned to caller.\n         *\n         * uses {@link ObjectManager#mergeAndClone}, but passes an empty object as one of the two it desires for merging..\n         *\n         * @param originalObject\n         * @returns {{}}\n         */\n\n    }, {\n        key: \"clone\",\n        value: function clone(originalObject) {\n            return this.mergeAndClone({}, originalObject);\n        }\n    }]);\n\n    return ObjectManager;\n}();\n\nexports.default = ObjectManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/utils/ObjectManager.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeDetect = require('./typeDetect');\n\nvar _typeDetect2 = _interopRequireDefault(_typeDetect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Pretty format any javascript object.\n *\n * Handles the following types:\n *\n * - null\n * - undefined\n * - Number\n * - Boolean\n * - String\n * - Array\n * - Map\n * - Set\n * - Function\n * - Class (detected as a Function, so pretty formatted just like a function)\n * - Object\n *\n * @example <caption>Without indentation</caption>\n * new PrettyFormat([1, 2]).toString();\n *\n * @example <caption>With indentation (indent by 2 spaces)</caption>\n * new PrettyFormat([1, 2]).toString(2);\n *\n * @example <caption>Simple examples</caption>\n * new PrettyFormat(true).toString() === 'true';\n * new PrettyFormat(null).toString() === 'null';\n * new PrettyFormat([1, 2]).toString() === '[1, 2]';\n * new PrettyFormat({name: \"John\", age: 29}).toString() === '{\"age\": 29, \"name\": John}';\n *\n * @example <caption>Complex example</caption>\n * let map = new Map();\n * map.set('a', [10, 20]);\n * map.set('b', [30, 40, 50]);\n * function testFunction() {}\n * let obj = {\n *     theMap: map,\n *     aSet: new Set(['one', 'two']),\n *     theFunction: testFunction\n * };\n * const prettyFormatted = new PrettyFormat(obj).toString(2);\n */\nvar PrettyFormat = function () {\n    function PrettyFormat(obj) {\n        _classCallCheck(this, PrettyFormat);\n\n        this._obj = obj;\n    }\n\n    _createClass(PrettyFormat, [{\n        key: '_indentString',\n        value: function _indentString(str, indent, indentLevel) {\n            if (indent === 0) {\n                return str;\n            }\n            return '' + ' '.repeat(indent * indentLevel) + str;\n        }\n    }, {\n        key: '_objectToMap',\n        value: function _objectToMap(obj) {\n            var map = new Map();\n            var sortedKeys = Array.from(Object.keys(obj));\n            sortedKeys.sort();\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = sortedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var key = _step.value;\n\n                    map.set(key, obj[key]);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return map;\n        }\n    }, {\n        key: '_prettyFormatFlatIterable',\n        value: function _prettyFormatFlatIterable(flatIterable, size, indent, indentLevel, prefix, suffix) {\n            var output = prefix;\n            var itemSuffix = ', ';\n            if (indent) {\n                output = prefix + '\\n';\n                itemSuffix = ',';\n            }\n            var index = 1;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = flatIterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var item = _step2.value;\n\n                    var prettyItem = this._prettyFormat(item, indent, indentLevel + 1);\n                    if (index !== size) {\n                        prettyItem += itemSuffix;\n                    }\n                    output += this._indentString(prettyItem, indent, indentLevel + 1);\n                    if (indent) {\n                        output += '\\n';\n                    }\n                    index++;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            output += this._indentString('' + suffix, indent, indentLevel);\n            return output;\n        }\n    }, {\n        key: '_prettyFormatMap',\n        value: function _prettyFormatMap(map, indent, indentLevel, prefix, suffix, keyValueSeparator) {\n            var output = prefix;\n            var itemSuffix = ', ';\n            if (indent) {\n                output = prefix + '\\n';\n                itemSuffix = ',';\n            }\n            var index = 1;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = map[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var _step3$value = _slicedToArray(_step3.value, 2),\n                        key = _step3$value[0],\n                        value = _step3$value[1];\n\n                    var prettyKey = this._prettyFormat(key, indent, indentLevel + 1);\n                    var prettyValue = this._prettyFormat(value, indent, indentLevel + 1);\n                    var prettyItem = '' + prettyKey + keyValueSeparator + prettyValue;\n                    if (index !== map.size) {\n                        prettyItem += itemSuffix;\n                    }\n                    output += this._indentString(prettyItem, indent, indentLevel + 1);\n                    if (indent) {\n                        output += '\\n';\n                    }\n                    index++;\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            output += this._indentString('' + suffix, indent, indentLevel);\n            return output;\n        }\n    }, {\n        key: '_prettyFormatFunction',\n        value: function _prettyFormatFunction(fn) {\n            return '[Function: ' + fn.name + ']';\n        }\n    }, {\n        key: '_prettyFormat',\n        value: function _prettyFormat(obj, indent, indentLevel) {\n            var typeString = (0, _typeDetect2.default)(obj);\n            var output = '';\n            if (typeString === 'string') {\n                output = '\"' + obj + '\"';\n            } else if (typeString === 'number' || typeString === 'boolean' || typeString === 'undefined' || typeString === 'null') {\n                output = '' + obj;\n            } else if (typeString === 'array') {\n                output = this._prettyFormatFlatIterable(obj, obj.length, indent, indentLevel, '[', ']');\n            } else if (typeString === 'set') {\n                output = this._prettyFormatFlatIterable(obj, obj.size, indent, indentLevel, 'Set(', ')');\n            } else if (typeString === 'map') {\n                output = this._prettyFormatMap(obj, indent, indentLevel, 'Map(', ')', ' => ');\n            } else if (typeString === 'function') {\n                output = this._prettyFormatFunction(obj);\n            } else {\n                output = this._prettyFormatMap(this._objectToMap(obj), indent, indentLevel, '{', '}', ': ');\n            }\n            return output;\n        }\n\n        /**\n         * Get the results as a string, optionally indented.\n         *\n         * @param {number} indent The number of spaces to indent by. Only\n         *    child objects are indented, and they are indented recursively.\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toString',\n        value: function toString(indent) {\n            indent = indent || 0;\n            return this._prettyFormat(this._obj, indent, 0);\n        }\n    }]);\n\n    return PrettyFormat;\n}();\n\nexports.default = PrettyFormat;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/utils/PrettyFormat.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ElementIsNotInitializedAsWidget = exports.InvalidWidgetAliasError = exports.ElementIsNotWidgetError = exports.ElementHasNoWidgetInstanceIdError = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _makeCustomError = require('../makeCustomError');\n\nvar _makeCustomError2 = _interopRequireDefault(_makeCustomError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The instance of the {@link WidgetRegistrySingleton}.\n */\nvar _instance = null;\n\n/**\n * Exception thrown when an element where we expect the\n * ``data-ievv-jsbase-widget-instanceid`` attribute does\n * not have this attribute.\n *\n * @type {Error}\n */\nvar ElementHasNoWidgetInstanceIdError = exports.ElementHasNoWidgetInstanceIdError = (0, _makeCustomError2.default)('ElementHasNoWidgetInstanceIdError');\n\n/**\n * Exception thrown when an element that we expect to have\n * the ``data-ievv-jsbase-widget`` attribute does not have\n * this attribute.\n *\n * @type {Error}\n */\nvar ElementIsNotWidgetError = exports.ElementIsNotWidgetError = (0, _makeCustomError2.default)('ElementIsNotWidgetError');\n\n/**\n * Exception thrown when an element has a\n * ``data-ievv-jsbase-widget`` with a value that\n * is not an alias registered in the {@link WidgetRegistrySingleton}.\n *\n * @type {Error}\n */\nvar InvalidWidgetAliasError = exports.InvalidWidgetAliasError = (0, _makeCustomError2.default)('InvalidWidgetAliasError');\n\n/**\n * Exception thrown when an element with the\n * ``data-ievv-jsbase-widget-instanceid=<widgetInstanceId>`` attribute is not in\n * the {@link WidgetRegistrySingleton} with ``<widgetInstanceId>``.\n *\n * @type {Error}\n */\nvar ElementIsNotInitializedAsWidget = exports.ElementIsNotInitializedAsWidget = (0, _makeCustomError2.default)('ElementIsNotInitializedAsWidget');\n\n/**\n * A very lightweight widget system.\n *\n * Basic example below - see {@link AbstractWidget} for more examples.\n *\n * @example <caption>Create a very simple widget</caption>\n * export default class OpenMenuWidget extends AbstractWidget {\n *     constructor(element) {\n *          super(element);\n *          this._onClickBound = (...args) => {\n *              this._onClick(...args);\n *          };\n *          this.element.addEventListener('click', this._onClickBound);\n *     }\n *\n *     _onClick = (e) => {\n *          e.preventDefault();\n *          console.log('I should have opened the menu here');\n *     }\n *\n *     destroy() {\n *          this.element.removeEventListener('click', this._onClickBound);\n *     }\n * }\n *\n * @example <caption>Use the widget</caption>\n * <button data-ievv-jsbase-widget=\"open-menu-button\" type=\"button\">\n *     Open menu\n * </button>\n *\n * @example <caption>Register and load widgets</caption>\n * // Somewhere that is called after all the widgets are rendered\n * // - typically at the end of the <body>\n * import WidgetRegistrySingleton from 'ievv_jsbase/widget/WidgetRegistrySingleton';\n * import OpenMenuWidget from 'path/to/OpenMenuWidget';\n * const widgetRegistry = new WidgetRegistrySingleton();\n * widgetRegistry.registerWidgetClass('open-menu-button', OpenMenuWidget);\n * widgetRegistry.initializeAllWidgetsWithinElement(document.body);\n *\n */\n\nvar WidgetRegistrySingleton = function () {\n    function WidgetRegistrySingleton() {\n        _classCallCheck(this, WidgetRegistrySingleton);\n\n        if (!_instance) {\n            _instance = this;\n            this._initialize();\n        }\n        return _instance;\n    }\n\n    _createClass(WidgetRegistrySingleton, [{\n        key: '_initialize',\n        value: function _initialize() {\n            this._widgetAttribute = 'data-ievv-jsbase-widget';\n            this._widgetInstanceIdAttribute = 'data-ievv-jsbase-widget-instanceid';\n            this._widgetClassMap = new Map();\n            this._widgetInstanceMap = new Map();\n            this._widgetInstanceCounter = 0;\n        }\n    }, {\n        key: 'clear',\n        value: function clear() {\n            // TODO: Call destroyAllWidgetsWithinDocumentBody()\n            this._widgetClassMap.clear();\n            this._widgetInstanceMap.clear();\n            this._widgetInstanceCounter = 0;\n        }\n\n        /**\n         * Register a widget class in the registry.\n         *\n         * @param {string} alias The alias for the widget. This is the string that\n         *      is used as the attribute value with the ``data-ievv-jsbase-widget``\n         *      DOM element attribute.\n         * @param {AbstractWidget} WidgetClass The widget class.\n         */\n\n    }, {\n        key: 'registerWidgetClass',\n        value: function registerWidgetClass(alias, WidgetClass) {\n            this._widgetClassMap.set(alias, WidgetClass);\n        }\n\n        /**\n         * Remove widget class from registry.\n         *\n         * @param alias The alias that the widget class was registered with\n         *      by using {@link WidgetRegistrySingleton#registerWidgetClass}.\n         */\n\n    }, {\n        key: 'removeWidgetClass',\n        value: function removeWidgetClass(alias) {\n            this._widgetClassMap.delete(alias);\n        }\n\n        /**\n         * Initialize the provided element as a widget.\n         *\n         * @param {Element} element The DOM element to initalize as a widget.\n         *\n         * @throws {ElementIsNotWidgetError} If the element does not have\n         *      the ``data-ievv-jsbase-widget`` attribute.\n         * @throws {InvalidWidgetAliasError} If the widget alias is not in this registry.\n         */\n\n    }, {\n        key: 'initializeWidget',\n        value: function initializeWidget(element) {\n            var alias = element.getAttribute(this._widgetAttribute);\n            if (!alias) {\n                throw new ElementIsNotWidgetError('The\\n\\n' + element.outerHTML + '\\n\\nelement has no or empty' + (this._widgetAttribute + ' attribute.'));\n            }\n            if (!this._widgetClassMap.has(alias)) {\n                throw new InvalidWidgetAliasError('No WidgetClass registered with the \"' + alias + '\" alias.');\n            }\n            var WidgetClass = this._widgetClassMap.get(alias);\n            this._widgetInstanceCounter++;\n            var widgetInstanceId = this._widgetInstanceCounter.toString();\n            var widget = new WidgetClass(element, widgetInstanceId);\n            this._widgetInstanceMap.set(widgetInstanceId, widget);\n            element.setAttribute(this._widgetInstanceIdAttribute, widgetInstanceId);\n            return widget;\n        }\n    }, {\n        key: '_getAllWidgetElementsWithinElement',\n        value: function _getAllWidgetElementsWithinElement(element) {\n            return Array.from(element.querySelectorAll('[' + this._widgetAttribute + ']'));\n        }\n\n        /**\n         * Initialize all widgets within the provided element.\n         *\n         * @param {Element} element A DOM element.\n         */\n\n    }, {\n        key: 'initializeAllWidgetsWithinElement',\n        value: function initializeAllWidgetsWithinElement(element) {\n            var afterInitializeAllWidgets = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._getAllWidgetElementsWithinElement(element)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var widgetElement = _step.value;\n\n                    var widget = this.initializeWidget(widgetElement);\n                    if (widget.useAfterInitializeAllWidgets()) {\n                        afterInitializeAllWidgets.push(widget);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = afterInitializeAllWidgets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _widget = _step2.value;\n\n                    _widget.afterInitializeAllWidgets();\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Get the value of the ``data-ievv-jsbase-widget-instanceid`` attribute\n         * of the provided element.\n         *\n         * @param {Element} element A DOM element.\n         * @returns {null|string}\n         */\n\n    }, {\n        key: 'getWidgetInstanceIdFromElement',\n        value: function getWidgetInstanceIdFromElement(element) {\n            return element.getAttribute(this._widgetInstanceIdAttribute);\n        }\n\n        /**\n         * Get a widget instance by its widget instance id.\n         *\n         * @param widgetInstanceId A widget instance id.\n         * @returns {AbstractWidget} A widget instance or ``null``.\n         */\n\n    }, {\n        key: 'getWidgetInstanceByInstanceId',\n        value: function getWidgetInstanceByInstanceId(widgetInstanceId) {\n            return this._widgetInstanceMap.get(widgetInstanceId);\n        }\n    }, {\n        key: 'getWidgetInstanceFromElement',\n        value: function getWidgetInstanceFromElement(element) {\n            var widgetInstanceId = this.getWidgetInstanceIdFromElement(element);\n            if (widgetInstanceId) {\n                var widgetInstance = this.getWidgetInstanceByInstanceId(widgetInstanceId);\n                if (widgetInstance) {\n                    return widgetInstance;\n                } else {\n                    throw new ElementIsNotInitializedAsWidget('Element\\n\\n' + element.outerHTML + '\\n\\nhas the ' + (this._widgetInstanceIdAttribute + ' attribute, but the id is ') + 'not in the widget registry.');\n                }\n            } else {\n                throw new ElementHasNoWidgetInstanceIdError('Element\\n\\n' + element.outerHTML + '\\n\\nhas no or empty ' + (this._widgetInstanceIdAttribute + ' attribute.'));\n            }\n        }\n\n        /**\n         * Destroy the widget on the provided element.\n         *\n         * @param {Element} element A DOM element that has been initialized by\n         *      {@link WidgetRegistrySingleton#initializeWidget}.\n         *\n         * @throws {ElementHasNoWidgetInstanceIdError} If the element has\n         *      no ``data-ievv-jsbase-widget-instanceid`` attribute or the\n         *      attribute value is empty. This normally means that\n         *      the element is not a widget, or that the widget\n         *      is not initialized.\n         * @throws {ElementIsNotInitializedAsWidget} If the element\n         *      has the ``data-ievv-jsbase-widget-instanceid`` attribute\n         *      but the value of the attribute is not a valid widget instance\n         *      id. This should not happen unless you manipulate the\n         *      attribute manually or use the private members of this registry.\n         */\n\n    }, {\n        key: 'destroyWidget',\n        value: function destroyWidget(element) {\n            var widgetInstanceId = this.getWidgetInstanceIdFromElement(element);\n            if (widgetInstanceId) {\n                var widgetInstance = this.getWidgetInstanceByInstanceId(widgetInstanceId);\n                if (widgetInstance) {\n                    widgetInstance.destroy();\n                    this._widgetInstanceMap.delete(widgetInstanceId);\n                    element.removeAttribute(this._widgetInstanceIdAttribute);\n                } else {\n                    throw new ElementIsNotInitializedAsWidget('Element\\n\\n' + element.outerHTML + '\\n\\nhas the ' + (this._widgetInstanceIdAttribute + ' attribute, but the id is ') + 'not in the widget registry.');\n                }\n            } else {\n                throw new ElementHasNoWidgetInstanceIdError('Element\\n\\n' + element.outerHTML + '\\n\\nhas no or empty ' + (this._widgetInstanceIdAttribute + ' attribute.'));\n            }\n        }\n    }, {\n        key: '_getAllInstanciatedWidgetElementsWithinElement',\n        value: function _getAllInstanciatedWidgetElementsWithinElement(element) {\n            return Array.from(element.querySelectorAll('[' + this._widgetInstanceIdAttribute + ']'));\n        }\n\n        /**\n         * Destroy all widgets within the provided element.\n         * Only destroys widgets on elements that is a child of the element.\n         *\n         * @param {Element} element The DOM Element.\n         */\n\n    }, {\n        key: 'destroyAllWidgetsWithinElement',\n        value: function destroyAllWidgetsWithinElement(element) {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._getAllInstanciatedWidgetElementsWithinElement(element)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var widgetElement = _step3.value;\n\n                    this.destroyWidget(widgetElement);\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n        }\n    }]);\n\n    return WidgetRegistrySingleton;\n}();\n\nexports.default = WidgetRegistrySingleton;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ievv_jsbase/lib/widget/WidgetRegistrySingleton.js\n// module id = 26\n// module chunks = 0"],"sourceRoot":""}